<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T10:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Association for</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>October 31-November 4, 2018. 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Berkë</forename><surname>Ozenç</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Engineering</orgName>
								<orgName type="institution">Is¸ıkIs¸ık University</orgName>
								<address>
									<settlement>Istanbul</settlement>
									<country>Turkey †</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Modern Languages</orgName>
								<orgName type="institution">University of Helsinki</orgName>
								<address>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Razieh</forename><surname>Ehsani</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Engineering</orgName>
								<orgName type="institution">Is¸ıkIs¸ık University</orgName>
								<address>
									<settlement>Istanbul</settlement>
									<country>Turkey †</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Modern Languages</orgName>
								<orgName type="institution">University of Helsinki</orgName>
								<address>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ercan</forename><surname>Solak</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Engineering</orgName>
								<orgName type="institution">Is¸ıkIs¸ık University</orgName>
								<address>
									<settlement>Istanbul</settlement>
									<country>Turkey †</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Modern Languages</orgName>
								<orgName type="institution">University of Helsinki</orgName>
								<address>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Association for</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (System Demonstrations)</title>
						<meeting>the 2018 Conference on Empirical Methods in Natural Language Processing (System Demonstrations) <address><addrLine>Brussels; Belgium</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="25" to="29"/>
							<date type="published">October 31-November 4, 2018. 2018</date>
						</imprint>
					</monogr>
					<note>Confidential Review Copy. DO NOT DISTRIBUTE.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>MorAz is an open-source morphological ana-lyzer for Azerbaijani Turkish. The analyzer is available through both as a website for interactive exploration and as a RESTful web service for integration into a natural language processing pipeline. MorAz implements the morphology of Azerbaijani Turkish following a two-level approach using Helsinki finite-state transducer and wraps the analyzer with python scripts in a Django instance.</p>
			</abstract>
		</profileDesc>
		<revisionDesc>
				<date type="submission" when="-1" />
		</revisionDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Morphological analysis is a crucial part of pro- cessing languages with complex morphologies, such as the agglutinative Azerbaijani Turkish. The morphological analysis provides a number of "readings" or analysis for each word, as a part of the overall NLP task. Indeed, morphological anal- ysis yields some properties of a word like "stem", "root" and morphological role of "suffixes" inside word. Naturally, when the number of suffixes and their combination increase, so does the number of possible analysis of a word.</p><p>Since its application to morphology by Kosken- niemi <ref type="bibr">[Koskenniemi, 1983]</ref>, Finite State Trans- ducer (FST) has become a favored computational tool for representing morphology and phonology. In the two-level approach developed in Kosken- niemi <ref type="bibr">[Koskenniemi, 1983]</ref>, the morphotactics is represented as a separate FST in the first level. The output of the first level is then re-written by a se- quence of phonological re-write rules.</p><p>The two-level approach to morphology has been successfully applied to many languages with sev- eral publicly available analyzers, <ref type="bibr">[Karp et al., 1992]</ref>, <ref type="bibr">[Piskorski et al., 2009]</ref>. There are also a number of open-source toolkits that provide the underlying FST implementation, <ref type="bibr">[Hulden, 2009]</ref>, <ref type="bibr">[Lindén et al., 2011]</ref>, <ref type="bibr">[Schmid, 2005]</ref>.</p><p>In this paper, we present an open-source FST implementation of the full morphology of Azer- baijani Turkish (AT). Noun and Verb morphology were previously discussed in <ref type="bibr">[Ehsani et al., 2017]</ref>. The source code is available for use as a local an- alyzer. It is also available as a RESTful web ser- vice.</p><p>The rest of the paper is organized as follows. In the next section, we review related work. In Sec- tion 3, we outline the structure of MorAz. Section 4 introduces the website and the web service of MorAz. In Section 5, we report some statistics on the performance of the analyzer. Finally, the paper finishes with some concluding remarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related analyzers</head><p>MorAz is the first complete morphological ana- lyzer for AT. There is also a partial implementation of AT morphology within the Apertium project <ref type="bibr">[Forcada et al., 2011]</ref>. This analyzer is based upon the Trmorph <ref type="bibr">[C ¸ ¨ oltekin, 2010]</ref> with the assump- tion that the Azerbaijani Turkish and Anatolian Turkish are similar, whereas our analyzer was de- veloped from scratch directly for the Azerbaijani Turkish. Apertiums coverage of the morphotac- tics and phonology and the extent of its lexicon are quite narrow compared with MorAz. So, Aper- tium Azerbaijani analyzer is not sufficient for test- ing. Moreover, the only way to use Apertium an- alyzer is through incorporating the code base into the NLP pipeline, with all its dependencies and li- braries. The web service interface to MorAz does not require anything other than json construc- tors and parsers. The manually constructed lex- icon of MorAz reduces the number of redundant analyses due to trivial derivations resulting from an automatic root lexicon such as the one used in Apertium. The coverage of morphotactics rules in MorAz is wider and thus results in correct anal- yses where Apertium analyzer results in out-of- vocabulary analyses.</p><p>Morphological analyzers for other Turkic lan- guages have varying levels of completeness and availability. Among these, the most widely stud- ied language is Anatolian Turkish. <ref type="bibr">[Oflazer, 1994]</ref> presented a two-level description and implemen- tation of Turkish morphology. Their implemen- tation uses xfst <ref type="bibr">[Beesley and Karttunen, 2003]</ref> as the underlying FST implementation. Their ana- lyzer is not available publicly. Following the same approach as Oflazer's, S ¸ ahin's <ref type="bibr">[S ¸ ahin et al., 2013]</ref>, re-implemented the analyzer on Xerox <ref type="bibr">[Beesley and Karttunen, 2003]</ref>. S ¸ ahin's analyzer is avail- able through a web interface and as a web service, though, the source is closed. TRMorph <ref type="bibr">[C ¸ ¨ oltekin, 2010]</ref> is an open-source analyzer for Anatolian Turkish, implemented over SFST. It is available as an interactive web tool but lacks a web service interface. Zemberek <ref type="bibr">[Akın and Akın, 2007]</ref> is an- other open-source, Java-based analyzer for Anato- lian Turkish.</p><p>For Kazakh, there is an open-source analyzer in Apertium project. There is also, the analyzer de- scribed in <ref type="bibr">[Kessikbayeva and Cicekli, 2016]</ref>, how- ever, currently, the implementation is not publicly available. For Turkmen and Uighur, the analyz- ers described in <ref type="bibr">[Tantug et al., 2006]</ref> and <ref type="bibr">[Orhun et al., 2009]</ref> are not publicly available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Structure of MorAz</head><p>Azerbaijani Turkish (AT) is a Turkic language spoken by about 30 million people, mainly in Iran and Azerbaijan. AT is an agglutinative language with a predominant SOV word order, although scrambling is common especially in spoken form. The phonology of AT has vowel harmony, devoic- ing, and apocope. Written AT uses Latin alphabet in Azerbaijan and Arabic alphabet in Iran. The current implementation of MorAz works with the Latin alphabet.</p><p>The FST description of the morphology of AT as implemented in MorAz consists of 4 main parts; nominal and verb inflections, nominal predicate, and derivation. Derivation FST is the bridge that connects the other 3 FSTs. In detail, the derivation FST has 36, nominal inflection has 36, nominal predicate has 22 and verb inflection has 145 rules. Morphotactics level which is also called level 1 has 239 rules and 67 states in total. Complete FST diagram of MorAz is shown in <ref type="figure" target="#fig_1">Figure 2</ref>. Since ad- jectives in AT behave like nouns when their suffix- ation is concerned, we treat adjective and nouns as a single morphological class Nominal. At a mor- phosyntactic level, there will still be two distinct POS tags for adjectives and nouns. In MorAz, we used 8 morphological categories: Nominal, Verb, Predicate, Adverb, Number, Postposition and In- terjection.</p><p>In MorAz we represent the abstract form of a morpheme either as a key-value pair or just as a key.</p><p>The key-value form is more suited for consis- tently representing the inflection paradigms where a zero surface realization of the abstract mor- pheme corresponds to a particular assignment of the inflection feature. For example, Number fea- ture has zero surface form when Singular. When it is Plural, it is realized as -lar or -l@r depending on vowel harmony. Since every Nominal has a Num- ber feature, we reserve a number slot in Nominal Inflection.</p><p>We denote the key-value abstract morphemes as &lt;Key Mnemonic:Value&gt;.</p><p>When a morphological feature is optional, we use just a mnemonic key to represent the corre- sponding morpheme in the form &lt;Key&gt;. For ex- ample, all derivational morphemes are optional.</p><p>The following example illustrates the use of ab- stract morphemes.</p><p>(1) x@st@likd@n x@st@&lt;NOM&gt; &lt;State&gt;&lt;NOM&gt; &lt;Num:Sg&gt;&lt;Poss:No&gt;&lt;Case:Abl&gt;</p><p>The documentation for all the mnemonic keys and their possible values are provided on the web- site of MorAz. There are a total of 38 keys in the key-value pair form and 40 optional keys, 20 of which correspond to derivational morphemes. <ref type="figure">Figure 1</ref> gives the FST for Nominal inflection as an illustration of the morphotactics of MorAz. The expansion of transition labels sn 1 -sn 1 is given in full in the expanded diagrams on the MorAz web- site.</p><p>The root lexicon includes 2707 verb roots, 35547 nominal roots as well as 14937 person names and 929 adverbs. We obtained the root lexicon of MorAz, by reducing a large lexicon of roots. In the reduction, we manually eliminated the roots that can be trivially derived from other Nom &lt;NOM&gt; Pl Sg Poss2 Poss1</p><p>Fam Case &lt; N u m : P l &gt; : -l A r &lt; N u m : S g &gt; : -φ sn1 s n2 sn3 &lt; F a m &gt; :-lA r &lt; F a m &gt; : -g i l &lt; F a m &gt; : -g i l l @ r sn 4</p><p>Figure 1: Nominal inflection roots that are not eliminated. The cases where the derived form undergoes a meaning drift away from the one that the derivational morpheme nominally entails are distinguished. If the drift is so large that the meaning of the derivation cannot be inferred from those of the root and the suffixes, then a new word needs to be added to the dictionary <ref type="bibr">[Ehsani et al., 2018]</ref>. For example, the large lexicon con- tains both (2) x@st@ x@st@&lt;NOM&gt; sick and (3) x@st@lik x@st@&lt;NOM&gt;&lt;State&gt; sickness where 3 is trivially derived from 2. In AT, there are 4 distinct morphemes for Causative and 2 morphemes for Passive.</p><p>In order to handle the selection of Causative and Passive morphemes, we manually marked our verb lexicon of about 2700 verb roots with 15 verb classes. These include the classes represent- ing the cases where a verb root cannot be suffixed with Causative for some intransitive verbs and the cases where a Passive is semantically impossible. For example, "¨ oyren" (learn) has no Causative and "dol" (be filled) has no Passive form.</p><p>The second level of MorAz deals with the phonology. The first level output consists of <ref type="table">Table 1</ref>: Archiphonemes used at the first level output of MorAz base morphemes and archmorphemes. Archmor- phemes use 5 archiphonemes which are given in <ref type="table">Table 1</ref>.</p><formula xml:id="formula_0">Archiphoneme Surface forms A @, a I ı, i, u, ¨ u K k, y Q q, ˘ g D d, t N d, n</formula><p>The archiphoneme A maps to its surface form to satisfy back-front harmony. Similarly, I maps to its surface forms under back-front and round- edness harmony. K and Q choose their surface forms through palatalization and velarization, re- spectively. D chooses its surface form to adapt to the voicing feature of its context. Finally, N is a convenience archiphoneme that we use to unify two surface forms of the Ablative morpheme.</p><p>A common phonological phenomenon in AT is the insertion of epenthetic letters y, n, s ¸, and s. The choice of the epenthesis phoneme depends on the phonological and morphological context. In MorAz implementation, we consider epenthetic as optional phonemes attached to morphemes. So, the phonological rules in the second level drop the epenthetic depending only on the phonologi- cal context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Website and API</head><p>MorAz uses Helsinki finite-state transducer (HSFT) for the implementation of the two-level morphology. We wrapped the compiled analyzer with python scripts in a Django web server. The source code for the analyzer is available in GitHub 1 .</p><p>MorAz website includes an interactive query screen shown in <ref type="figure" target="#fig_2">Figure 3</ref>. It allows querying mul- tiple tokens separated by line breaks.</p><p>The web service API 2 uses the json format for posting the list of tokens to be analyzed. The output is also in json format as an array of ar- rays where the innermost array contains the list of analyses for a single token. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Statistics</head><p>In order to measure the performance of MorAz, we ran it over an input text collected from BBC Az@rbaycanca. Since MorAz lexicon is not com- plete in terms of named entities, we eliminated from the input all the tokens that start with cap- ital letters. What remained was a test input is a list of 10890 distinct Azerbaijani words. We also eliminated punctuation marks.</p><p>Of all the tokens fed into the analyzer, MorAz did not return an analysis for %23.92 of total words. For the ones that it provided an analysis, on average there were 1.96 analyses per word. Since the token is Azerbaijani word, it is possible to use them to test other Azerbaijani morphological ana- lyzers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper, we presented MorAz, an open- source morphological analyzer for Azerbaijani Turkish. MorAz provides an interactive query in- terface for short pieces of tokenized text through its website. For larger inputs, it exposes a simple RESTful web interface.</p><p>MorAz has a manually crafted minimal lexicon, with an aim to reduce the number of redundant analyses. Manual configuration is an ongoing pro- cess and we modify the lexicon by inspecting the results of analyses.</p><p>As a further development, we are planning to provide an interactive tool to generate surface forms out of abstract morphemes which will be useful for exploring the language.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>References</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Razieh Ehsani, Berkë</head><p>Ozenç, and Ercan Solak. A fst description of noun and verb morphology of azarbai- jani turkish. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Confidential Review Copy. DO NOT DISTRIBUTE.</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Complete FST Diagram of MorAz</figDesc><graphic url="image-1.png" coords="4,72.00,160.18,452.91,242.79" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Interactive query in MorAz.</figDesc><graphic url="image-7.png" coords="5,140.03,62.81,317.48,161.07" type="bitmap" /></figure>

			<note place="foot" n="1"> https://github.com/berkeozenc/MorAz 2 http://ddil.isikun.edu.tr/morazws/</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
