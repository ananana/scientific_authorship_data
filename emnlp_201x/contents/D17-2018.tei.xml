<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T12:19+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SUPWSD: A Flexible Toolkit for Supervised Word Sense Disambiguation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>September 7-11, 2017</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simone</forename><surname>Papandrea</surname></persName>
							<email>papandrea.simone@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Sapienza University of Rome</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alessandro</forename><surname>Raganato</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Sapienza University of Rome</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Delli Bovi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Sapienza University of Rome</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">SUPWSD: A Flexible Toolkit for Supervised Word Sense Disambiguation</title>
					</analytic>
					<monogr>
						<title level="j" type="main">EMNLP System Demonstrations</title>
						<meeting> <address><addrLine>Copenhagen, Denmark</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="103" to="108"/>
							<date type="published">September 7-11, 2017</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In this demonstration we present SUP-WSD, a Java API for supervised Word Sense Disambiguation (WSD). This toolkit includes the implementation of a state-of-the-art supervised WSD system , together with a Natural Language Processing pipeline for preprocessing and feature extraction. Our aim is to provide an easy-to-use tool for the research community, designed to be modular, fast and scalable for training and testing on large datasets. The source code of SUPWSD is available at http: //github.com/SI3P/SupWSD.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Word Sense Disambiguation <ref type="bibr">(Navigli, 2009, WSD)</ref>, is one of the long-standing challenges of Natural Language Understanding. Given a word in context and a pre-specified sense inven- tory, the task of WSD is to determine the in- tended meaning of that word depending on the context. Several WSD approaches have been pro- posed over the years and extensively studied by the research community, ranging from knowledge- based systems to semi-supervised and fully su- pervised models <ref type="bibr" target="#b1">(Agirre et al., 2014;</ref><ref type="bibr">Taghipour and Ng, 2015b;</ref><ref type="bibr" target="#b4">Iacobacci et al., 2016)</ref>. Nowadays a new line of research is emerg- ing, and WSD is gradually shifting from a purely monolingual (i.e. English) setup to a wider mul- tilingual setting <ref type="bibr" target="#b9">Moro and Navigli, 2015)</ref>. Since scaling up to multiple languages is considerably easier for knowledge- based systems, as they do not require sense- annotated training data, various efforts have been made towards the automatic construction of high- quality sense-annotated corpora for multiple lan- guages ( <ref type="bibr">Otegi et al., 2016;</ref><ref type="bibr" target="#b3">Delli Bovi et al., 2017</ref>), aimed at overcoming the so-called knowledge ac- quisition bottleneck of supervised models <ref type="bibr">(Pilehvar and Navigli, 2014)</ref>. These efforts include the use of Wikipedia, which can be considered a full-fledged, manually sense-annotated resource for numerous languages, and hence exploited as training data ( <ref type="bibr" target="#b2">Dandala et al., 2013)</ref>.</p><p>Beside the automatic harvesting of sense- annotated data for different languages, a variety of multilingual preprocessing pipelines has also been developed across the years ( <ref type="bibr">Padr and Stanilovsky, 2012;</ref><ref type="bibr" target="#b0">Agerri et al., 2014;</ref><ref type="bibr" target="#b6">Manning et al., 2014</ref>). To date, however, very few attempts have been made to integrate these data and tools with a su- pervised WSD framework; as a result, multilin- gual WSD has been almost exclusively tackled with knowledge-based systems, despite the fact that supervised models have been proved to con- sistently outperform knowledge-based ones in all standard benchmarks <ref type="bibr" target="#b3">(Raganato et al., 2017)</ref>. As regards supervised WSD, It Makes Sense ( <ref type="bibr">Zhong and Ng, 2010, IMS)</ref> is indeed the de-facto state-of- the-art system used for comparison in WSD, but it is available only for English, with the last major update dating back to 2010.</p><p>The publicly available implementation of IMS also suffers from two crucial drawbacks: (i) the design of the software makes the current code dif- ficult to extend (e.g. with classes taking as input more than 15 parameters); (ii) the implementation is not optimized for larger datasets, being rather time-and resource-consuming. These difficulties hamper the work of contributors willing to update it, as well as the effort of researchers that would like to use it with languages other than English.</p><p>In this paper we present SUPWSD, whose ob- jective is to overcome the aforementioned draw- backs, and facilitate the use of a supervised WSD software for both end users and researchers. SUP- WSD is designed to be modular and highly flex- ible, enabling contributors to extend it with ease. Its usage is simple and immediate: it is based on a jar file with only 2 commands and 3 parameters, along with an XML configuration file for specify- ing customized settings. SUPWSD supports the most widely used preprocessing tools in the re- search community: Stanford coreNLP ( <ref type="bibr" target="#b6">Manning et al., 2014</ref>), openNLP 1 , and TreeTagger <ref type="bibr">(Schmid, 2013)</ref>; as such, SUPWSD can directly handle all the languages supported by these tools. Finally, its architecture design relies on commonly used design patterns in Java (such as Factory and Ob- server among others), which make it flexible for a programmatic use and easily expandable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">SUPWSD: Architecture</head><p>In this section we describe the workflow of SUP- WSD. <ref type="figure" target="#fig_0">Figure 1</ref> shows the architecture design of our framework: it is composed of four main mod- ules, common for both the training and testing 1 opennlp.apache.org/ phase: (i) input parsing, (ii) text preprocessing, (iii) features extraction and (iv) classification.</p><p>Input parsing. Given either a plain text or an XML file as input, SUPWSD first parses the file and extracts groups of sentences to provide them as input for the subsequent text preprocess- ing module. Sentence grouping is used to paral- lelize the preprocessing module's execution and to make it less memory-intensive. Input files are loaded in memory using a lazy procedure (i.e. the parser does not load the file entirely at once, but processes it according to the segments of inter- est) which enables a smoother handling of large datasets. The parser specification depends on the format of the input file via a Factory patterns, in such a way that new additional parsers can eas- ily be implemented and seamlessly integrated in the workflow (c.f. Section 3). SUPWSD currently features 6 different parsers, targeted to the various formats of the Senseval/SemeEval WSD compe- tition (both all-words and lexical sample), along with a parser for plain text.</p><p>Text preprocessing. The text preprocessing module runs the pre-specified preprocessing pipeline on the input text, all the way from sen- tence splitting to dependency parsing, and re- trieves the data used by the feature extraction mod- ule to construct the features. This module con- sists of a five-step pipeline: sentence splitting, to- kenization, part-of-speech tagging, lemmatization and dependency parsing. SUPWSD currently sup- ports two preprocessing options: Stanford and Hy- brid. Both can be switched on and off using the configuration file. The former (default choice) provides a wrapper for the Stanford NLP pipeline, and selects the default Stanford model for each component. The latter, instead, enables the user to customize their model choice for each and every preprocessing step. For instance, one possible cus- tomization is to use the openNLP models for tok- enization and sentence splitting, and the Stanford models for part-of-speech tagging and lemmatiza- tion. In addition, the framework enables the user to provide an input text where preprocessing infor- mation is already included.</p><p>The communication between the input parsing and the text preprocessing modules <ref type="figure" target="#fig_0">(Figure 1)</ref> is handled by the Analyzer, a component that han- dles a fixed thread pool and outputs the feature in- formation collected from the input text. Features extraction. The feature extraction module takes as input the data extracted at pre- processing time, and constructs a set of features that will be used in the subsequent stage to train the actual SUPWSD model. As in the previous stage, the user can rely on the configuration file ( <ref type="figure" target="#fig_1">Figure 2</ref>) to select which features to enable or disable. SUPWSD currently supports five stan- dard features: (i) part-of-speech tag of the target word and part-of-speech tags surrounding the tar- get word (with a left and a right window of length 3); (ii) surrounding words, i.e. the set of word tokens (excluding stopwords from a pre-specified list) appearing in the context of the target word; (iii) local collocations, i.e. ordered sequences of tokens around the target word; (iv) pre-trained word embedding, integrated according to three dif- ferent strategies, as in <ref type="bibr" target="#b4">Iacobacci et al. (2016)</ref>; 2 (v) syntactic relations, i.e. a set of features based on the dependency tree of the sentence, as in <ref type="bibr" target="#b5">Lee and Ng (2002)</ref>. SUPWSD allows the user to select ap- propriate cutoff parameters for features (i) to (iii), in order to filter them out according to a minimum frequency threshold.</p><p>Classification. The classification module con- stitutes the last stage of the SUPWSD pipeline. On the basis of the feature set constructed in the previous stage, this module leverages an off-the- shelf machine learning library to run a classifi- cation algorithm and generate a model for each sense-annotated word type in the input text. The current version of SUPWSD relies on two widely used machine learning frameworks: LIBLIN-EAR <ref type="bibr">3</ref> and LIBSVM 4 . The classification module of SUPWSD operates on top of these two libraries.</p><p>Using the configuration file ( <ref type="figure" target="#fig_1">Figure 2</ref>) the user can select which library to use and, at the same time, choose the underlying sense inventory. The current version of SUPWSD supports two sense inventories: WordNet ( <ref type="bibr" target="#b7">Miller et al., 1990</ref>) <ref type="bibr">5</ref> and BabelNet (Navigli and Ponzetto, 2012) <ref type="bibr">6</ref> . Specify- ing a sense inventory enables SUPWSD to exploit the Most Frequent Sense (MFS) back-off strategy at test time for those target words for which no training data are available. <ref type="bibr">7</ref> If no sense inventory is specified, the model will not provide an answer for those target words.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SUPWSD: Adding New Modules</head><p>In this section we illustrate how to implement new modules for SUPWSD and integrate them into the framework at various stages of the pipeline.</p><p>Adding a new input parser. In order to integrate a new XML parser, it is enough to extend the XMLHandler class and im- plement the methods startElement, endElement and characters (see the example in <ref type="figure" target="#fig_2">Figure 3</ref>). With the global variable mAnnotationListener, the programmatic user can directly specify when to transmit the parsed text to the text preprocessing module. Instead, in order to integrate a general parser for custom text, it is enough to extend the Parser class and implement the parse method. An example is provided by the PlainParser class that implements a parser for a plain textual file.</p><p>Adding a new preprocessing module. To add a new preprocessing module into the pipeline, it is enough to implement the interfaces in the package modules.preprocessing.units. It is also possible to add a brand new step to the pipeline (e.g. a Named Entity Recognition module) by extending the class Unit and im- plementing the methods to load the models asyn- chronously. Adding a new feature. A new feature for SUP- WSD can be implemented with a two-step pro- cedure. The first step consists in creating a class that extends the abstract class Feature. The builder of this class requires a unique key and a name. It is also possible to set a default value for the feature by implementing the method getDefaultValue. The second step consists in implementing an extractor for the new fea- ture via the abstract class FeatureExtractor <ref type="figure" target="#fig_3">(Figure 4)</ref>. Each FeatureExtractor has a cut-off value and declares the name of the class through the method getFeatureClass.</p><p>Adding a new classifier. A new classifier for SUPWSD can be implemented by extending the generic abstract class Classifier <ref type="figure" target="#fig_4">(Figure 5)</ref>, which declares the methods to train and test the models. Feature conversion is carried out with the generic method getFeatureNodes. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SUPWSD: Usage</head><p>SUPWSD can be used effectively via the com- mand line with just 4 parameters ( <ref type="figure" target="#fig_5">Figure 6</ref>): the first parameter toggles between the train and test mode; the second parameter contains the path to the configuration file; the third and fourth parame- ters contain the paths to the dataset and the associ- ated key file (i.e. the file containing the annotated senses for each target word) respectively. <ref type="figure" target="#fig_1">Figure 2</ref> shows an example configuration file for SUPWSD. As illustrated throughout Section 2, the SUPWSD pipeline is entirely customizable by changing these configuration parameters, and al- lows the user to employ specific settings at each stage of the pipeline (from preprocessing to ac- tual classification). The working directory tag encodes the path in the file system where the trained models are to be saved. Finally, the writer tag enables the user to choose the pre- ferred way of printing the test results (e.g. with or without confidence scores for each sense). SUPWSD can also be used programmatically through its Java API, either using the toolkit (the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tr. Corpus</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>System</head><p>Senseval-2 Senseval-3 SemEval-07 SemEval-13 SemEval-15</p><p>SemCor  <ref type="table">Table 1</ref>: F-scores (%) of different models in five all-words WSD datasets.</p><p>main class SupWSD, provided with the two static methods train and test, shares the same usage of the command line interface) or using an HTTP RESTful service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Evaluation</head><p>We evaluated SUPWSD on the evaluation frame- work of <ref type="bibr" target="#b3">Raganato et al. (2017)</ref> 8 , which includes five test sets from the Senseval/Semeval series and two training corpus of different size, i.e. Sem- Cor ( <ref type="bibr" target="#b8">Miller et al., 1993)</ref> and OMSTI (Taghipour and Ng, 2015a). As sense inventory, we used WordNet 3.0 ( <ref type="bibr" target="#b7">Miller et al., 1990</ref>) for all open-class parts of speech. We compared SUPWSD with the original implementation of IMS, including the best configurations reported in <ref type="bibr" target="#b4">Iacobacci et al. (2016)</ref> which exploit word embedding as features. As shown in <ref type="table">Table 1</ref>, the performance of SUPWSD consistently matches up to the original implemen- tation of IMS in terms of F-Measure, sometimes even outperforming its competitor by a consider- able margin; this suggests that a neat and flexible implementation not only brings benefits in terms of usability of the software, but also impacts on the accuracy of the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Speed Comparisons</head><p>We additionally carried out an experimental eval- uation on the performance of SUPWSD  given that both implementations are written in Java, we tested their programmatic usage within a Java program. We relied on a testing corpus with 1M words and more than 250K target instances to disambiguate, and we used both frameworks on SemCor and OMSTI as training sets. All exper- iments were performed using an Intel i7-4930K CPU 3.40GHz twelve-core machine. Figures in <ref type="table" target="#tab_2">Table 2</ref> show a considerable gain in execution time achieved by SUPWSD, which is around 3 times faster than IMS on Semcor, and almost 6 times faster than IMS on OMSTI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Release</head><p>In this demonstration we presented SUPWSD, a flexible toolkit for supervised Word Sense Disam- biguation which is designed to be modular, highly customizable and easy to both use and extend for end users and researchers. Furthermore, beside the Java API, SUPWSD provides an HTTP RESTful service for programmatic access to the SUPWSD framework and the pre-trained models.</p><p>Our experimental evaluation showed that, in ad- dition to its flexibility, SUPWSD can replicate or outperform the state-of-the-art results reported by the best supervised models on standard bench- marks, while at the same time being optimized in terms of execution time.</p><p>The SUPWSD framework (including the source code, the pre-trained models, and an online demo) is available at http://github.com/SI3P/ SupWSD. We release the toolkit here described under the GNU General Public License v3.0, whereas the RESTful service is licensed under a Creative Commons Attribution-Non Commercial- Share Alike 3.0 License.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Architecture design of SUPWSD.</figDesc><graphic url="image-1.png" coords="2,93.36,62.80,175.56,353.86" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The XML configuration file used by SUPWSD.</figDesc><graphic url="image-2.png" coords="3,117.53,62.80,362.49,170.71" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: An example of XML parser.</figDesc><graphic url="image-3.png" coords="4,72.00,62.80,226.00,251.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The abstract class modeling a feature extractor.</figDesc><graphic url="image-4.png" coords="4,75.67,528.45,210.92,151.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: The abstract class modeling a classifier.</figDesc><graphic url="image-5.png" coords="4,307.28,62.81,219.07,66.86" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Command line usage for SUPWSD.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Speed comparison for both the training 
and testing phases. 

</table></figure>

			<note place="foot" n="2"> We implemented a cache mechanism in order to deal efficiently with large word embedding files.</note>

			<note place="foot" n="3"> http://liblinear.bwaldvogel.de 4 https://www.csie.ntu.edu.tw/ ˜ cjlin/ libsvm 5 https://wordnet.princeton.edu 6 http://babelnet.org 7 The MFS is based on the lexicographic order provided by the sense inventory (either WordNet or BabelNet).</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors gratefully acknowledge the support of the Sapienza Research Grant 'Avvio alla <ref type="bibr">Ricerca 2016'.</ref> </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Ixa pipeline: Efficient and ready to use multilingual nlp tools</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rodrigo</forename><surname>Agerri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josu</forename><surname>Bermudez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">German</forename><surname>Rigau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LREC</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="3823" to="3828" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Random Walks for Knowledge-Based Word Sense Disambiguation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eneko</forename><surname>Agirre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oier</forename><surname>Lopez De Lacalle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aitor</forename><surname>Soroa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="57" to="84" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Multilingual word sense disambiguation using wikipedia</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bharath</forename><surname>Dandala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rada</forename><surname>Mihalcea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Razvan</forename><surname>Bunescu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth International Joint Conference on Natural Language Processing</title>
		<meeting>the Sixth International Joint Conference on Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="498" to="506" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Eurosense: Automatic harvesting of multilingual sense annotations from parallel text</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Delli Bovi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">José</forename><surname>Camacho-Collados</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alessandro</forename><surname>Raganato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACL</title>
		<meeting>of ACL</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Embeddings for Word Sense Disambiguation: An Evaluation Study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ignacio</forename><surname>Iacobacci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><forename type="middle">Taher</forename><surname>Pilehvar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACL</title>
		<meeting>of ACL</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="897" to="907" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An empirical evaluation of knowledge sources and learning algorithms for word sense disambiguation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoong Keok</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hwee Tou</forename><surname>Ng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of EMNLP</title>
		<meeting>of EMNLP</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Stanford CoreNLP natural language processing toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mihai</forename><surname>Surdeanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jenny</forename><surname>Finkel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><forename type="middle">J</forename><surname>Bethard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Mcclosky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Association for Computational Linguistics (ACL) System Demonstrations</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="55" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">WordNet: an online lexical database</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><forename type="middle">A</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Beckwith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christiane</forename><forename type="middle">D</forename><surname>Fellbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Lexicography</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="235" to="244" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A semantic concordance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><forename type="middle">A</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudia</forename><surname>Leacock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Randee</forename><surname>Tengi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><forename type="middle">T</forename><surname>Bunker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of HLT</title>
		<meeting>of HLT</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="303" to="308" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">SemEval2015 Task 13: Multilingual All-Words Sense Disambiguation and Entity Linking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Moro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SemEval</title>
		<meeting>of SemEval</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="288" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Entity Linking meets Word Sense Disambiguation: a Unified Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Moro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alessandro</forename><surname>Raganato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TACL</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="231" to="244" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Word sense disambiguation: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">10</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Multilingual word sense disambiguation and entity linking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Moro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">COLING (Tutorials)</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="5" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">BabelNet: The Automatic Construction, Evaluation and Application of a Wide-Coverage Multilingual Semantic Network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Navigli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simone</forename><forename type="middle">Paolo</forename><surname>Ponzetto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">193</biblScope>
			<biblScope unit="page" from="217" to="250" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
