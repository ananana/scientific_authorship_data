<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T11:03+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Beyond Sentential Semantic Parsing: Tackling the Math SAT with a Cascade of Tree Transducers</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>September 7-11, 2017. 2017</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Hopkins</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Allen Institute for Artificial Intelligence Seattle</orgName>
								<address>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cristian</forename><surname>Petrescu-Prahova</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Allen Institute for Artificial Intelligence Seattle</orgName>
								<address>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roie</forename><surname>Levin</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Allen Institute for Artificial Intelligence Seattle</orgName>
								<address>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronan</forename><surname>Le Bras</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Allen Institute for Artificial Intelligence Seattle</orgName>
								<address>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alvaro</forename><surname>Herrasti</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Allen Institute for Artificial Intelligence Seattle</orgName>
								<address>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vidur</forename><surname>Joshi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Allen Institute for Artificial Intelligence Seattle</orgName>
								<address>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Beyond Sentential Semantic Parsing: Tackling the Math SAT with a Cascade of Tree Transducers</title>
					</analytic>
					<monogr>
						<title level="m">Natural Language Processing</title>
						<meeting> <address><addrLine>Copenhagen, Denmark</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="795" to="804"/>
							<date type="published">September 7-11, 2017. 2017</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present an approach for answering questions that span multiple sentences and exhibit sophisticated cross-sentence anaphoric phenomena, evaluating on a rich source of such questions-the math portion of the Scholastic Aptitude Test (SAT). By using a tree transducer cascade as its basic architecture, our system (called EU-CLID) propagates uncertainty from multiple sources (e.g. coreference resolution or verb interpretation) until it can be confidently resolved. Experiments show the first-ever results (43% recall and 91% precision) on SAT algebra word problems. We also apply EUCLID to the public Dolphin algebra question set, and improve the state-of-the-art F 1-score from 73.9% to 77.0%.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Math word problems pose questions that are chal- lenging for current question answering (QA) sys- tems to solve. Consider the following question originating from a study guide for the Math SAT 1 :</p><p>Example 1: Suppose 3x + y = 15, where x is a positive integer. What is the difference between the largest possi- ble value of y and the smallest possible value of x, assuming that y is also a pos- itive integer?</p><p>The correct response is 11; however its relation- ship with the other numbers in the question (3 and 15) is oblique and not easily mapped to an opera- tor tree or equation template. This encourages us to build a semantic parser that produces an explicit representation of what the question is asking, if we want to make quantitative progress on the question set. However, while it is not hard to formalize the semantics: it is not clear how to devise a compositional trans- formation from the original question to the formal semantics, since the meaning is dispersed through- out the discourse, such that neither the maximiza- tion nor the minimization can be locally derived from some subtree of the syntactic structure.</p><formula xml:id="formula_0">X</formula><p>Moreover, SAT questions quickly reach the lim- its of preprocessing tools like anaphora resolution:</p><p>Example 2: r, s, t In the sequence above, if each term after the first is x more than the previous term, what is the average of r, s, and t in terms of r and x?</p><p>Understanding this question requires a nuanced resolution of each term after the first to the subse- quence s, t, a coreference resolution beyond the grasp of the current state of the art.</p><p>Generally speaking, question discourse (with its complex cross-sentence semantics and anaphora) has not been a major focus of QA research. In this paper, we use math SAT questions to develop an approach to handling question discourse. Our parser uses an intermediate semantic language that allows complex semantics (like those of Example 1) to be compositionally constructed from a multi- sentence question passage (Section 5.1). By archi- tecting our semantic parser as a cascade of nonde- terministic tree transducers <ref type="bibr" target="#b4">(GÃ©cseg and Steinby, 1997)</ref>, we can propagate uncertainty until it can be confidently resolved -sometimes as late as during program interpretation (Section 6). The integrated approach also allows us to handle novel classes of anaphoric phenomena by framing anaphora reso- lution as an operation on a parse forest decorated with implicits (Section 5.2).</p><p>Ultimately we produce an end-to-end system (called EUCLID) that achieves 43% recall and 91% precision on SAT closed-vocabulary algebra ques- tions, a subset (described in more detail in the next section) that constitutes approximately 45% of a typical math SAT. We also achieve state-of-the-art results on the publicly released Dolphin question set ( <ref type="bibr" target="#b21">Shi et al., 2015</ref>), a set of more than 1500 al- gebra questions released by Microsoft Research. Finally, we provide a look at our early progress on extending the system to tackle the math SAT in its entirety.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Anatomy of a Math SAT</head><p>To assess our semantic parser, we compiled three question sets. Two question sets were created from sample SAT exams found in study guides (pub- lished by <ref type="bibr">Kaplan and McGraw-Hill)</ref>. We used the Kaplan set (12 exams, 648 total questions) for training/development and the McGraw-Hill set (13 exams 2 , 686 total questions) for devtest. We re- served official practice exams (8 exams, 396 total questions) released by the College Board for final testing. We did not subselect questions from the exams, rather we used them in their entirety. <ref type="bibr">3</ref> We encoded mathematical formatting using LATEX.</p><p>During the compilation of these questions, they were split into 4 broad categories:</p><p>1. Algebra (closed vocabulary) (e.g. Exam- ples 1 and 2) : Algebra questions drawn from a limited mathematical vocabulary.</p><p>2. Algebra (open vocabulary) (e.g. "At a bas- ketball tournament involving 8 teams, each team played 4 games with each of the other teams. How many games were played at this tournament?") : Algebra questions drawn from an open-ended vocabulary.</p><p>3. Geometry: Geometry questions, typically involving a diagram.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>Other A catch-all for questions that do not fall neatly into the above categories.</p><p>In this paper, we focus our attention on closed- vocabulary algebra, which constitutes approxi- mately 45% of the questions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>Most of the recent work on math questions has focused on open-vocabulary algebra problems, also known as math story problems. Benchmark datasets include Alg514 ( ), AI2 ( <ref type="bibr" target="#b5">Hosseini et al., 2014</ref>), Illinois and Common- core ( <ref type="bibr" target="#b18">Roy and Roth, 2015)</ref>, and DRAW <ref type="bibr" target="#b22">(Upadhyay and Chang, 2016)</ref>. A common property of these datasets is that they have been curated such that any given question can be solved by a limited- depth operator tree (AI2, Illinois, Commoncore) or a limited set of equation templates (Alg514 and DRAW handle the complex semantics found in Examples 1 and 2. Very recently, ( <ref type="bibr" target="#b12">Matsuzaki et al., 2017</ref>) pub- lished a paper about their semantic parsing ap- proach to pre-university math problems (harvested from Japanese exams rather than the Math SAT). It is challenging to do a direct comparison, since they report results only on the Japanese-language exams. They report end-to-end system results of 11% recall and 50% precision.</p><p>( <ref type="bibr" target="#b21">Shi et al., 2015</ref>) harvested a fairly diverse set of closed-vocabulary algebra problems (called Dol- phin) from the web and provided the first results on that dataset. Here, we demonstrate how to handle the more complex discourse semantics and anaphoric phenomena found in Math SAT ques- tions, and establish a new state-of-the-art result on the Dolphin benchmark. <ref type="figure" target="#fig_1">Figure 1</ref> shows a high-level view of our QA sys- tem. We will give a general overview in this sec- tion, and then explore more advanced concepts and examples in the subsequent section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">System Overview</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Intermediate Languages</head><p>Our QA system has two basic languages that me- diate the transformation from the question passage to the answer: a syntactic language A and a se- mantic language B.</p><p>Syntactic language A has a constituent-style syntax convenient 4 for the tree transducers in our cascade. In <ref type="figure" target="#fig_2">Figure 2</ref>, we show an example. We have three basic node types: clauses, entities (these correspond to noun phrases), and details (these correspond to adjectival and adverbial mod- ifiers). Each node has a table of fields (key-value pairs) that store child relationships and auxiliary information like tense and number. For brevity, this additional structure is omitted from <ref type="figure" target="#fig_2">Figure 2</ref>, but a more explicit visualization can be found in <ref type="figure">Figure 4</ref> (top).</p><p>A program in semantic language B is a set of constraint declarations. For instance, the question from the form of the tree is unimportant, it will be con- venient to use a more legible LISP-style format, e.g.</p><formula xml:id="formula_1">(&lt; (+ m 3) 15) (&gt; m 0) (int m) (proto m M ) (= ?q (sum M ))</formula><p>Every constraint in this program should be easily understandable, except for (proto m M ), which loosely means that M is the set of all possible val- ues of m. In Section 5.1, we discuss the proto directive in more detail.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Syntactic Parsing</head><p>The first stage of our QA system parses the ques- tion passage into language A 5 . We implemented the parser as the backward application of an ex- tended top-down tree-to-string (XTOPs) trans- ducer <ref type="bibr">6</ref> .</p><p>We refer the reader to ( <ref type="bibr" target="#b11">Maletti et al., 2009</ref>) for a theoretical presentation of XTOPs, and instead give a brief intuitive presentation of the device. An XTOPs transducer defines a top-down transforma- tion from a tree language to a string language, via a set of stateful rewrite rules. For instance, rules (i) through (v) of <ref type="figure">Figure 4</ref> can generate the string "a positive integer" from the A-tree pictured at the top of the figure, given start state qNP.</p><p>Given an XTOPs transducer M , we can parse string s through backward application of the trans- ducer, i.e. compute the set of trees M â1 (s) that could have generated string s from the start <ref type="bibr">5</ref> Recall: language A is the syntactic language described in the previous section. An example is shown in <ref type="figure" target="#fig_2">Figure 2</ref>. <ref type="bibr">6</ref> We chose to implement the parsing step by engineering a transducer rather than using an off-the-shelf statistical parser. While we tried to retrofit a parser -e.g. as done by <ref type="bibr" target="#b20">(Seo et al., 2015)</ref> -to serve our needs, it turned out to be somewhat more robust (and relatively simple) to engineer our own.</p><p>state. Efficient backward application of XTOPs transducers is supported by packages like Tiburon ( <ref type="bibr" target="#b13">May and Knight, 2006</ref>).</p><p>Our XTOPs transducer has approximately 140 states and 550 engineered rules (approximately 200 of these rules are used for parsing formal mathematics and a subset of LaTeX). Most lexical rules are automatically generated on-the-fly from WordNet (Miller, 1995).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Compilation</head><p>We then compile the parses of the question pas- sage, by running them forward through a cas- cade of bottom-up tree transducers <ref type="bibr" target="#b2">(Engelfriet, 1975)</ref>. Again we refer the reader to the literature <ref type="bibr" target="#b9">(Maletti, 2011</ref><ref type="bibr" target="#b10">(Maletti, , 2014</ref>) for a theoretical presentation of bottom-up tree transducers, and use <ref type="figure" target="#fig_6">Figure 5</ref> to provide intuition about the device. A bottom- up tree transducer defines a transformation from a tree language to a (possibly different) tree lan- guage, via a set of stateful bottom-up rewrite rules.</p><p>In <ref type="figure" target="#fig_6">Figure 5</ref>, we show how this transformation works in the context of the semantic translation step, which uses a multi bottom-up transducer (MBOT) to map our syntactic language A into our semantic language B. There is a single state (in- dicated by a gray shaded rectangle) that has two children: (i) a return value, and (ii) a set of side- effect statements.</p><p>The first rule application transforms "all values of m" into a return value of M (a new variable introduced to indicate the set of all values of vari- able m) and a side-effect (proto m M ), indicating that M equals the set of all possible values of m. The second rule application transforms "the sum of M " into a return value of (sum M ), and propa- gates upward the accumulated side-effects.</p><p>We implemented all three compilation steps from <ref type="figure" target="#fig_1">Figure 1</ref> </p><note type="other">(anaphora resolution, semantic translation, and semantic analysis) as the for- ward application of a bottom-up tree transducer. Anaphora resolution resolves any nodes that refer to other nodes in the tree. Semantic translation translates syntactic language A into semantic lan- guage B. Semantic analysis type-checks the trees for internal consistency.</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Interpretation</head><p>Finally, each derived B-tree is sent to an evalu- ator to obtain an answer. Our main evaluator is a wrapped version of Z3 (de Moura and Bjorner, 2008), a widely used Satisfiability Modulo Theo- ries (SMT) solver. If it does not find an answer, we fall back to a numeric optimization solver similar to one used by <ref type="bibr" target="#b20">(Seo et al., 2015</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Spotlights</head><p>Having provided a bird's eye view in the last sec- tion, we now spotlight some key details of our QA system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Spotlight: Complex Aggregations</head><p>A core challenge of semantic parsing is how best to read complex semantic phenomena from a syn- tactic representation. Two such phenomena are superlatives and counting. GeoQuery (Zelle and Mooney, 1996) has examples 7 of these, as does 8 WebQuestions ( <ref type="bibr" target="#b0">Berant et al., 2013)</ref>. Unfortu- nately, it is not clear how existing strategies for dealing with aggregative constructs (e.g. (Liang et al., 2011)) can be extended to the more complex multi-sentence questions found on the SATs. For instance, the basic semantics of Example 1 (enu- merated in Section 1) is dispersed throughout the question passage, such that neither the maximiza- tion nor the minimization can be locally derived from some subtree of the dependency structure.</p><p>To deal with this challenge, we designed our se- mantic language B to decompose the semantics of aggregative constructs into order-independent atoms. Consider the following restatement of the semantics of Example 1:</p><formula xml:id="formula_2">proto( Ë x, X) proto( Ë y, Y ) 3 Ë x + Ë y = 15 Ë x &gt; 0 Ë y &gt; 0 Ë x â Z Ë y â Z solve: max Y â min X</formula><p>where proto( Ë z, Z) designates that a variable Ë z should be treated as the prototype variable of a statement in set-builder notation, i.e. Z = { Ë z | ...}. We treat any other statement featuring pro- totype variable Ë z as a constraint appearing on the right side of the set-builder statement. If there are multiple prototype statements, they are grouped into a single set-builder statement (as occurs with Ë x and Ë y in our example). The power of this decomposition is that it can be reconstructed piecemeal from an arbitrarily com- plex passage. The atomic statements can be inter- preted locally in an arbitrary order, as in <ref type="figure" target="#fig_5">Figure 6</ref>, then synthesized into set-builder notation during evaluation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Spotlight: Complex Anaphoric Phenomena</head><p>The anaphora resolution task ( <ref type="bibr" target="#b3">Ge et al., 1998</ref>) is typically defined at the lexical level. For instance, in the sentence "c is equal to its square," a tra- ditional evaluation like the CoNLL-2011 Shared Task (Pradhan et al., 2011) would ask whether the string "its" is aligned to the string "c". These eval- uations also assume that both the reference and the referent (a.k.a. antecedent) are contiguous strings in the text. Math SAT problems exhibit a host of new chal- lenges that fall outside traditionally studied defini- tions of anaphora resolution:</p><p>â¢ One-to-many coreference 9 (One integer is 5 more than another. What is the sum of the numbers?): "The numbers" refers to two dis- contiguous strings: "one integer" and "an- other".</p><p>â¢ Implicit set reference (Two numbers sum to 5. If the first is 2, what is the second?): "The second" implies a latent set that needs to be resolved (to "two numbers") in order to un- derstand the sentence. This phenomenon is shown in <ref type="figure">Figure 7</ref>.</p><p>â¢ Implicit clausal reference (If 7 is divided by 3, what is the remainder?): "The remainder" implies a latent clause that needs to be re- solved (to "7 is divided by 3") in order to un- derstand the sentence.</p><p>We address this broader class of anaphora by a two-pass process:</p><p>1. First, we introduce implicit sets and clauses when appropriate. For instance, implicit sets are introduced for superlative and ordinal constructions, while implicit clauses are in- troduced for functional nouns like "remain- der." In <ref type="figure">Figure 7</ref>, these implicits are depicted as bracketed phrases (i.e. [of a set]).</p><p>2. Anaphora resolution then proceeds as a bottom-up tree-labeling process, shown in <ref type="figure">Figure 7</ref>. For each subtree, a resolution func- tion Ï partially maps subtree entities to sub- tree nodes. Note that ancestors can overwrite the resolutions of their descendants. This oc- curs in the second example of <ref type="figure">Figure 7</ref>, where the implicit set E7 is initially resolved to im- plicit set E4, but is later resolved to the en- tity E1 ("two numbers") once it comes into scope.</p><p>In our initial system, the resolution function Ï was <ref type="figure">Figure 7</ref>: Bottom-up anaphora resolution in our QA system. For convenience, we show the correspon- dence of the nodes of our syntactic parse (top) to the original question passage (bottom). In the parse tree, "E" is an abbreviation for ENTITY.</p><p>engineered heuristically. We later replaced this with a learned version (by using our system to gen- erate training data). Due to space considerations, details are omitted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results with the Unweighted Nondeterministic Cascade</head><p>In the basic cascade from Section 4, the number of trees passed from module to module can expand, but it can also contract (for instance, in the seman- tic translation step, there can be multiple ways of translating a parse, or none at all). This allows the QA system to disambiguate question passages by eliminating parses for which there is no consistent semantics. On the subset of the Kaplan questions for which at least one parse exists, the average number of trees after the parsing step is 7.5. The average number of trees after the semantic analy- sis step goes down to only 2.4. At that point, ob- viously we need to choose some priority in which to feed these finalized programs to the evaluation module. Using a simple heuristic (process smaller programs first), we obtain 70.2% recall and 95.8% precision on the Kaplan closed-vocabulary algebra questions <ref type="bibr">10</ref> . This high precision can be partially attributed to the fact that most SAT questions are multiple- choice (thus we can sequentially evaluate the fi- nalized programs until we find a viable answer). We do not have that luxury on the Dolphin dataset, a set of direct-answer algebra questions curated by Microsoft Research (split into a development set of 374 questions and a test set of 1504 ques- 10 Recall and precision numbers are computed over the en- tire set of questions, regardless of whether they have a valid parse. tions). On the subset of the development ques- tions for which at least one parse exists (90.3% of the questions), the average number of trees af- ter the parsing step is 4.3. The average number of trees after the semantic analysis step goes down to 1.5. Our basic system obtains 66.3% recall on the development questions. Naturally the precision is not as high as on the multiple choice questions, but surprisingly we still obtain 85.5% precision, even with an unweighted cascade.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Introducing a Parse Ranker</head><p>Most of this precision loss is due to legitimate parse ambiguity that cannot be resolved through semantic interpretability alone. Rather, the dis- ambiguation requires some additional pragmatic convention. Consider the example: "When the reciprocal of three times a number is subtracted from the reciprocal of the number, the result is one sixth. Find the number." By interpreting "the re- ciprocal of three" as 1 3 , the meaning of this ques- tion becomes "When 1 3 times a number is sub- tracted from the reciprocal of the number, the re- sult is one sixth. Find the number." This is not however the most human-intuitive interpretation of the question. Somehow the system must iden- tify the pragmatic cues that cause humans to dis- prefer this interpretation.</p><p>To identify these cues, we insert a parse rank- ing module between the parsing module and the anaphora resolution module (see <ref type="figure" target="#fig_1">Figure 1</ref> for a reminder of the system components). The goal of the parse ranker is to associate a lower cost to "more intuitive" interpretations when there are multiple plausible syntactic interpretations. The recall prec. F1 Kaplan (non-blind) 70.2 95.8 81.0 McGraw-Hill (blind) 41.0 91.8 56.7 Official (blind) 43.1 90.8 58.5  <ref type="table">Table 2</ref>: Results on the Dolphin question sets. The increase in recall is statistically significant with a P -value &lt; 0.01.</p><p>rest of the cascade propagates these costs. Simi- lar to existing work, e.g. <ref type="bibr" target="#b1">(Charniak and Johnson, 2005)</ref>, we implement the cost function as an L 1 - regularized logistic regression model.</p><p>Adding the trained parse ranker module im- proves performance on the Dolphin development set to 75.7% recall and 97.3% precision (from 66.3% recall and 85.5% precision).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Final Results</head><p>Results from our final system are shown in <ref type="table" target="#tab_1">Table 1</ref> (for the closed-vocabulary algebra subsets of our math SAT question sets) and <ref type="table">Table 2</ref> (for the Dol- phin question sets). EUCLID generalizes reason- ably well to the blind SAT questions, achieving approximately 60% of the system's recall on the training questions, at a precision of approximately 91%. To give a sense of the extent of the gen- eralization from training to test, <ref type="table">Table 3</ref> offers a couple of correctly answered questions from the blind <ref type="bibr">11</ref> McGraw-Hill set, plus their closest analog in the training questions (by edit distance). The performance on the blind test sets (including all questions, not just closed-vocabulary algebra) cor- responds to an SAT score of approximately 350 (out of 800). A random-guessing baseline has an expected score of 200. <ref type="table">Table 4</ref> provides a failure analysis on the McGraw-Hill data, categorizing a sample of 50 questions. Half of the questions failed to have a <ref type="bibr">11</ref> Apart from harvesting a sample of correctly answered questions for this analysis, the McGraw-Hill set was kept completely blind. The official set was left completely un- touched.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>development (blind)</head><p>training Set M consists of the If the sum of the consecutive integers consecutive integers from -15 to y, inclusive. from -15 to x, If the sum of all of the inclusive, is 51, integers in set M is 70, what is the value how many numbers are of x? in the set? If a, b, and c are If x and y are positive even integers different positive such that a &lt; b &lt; c integers and and a + b + c = 60, 3x + y = 17, the then the greatest difference between possible value of c is the largest possible value of y and the smallest possible value of x is <ref type="table">Table 3</ref>: Some correctly answered questions on the blind McGraw-Hill set, and their closest paral- lel (by edit distance) in the training set (Kaplan). development (blind) training failed to parse 50% failed to map parse into a semantic program 24% failed to produce an answer from any semantic program 18% produced an incorrect answer 8% <ref type="table">Table 4</ref>: Error analysis on the blind McGraw-Hill set, surveying the first point of failure for a sample of 50 incorrectly answered questions.</p><p>valid parse. Roughly a quarter of the questions had at least one valid parse, but none of these resulted in a semantic program. 18% of the questions com- piled into at least one semantic program, but none of these produced an answer when fed to the in- terpreter. 8% of the questions compiled into a se- mantic form that produced an incorrect answer.</p><p>Besides the Math SAT datasets, EUCLID also has state-of-the-art performance on the public Dolphin question set, achieving an absolute recall improvement 12 of nearly 5% with a small loss in precision. This raises the state-of-the-art F 1 -score on this data set from 73.9% to 77.0%.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Towards a Broad-Coverage SAT solver</head><p>This paper reports on the first steps of a longer- term initiative to build a unified system that can pass the math SAT. We have made some prelimi- nary forays into extending the system to handle the more complex subdomains described in Section 2, namely open-vocabulary algebra and geometry. Key research challenges presented by these new domains are:</p><p>â¢ Mapping into richer semantic languages:</p><p>The math story problems of open-vocabulary algebra require languages that reason about state change and can introduce assumptions not explicitly represented in the text.</p><p>â¢ Robustly synthesizing diagram and text in- formation: For geometry questions, we are building on key early work in this area per- formed by <ref type="bibr" target="#b19">(Seo et al., 2014</ref><ref type="bibr" target="#b20">(Seo et al., , 2015</ref>).</p><p>â¢ Extending the system in a scalable way: Writing new transducer rules for each new domain is not a sustainable way to extend our system. We are exploring how to use natural language to "program" our system, e.g. by automatically inducing transducer rules for paraphrase text.</p><p>A snapshot of our current progress is shown in Ta- ble 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Discussion</head><p>In the process of creating a QA system for math SAT questions, this project has yielded several general strategies for beyond-sentential semantic parsing. For instance:</p><p>â¢ One can modularize the parser as a cascade of tree transducers, allowing uncertainty about anaphora resolution and lexical interpretation to be propagated until it can be confidently resolved, sometimes as late as program inter- pretation (see Section 6).</p><p>â¢ One can atomize complex semantic phenom- ena (e.g. aggregrative constructs) into small order-independent pieces. This allows a sim- pler transformation from a syntactic form, because these atoms can be locally recog- nized, incrementally composed, and globally reconstituted into a structured semantics (see Section 5.1).</p><p>â¢ One can reframe bread-and-butter NLP tasks (e.g. anaphora resolution) to fit better within (and take advantage of) the context of the transducer cascade (see Section 5.2)</p><p>An important focus of this paper has been issues of representation, namely how to develop interme- diate structured languages that facilitate the auto- matic transformation of question discourse into a response. Because we can use the resulting QA system to generate gold intermediate trees for any correctly answered question in our dataset, one way to view this work is as a data annotation project. One distinguishing advantage is that our intermediate languages come with a "proof of use- fulness." They are not designed based on specula- tive utility -rather, they have already proven use- ful in the context of a functioning QA system.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Ã</head><label></label><figDesc>Y = {(x, y) | 3x + y = 15, x, y â Z + } X = {x | (x, y) â X Ã Y } Y = {y | (x, y) â X Ã Y } solve: max Y â min X</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: High-level view of EUCLID's architecture.</figDesc><graphic url="image-1.png" coords="2,154.77,62.80,287.99,120.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 (</head><label>2</label><figDesc>Figure 4: Example XTOPs transducer rules (bottom) used to derive a syntactic parse from the noun phrase "a positive integer" (via backward application of the transducer).</figDesc><graphic url="image-2.png" coords="3,308.41,62.81,216.00,370.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Example syntactic parse. For convenience, we show the correspondence of the nodes of our syntactic parse (top) to the original question passage (bottom). In the parse tree, "E" stands for "ENTITY".</figDesc><graphic url="image-4.png" coords="4,75.57,253.13,446.37,108.44" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Example semantic program for the question "Let m + 3 &lt; 15. If m is a positive integer, what is the sum of all values of m?"</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Understanding complex aggregations by decomposing them into order-independent atoms.</figDesc><graphic url="image-5.png" coords="5,308.41,62.81,215.98,144.29" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Example semantic translation using an MBOT.</figDesc><graphic url="image-6.png" coords="6,75.57,62.80,446.40,271.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>Results on the closed-vocabulary algebra 
subsets of our Math SAT question sets. 

EUCLID 
(Shi et al., 2015) 
rec prec F1 
rec prec F1 
dev 78.1 97.0 86.5 
-
-
-
test 65.1 94.1 77.0 60.3 95.4 73.9 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 5 :</head><label>5</label><figDesc></figDesc><table>Snapshot of early progress across several subgenres of the Math SAT. In our early stages, 
we are hillclimbing on the hosseini datasets from (Hosseini et al., 2014), which are simpler than the 
open-vocabulary algebra questions from the Math SAT. 

</table></figure>

			<note place="foot" n="1"> The Math SAT is a standardized exam administered to college-bound high school students in the United States.</note>

			<note place="foot" n="2"> 12 full exams + 1 PSAT 3 One exception: we exclude the &quot;comparison&quot;-style questions (discontinued in 2005) from pre-2005 exams.</note>

			<note place="foot" n="4"> We experimented with adopting an existing syntax, like the Penn Treebank Syntax or the Stanford Dependency Syntax, but it turned out to be easier to develop the syntax in parallel with the needs of our system. Having said that, it is not intended to be wildly different from those formalisms.</note>

			<note place="foot" n="7"> e.g. &quot;What is the capital of the state that borders the most states?&quot; 8 e.g. &quot;How many pets did John F. Kennedy own?&quot;</note>

			<note place="foot" n="9"> A recent ACL paper (Vala et al., 2016) has provided a preliminary treatment of this phenomenon.</note>

			<note place="foot" n="12"> This improvement is statistically significant with a Pvalue &lt; 0.01.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors would like to thank Luke Zettle-moyer, Jayant Krishnamurthy, Oren Etzioni, and the anonymous reviewers for valuable feedback on earlier drafts of the paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Semantic parsing on freebase from question-answer pairs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Berant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roy</forename><surname>Frostig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Percy</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Coarseto-fine n-best parsing and maxent discriminative reranking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Charniak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics</title>
		<meeting>the 43rd Annual Meeting on Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="173" to="180" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Bottom-up and top-down tree transformationsa comparison. Mathematical systems theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joost</forename><surname>Engelfriet</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="198" to="231" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">A statistical approach to anaphora resolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Niyu</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Hale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Charniak</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Tree languages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ferenc</forename><surname>GÃ©cseg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Magnus</forename><surname>Steinby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of formal languages</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="1" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Learning to solve arithmetic word problems with verb categorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad Javad</forename><surname>Hosseini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nate</forename><surname>Kushman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Parsing algebraic word problems into equations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rik</forename><surname>Koncel-Kedziorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashish</forename><surname>Sabharwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Siena Dumas</forename><surname>Ang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TACL</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="585" to="597" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Learning to automatically solve algebra word problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nate</forename><surname>Kushman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luke</forename><forename type="middle">S</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Regina</forename><surname>Barzilay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoav</forename><surname>Artzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Learning dependency-based compositional semantics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Percy</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Klein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">How to train your multi bottom-up tree transducer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Maletti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The power of regularitypreserving multi bottom-up tree transducers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Maletti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIAA</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The power of extended topdown tree transducers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Maletti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Graehl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Hopkins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Knight</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="410" to="430" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Semantic parsing of pre-university math problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takuya</forename><surname>Matsuzaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takumi</forename><surname>Ito</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hidenao</forename><surname>Iwane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hirokazu</forename><surname>Anai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noriko</forename><forename type="middle">H</forename><surname>Arai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Tiburon: A weighted tree automata toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>May</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Knight</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIAA</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Wordnet: a lexical database for english</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>George</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="39" to="41" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Addressing a question answering challenge by combining statistical methods with inductive rule learning and reasoning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arindam</forename><surname>Mitra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chitta</forename><surname>Baral</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Z3: An efficient smt solver</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leonardo</forename><surname>Mendona De Moura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nikolaj</forename><surname>Bjorner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TACAS</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sameer</forename><surname>Pradhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lance</forename><forename type="middle">A</forename><surname>Ramshaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mitchell</forename><forename type="middle">P</forename><surname>Marcus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martha</forename><surname>Palmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ralph</forename><forename type="middle">M</forename><surname>Weischedel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nianwen</forename><surname>Xue</surname></persName>
		</author>
		<title level="m">Conll-2011 shared task: Modeling unrestricted coreference in ontonotes</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>CoNLL Shared Task</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Solving general arithmetic word problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Subhro</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Diagram understanding in geometry questions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min Joon</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ali</forename><surname>Farhadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Solving geometry problems: Combining text and diagram interpretation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min Joon</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ali</forename><surname>Farhadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Clint</forename><surname>Malcolm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Automatically solving number word problems by semantic parsing and reasoning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuming</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuehui</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chin-Yew</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaojiang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yong</forename><surname>Rui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Annotating derivations: A new evaluation strategy and dataset for algebra word problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shyam</forename><surname>Upadhyay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming-Wei</forename><surname>Chang</surname></persName>
		</author>
		<idno>abs/1609.07197</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The more antecedents, the merrier: Resolving multiantecedent anaphors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hardik</forename><surname>Vala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Piper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Derek</forename><surname>Ruths</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Learning to parse database queries using inductive logic programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raymond</forename><forename type="middle">J</forename><surname>Zelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mooney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI/IAAI</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Learn to solve algebra word problems using quadratic programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lipu</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuaixiang</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liwei</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
