<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T12:16+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Noise Contrastive Estimation and Negative Sampling for Conditional Models: Consistency and Statistical Efficiency</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>October 31-November 4, 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhuang</forename><surname>Ma</surname></persName>
							<email>zhuangma@wharton.upenn.edu</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Google AI Language and Columbia University †</orgName>
								<orgName type="institution">University of Pennsylvania</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Collins</surname></persName>
							<email>mjcollins@google.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Google AI Language and Columbia University †</orgName>
								<orgName type="institution">University of Pennsylvania</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Noise Contrastive Estimation and Negative Sampling for Conditional Models: Consistency and Statistical Efficiency</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing</title>
						<meeting>the 2018 Conference on Empirical Methods in Natural Language Processing <address><addrLine>Brussels; Belgium</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="3698" to="3707"/>
							<date type="published">October 31-November 4, 2018</date>
						</imprint>
					</monogr>
					<note>3698</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Noise Contrastive Estimation (NCE) is a powerful parameter estimation method for log-linear models, which avoids calculation of the partition function or its derivatives at each training step, a computationally demanding step in many cases. It is closely related to negative sampling methods, now widely used in NLP. This paper considers NCE-based estimation of conditional models. Conditional models are frequently encountered in practice; however there has not been a rigorous theoretical analysis of NCE in this setting, and we will argue there are subtle but important questions when generalizing NCE to the conditional case. In particular, we analyze two variants of NCE for conditional models: one based on a classification objective, the other based on a ranking objective. We show that the ranking-based variant of NCE gives consistent parameter estimates under weaker assumptions than the classification-based method; we analyze the statistical efficiency of the ranking-based and classification-based variants of NCE; finally we describe experiments on synthetic data and language modeling showing the effectiveness and trade-offs of both methods.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>This paper considers parameter estimation in con- ditional models of the form </p><p>where s(x, y; ✓) is the unnormalized score of label y in conjunction with input x under parameters ✓, Y is a finite set of possible labels, and Z(x; ✓) = P y2Y exp (s(x, y; ✓)) is the partition function for input x under parameters ✓.</p><p>It is hard to overstate the importance of models of this form in NLP. In log-linear models, includ- ing both the original work on maximum-entropy models <ref type="bibr" target="#b3">(Berger et al., 1996)</ref>, and later work on conditional random fields ( <ref type="bibr" target="#b7">Lafferty et al., 2001</ref>), ⇤ Part of this work done at Google. † Work done at Google. the scoring function s(x, y; ✓) = ✓ · f (x, y) where f (x, y) 2 R d is a feature vector, and ✓ 2 R d are the parameters of the model. In more recent work on neural networks the function s(x, y; ✓) is a non- linear function. In Word2Vec the scoring function is s(x, y; ✓) = ✓ x · ✓ 0 y where y is a word in the context of word x, and ✓ x 2 R d and ✓ 0 y 2 R d are "inside" and "outside" word embeddings x and y.</p><p>In many NLP applications the set Y is large. Maximum likelihood estimation (MLE) of the pa- rameters ✓ requires calculation of Z(x; ✓) or its derivatives at each training step, thereby requiring a summation over all members of Y, which can be computationally expensive. This has led to many authors considering alternative methods, often re- ferred to as "negative sampling methods", where a modified training objective is used that does not require summation over Y on each example. In- stead negative examples are drawn from some dis- tribution, and a objective function is derived based on binary classification or ranking. Prominent ex- amples are the binary objective used in word2vec <ref type="bibr" target="#b10">((Mikolov et al., 2013)</ref>, see also <ref type="bibr" target="#b8">(Levy and Goldberg, 2014)</ref>), and the Noise Contrastive Estima- tion methods of <ref type="bibr" target="#b11">(Mnih and Teh, 2012;</ref><ref type="bibr" target="#b6">Jozefowicz et al., 2016</ref>) for estimation of language models.</p><p>In spite of the centrality of negative sampling methods, they are arguably not well understood from a theoretical standpoint. There are clear connections to noise contrastive estimation (NCE) ( <ref type="bibr" target="#b5">Gutmann and Hyvärinen, 2012</ref>), a negative sam- pling method for parameter estimation in joint models of the form </p><p>However there has not been a rigorous theoretical analysis of NCE in the estimation of conditional models of the form in Eq. 1, and we will argue there are subtle but important questions when gen- eralizing NCE to the conditional case. In partic- ular, the joint model in Eq 2 has a single parti- tion function Z(✓) which is estimated as a param-eter of the model ( <ref type="bibr" target="#b5">Gutmann and Hyvärinen, 2012</ref>) whereas the conditional model in Eq 1 has a sepa- rate partition function Z(x; ✓) for each value of x. This difference is critical.</p><p>We show the following (throughout we define K 1 to be the number of negative examples sampled per training example):</p><p>• For any K 1, a binary classification variant of NCE, as used by <ref type="bibr" target="#b11">(Mnih and Teh, 2012;</ref><ref type="bibr" target="#b10">Mikolov et al., 2013)</ref>, gives consistent parameter estimates under the assumption that Z(x; ✓) is constant with respect to x (i.e., Z(x; ✓) = H(✓) for some func- tion H). Equivalently, the method is consistent under the assumption that the function s(x, y; ✓) is powerful enough to incorporate log Z(x; ✓).</p><p>• For any K 1, a ranking-based variant of NCE, as used by <ref type="bibr" target="#b6">(Jozefowicz et al., 2016)</ref>, gives consistent parameter estimates under the much weaker assumption that Z(x; ✓) can vary with x. Equivalently, there is no need for s(x, y; ✓) to be powerful enough to incorporate log Z(x; ✓).</p><p>• We analyze the statistical efficiency of the ranking-based and classification-based NCE vari- ants. Under respective assumptions, both vari- ants achieve Fisher efficiency (the same asymp- totic mean square error as the MLE) as K ! 1.</p><p>• We discuss application of our results to ap- proaches of <ref type="bibr" target="#b11">(Mnih and Teh, 2012;</ref><ref type="bibr" target="#b10">Mikolov et al., 2013;</ref><ref type="bibr" target="#b8">Levy and Goldberg, 2014;</ref><ref type="bibr" target="#b6">Jozefowicz et al., 2016)</ref> giving a unified account of these methods.</p><p>• We describe experiments on synthetic data and language modeling evaluating the effective- ness of the two NCE variants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Basic Assumptions</head><p>We assume the following setup throughout:</p><p>• We have sets X and Y, where X , Y are finite.</p><p>• There is some unknown joint distribution p X,Y (x, y) where x 2 X and y 2 Y. We assume that the marginal distributions satisfy p X (x) &gt; 0 for all x 2 X and p Y (y) &gt; 0 for all y 2 Y.</p><p>• We have training examples</p><formula xml:id="formula_2">{x (i) , y (i) } n i=1 drawn I.I.D. from p X,Y (x, y).</formula><p>• We have a scoring function s(x, y; ✓) where ✓ are the parameters of the model. For example, s(x, y; ✓) may be defined by a neural network.</p><p>• We use ⇥ to refer to the parameter space. We assume that ⇥ ✓ R d for some integer d.</p><p>• We use p N (y) to refer to a distribution from which negative examples are drawn in the NCE approach. We assume that p N satisfies p N (y) &gt; 0 for all y 2 Y.</p><p>We will consider estimation under the following two assumptions: Assumption 2.1 There exists some parameter value ✓ ⇤ 2 ⇥ such that for all (x, y) 2 X ⇥ Y,</p><formula xml:id="formula_3">p Y |X (y|x) = exp(s(x, y; ✓ ⇤ )) Z(x; ✓ ⇤ )<label>(3)</label></formula><p>where Z(x; ✓ ⇤ ) = P y2Y exp(s(x, y; ✓ ⇤ )). Assumption 2.2 There exists some parameter value ✓ ⇤ 2 ⇥, and a constant ⇤ 2 R, such that for all (x, y) 2 X ⇥ Y,</p><formula xml:id="formula_4">p Y |X (y|x) = exp (s(x, y; ✓ ⇤ ) ⇤ ) . (4)</formula><p>Assumption 2.2 is stronger than Assump- tion 2.1. It requires log Z(x; ✓ ⇤ ) ⌘ ⇤ for all x 2 X , that is, the conditional distribution is per- fectly self-normalized. Under Assumption 2.2, it must be the case that 8x 2 X</p><formula xml:id="formula_5">X y p Y |X (y|x) = X y exp{s(x, y; ✓ ⇤ ) ⇤ } = 1</formula><p>There are |X | constraints but only d + 1 free pa- rameters. Therefore self-normalization is a non- trivial assumption when |X | d. In the case of language modeling, |X | = |V | k d + 1, where |V | is the vocabulary size and k is the length of the context. The number of constraints grows ex- ponentially fast. Given a scoring function s(x, y; ✓) that satisfies assumption 2.1, we can derive a scoring function s 0 that satisfies assumption 2.2 by defining</p><formula xml:id="formula_6">s 0 (x, y; ✓, {c x : x 2 X }) = s(x, y; ✓) c x</formula><p>where c x 2 R is a parameter for history x. Thus we introduce a new parameter c x for each possible history x. This is the most straightforward exten- sion of NCE to the conditional case; it is used by <ref type="bibr" target="#b11">(Mnih and Teh, 2012)</ref>. It has the clear drawback however of introducing a large number of addi- tional parameters to the model. <ref type="figure">Figure 1</ref> shows two NCE-based parameter esti- mation algorithms, based respectively on binary objective and ranking objective. The input to either algorithm is a set of training examples</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Two Estimation Algorithms</head><formula xml:id="formula_7">{x (i) , y (i) } n i=1</formula><p>, a parameter K specifying the num- ber of negative examples per training example, and a distribution p N (·) from which negative exam- ples are sampled. The algorithms differ only in the choice of objective function being optimized: L n B for binary objective, and L n R for ranking objective. Binary objective essentially corresponds to a prob- lem where the scoring function s(x, y; ✓) is used to construct a binary classifier that discriminates between positive and negative examples. Rank- ing objective corresponds to a problem where the scoring function s(x, y; ✓) is used to rank the true label y (i) above negative examples y (i,1) . . . y (i,K) for the input x (i) .</p><p>Our main result is as follows: The remainder of this section gives a sketch of the argument underlying consistency, and dis- cusses use of the two algorithms in previous work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">A Sketch of the Consistency Argument for the Ranking-Based Algorithm</head><p>In this section, in order to develop intuition under- lying the ranking algorithm, we give a proof sketch of the following theorem:</p><formula xml:id="formula_8">Theorem 3.2 (First part of theorem 4.1 below.) Define L 1 R (✓) = E[L n R (✓)]. Under Assump- tion 2.1, ¯ ✓ 2 arg max ✓ L 1 R (✓) if and only if, for all (x, y) 2 X ⇥ Y, p Y |X (y|x) = exp(s(x, y; ¯ ✓))/Z(x, ¯ ✓).</formula><p>This theorem is key to the consistency argument. Intuitively as n increases L n R (✓) converges to L 1 R (✓), and the output to the algorithm converges to ✓ 0 such that p(y|x; ✓ 0 ) = p Y |X (y|x) for all x, y. Section 4 gives a formal argument.</p><p>We now give a proof sketch for theo- rem 3.2. Consider the algorithm in <ref type="figure">figure 1</ref>. For convenience define ¯ y (i) to be the vector</p><formula xml:id="formula_9">(y (i,0) , y (i,1) , . . . , y (i,K) ). Define ↵(x, ¯ y) = Inputs: Training examples {x (i) , y (i) } n i=1</formula><p>, sampling dis- tribution pN (·) for generating negative examples, an in- teger K specifying the number of negative examples per training example, a scoring function s(x, y; ✓). Flags {BINARY = true, RANKING = false} if binary classifica- tion objective is used, {BINARY = false, RANKING = true} if ranking objective is used.</p><p>Definitions: Define ¯ s(x, y; ✓) = s(x, y; ✓) log pN (y) Algorithm:</p><formula xml:id="formula_10">• For i = 1. . . n, k = 1. . . K, draw y (i,k) I.I.D.</formula><p>from the distribution pN (y). For convenience define y (i,0) = y (i) .</p><p>• If RANKING, define the ranking objective function</p><formula xml:id="formula_11">L n R (✓) = 1 n n X i=1 log exp(¯ s(x (i) , y (i,0) ; ✓)) P K k=0 exp(¯ s(x (i) , y (i,k) ; ✓))</formula><p>, and the estimator b ✓R = argmax</p><formula xml:id="formula_12">✓2⇥ L n R (✓).</formula><p>• If BINARY, define the binary objective function</p><formula xml:id="formula_13">L n B (✓, ) = 1 n n X i=1 n log g(x (i) , y (i,0) ; ✓, ) + K X k=1 log ⇣ 1 g(x (i) , y (i,k) ; ✓, ) ⌘o ,</formula><formula xml:id="formula_14">and estimator ( b ✓B, b B) = argmax ✓2⇥,2 L n B (✓, ), where</formula><p>g(x, y; ✓, ) = exp (¯ s(x, y; ✓) ) exp (¯ s(x, y; ✓) ) + K .</p><p>•</p><formula xml:id="formula_15">Define b ✓ = b ✓R if RANKING and b ✓ = b ✓B otherwise. Return b ✓ and b p Y |X (y|x) = exp(s(x, y; b ✓)) P y2Y exp(s(x, y; b ✓))</formula><p>Figure 1: Two NCE-based estimation algorithms, using ranking objective and binary objective respectively.</p><formula xml:id="formula_16">P K k=0 p X,Y (x, ¯ y k ) Q j6 =k p N (¯ y j )</formula><p>, and</p><formula xml:id="formula_17">q(k|x, ¯ y; ✓) = exp(¯ s(x, ¯ y k ; ✓)) P K k=0 exp(¯ s(x, ¯ y k ; ✓)) , (k|x, ¯ y) = p X,Y (x, ¯ y k ) Q j6 =k p N (¯ y j ) ↵(x, ¯ y) = p Y |X (¯ y k |x)/p N (¯ y k ) P N k=0 p Y |X (¯ y k |x)/p N (¯ y k ) C(x, ¯ y; ✓) = K X k=0 (k|x, ¯ y) log q(k|x, ¯ y; ✓)</formula><p>Intuitively, q(·|x, ¯ y; ✓) and (·|x, ¯ y) are posterior distributions over the true label k 2 {0 . . . K} given an input x, ¯ y, under the parameters ✓ and the true distributions p X, ¯ Y (x, ¯ y) respectively; C(x, ¯ y; ✓) is the negative cross-entropy between these two distributions.</p><p>The proof of theorem 3.2 rests on two iden- tities. The first identity states that the objective function is the expectation of the negative cross- entropy w.r.t. the density function 1 K+1 ↵(x, ¯ y) (see Section B.1.1 of the supplementary material for derivation):</p><formula xml:id="formula_18">L 1 R (✓) = X x X ¯ y 1 K + 1 ↵(x, ¯ y)C(x, ¯ y; ✓). (5)</formula><p>The second identity concerns the relationship be- tween q(·|x, ¯ y; ✓) and (·|x, ¯ y). Under assump- tion 2.1, for all x, ¯ y, k 2 {0 . . . K},</p><formula xml:id="formula_19">q(k|x, ¯ y; ✓ ⇤ ) = p Y |X (¯ y k |x)Z(x; ✓ ⇤ )/p N (y k ) P K k=0 p Y |X (¯ y k |x)Z(x; ✓ ⇤ )/p N (y k ) = (k|x, ¯ y)<label>(6)</label></formula><p>It follows immediately through the properties of negative cross entropy that</p><formula xml:id="formula_20">8x, ¯ y, ✓ ⇤ 2 argmax ✓ C(x, ¯ y; ✓)<label>(7)</label></formula><p>The remainder of the argument is as follows:</p><p>• Eqs. 7 and 5 imply that ✓ ⇤ 2 argmax ✓ L 1 R (✓).</p><p>• Assumption 2.1 implies that ↵(x, ¯ y) &gt; 0 for all x, ¯ y. It follows that any</p><formula xml:id="formula_21">✓ 0 2 arg max ✓ L 1 R (✓) satisfies for all x, ¯ y, k,<label>(8)</label></formula><formula xml:id="formula_22">q(k|x, ¯ y; ✓ 0 ) = q(k|x, ¯ y; ✓ ⇤ ) = (k|x, ¯ y)</formula><p>Otherwise there would be some x, ¯ y such that C(x, ¯ y; ✓ 0 ) &lt; C(x, ¯ y; ✓ ⇤ ).</p><p>• Eq. 8 implies that 8x, y, p(y|x; ✓ 0 ) = p(y|x; ✓ ⇤ ). See the proof of lemma B.3 in the sup- plementary material.</p><p>In summary, the identity in Eq. 5 is key: the ob- jective function in the limit, L 1 R (✓), is related to a negative cross-entropy between the underlying distribution (·|x, ¯ y) and a distribution under the parameters, q(·|x, ¯ y; ✓). The parameters ✓ ⇤ maxi- mize this negative cross entropy over the space of all distributions {q(·|x, ¯ y; ✓), ✓ 2 ⇥}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">The Algorithms in Previous Work</head><p>To motivate the importance of the two algorithms, we now discuss their application in previous work. <ref type="bibr" target="#b11">Mnih and Teh (2012)</ref> consider language mod- eling, where x = w 1 w 2 . . . w n1 is a history con- sisting of the previous n1 words, and y is a word. The scoring function is defined as</p><formula xml:id="formula_23">s(x, y; ✓) = ( n1 X i=1 C i r w i ) · q y + b y c x</formula><p>where r w i is an embedding (vector of parameters) for history word w i , q y is an embedding (vector of parameters) for word y, each C i for i = 1 . . . n1 is a matrix of parameters specifying the contribu- tion of r w i to the history representation, b y is a bias term for word y, and c x is a parameter corre- sponding to the log normalization term for history x. Thus each history x has its own parameter c x .</p><p>The binary objective function is used in the NCE algorithm. The noise distribution p N (y) is set to be the unigram distribution over words in the vo- cabulary. This method is a direct application of the original NCE method to conditional estimation, through introduction of the parameters c x corre- sponding to normalization terms for each history. Interestingly, Mnih and Teh (2012) acknowledge the difficulties in maintaining a separate parame- ter c x for each history, and set c x = 0 for all x, noting that empirically this works well, but with- out giving justification. <ref type="bibr" target="#b10">Mikolov et al. (2013)</ref> consider an NCE-based method using the binary objective function for estimation of word embeddings. The skip-gram method described in the paper corresponds to a model where x is a word, and y is a word in the context. The vector v x is the embedding for word x, and the vector v 0 y is an embedding for word y (separate embeddings are used for x and y). The method they describe uses</p><formula xml:id="formula_24">¯ s(x, y; ✓) = v 0 y · v x or equivalently s(x, y; ✓) = v 0 y · v x + log p N (y)</formula><p>The negative-sampling distribution p N (y) was chosen as the unigram distribution p Y (y) raised to the power 3/4. The end goal of the method was to learn useful embeddings v w and v 0 w for each word in the vocabulary; however the method gives a consistent estimate for a model of the form</p><formula xml:id="formula_25">p(y|x) = exp v 0 y · v x + log p N (y) P y exp v 0 y · v x + log p N (y) = p N (y) exp v 0 y · v x Z(x; ✓)</formula><p>assuming that Assumption 2.2 holds, i.e. Z(x; ✓) = P y p N (y) exp v 0 y · v x ⌘ H(✓) which does not vary with x.</p><p>Levy and Goldberg (2014) make a connec- tion between the NCE-based method of ( <ref type="bibr" target="#b10">Mikolov et al., 2013)</ref>, and factorization of a matrix of point- wise mutual information (PMI) values of (x, y) pairs. Consistency of the NCE-based method un- der assumption 2.2 implies a similar result, specif- ically: if we define p N (y) = p Y (y), and de- fine s(x, y; ✓) = v 0 y · v x + log p N (y) implying ¯ s(x, y; ✓) = v 0 y · v x , then parameters v 0 y and v x converge to values such that</p><formula xml:id="formula_26">p(y|x) = p Y (y) exp v 0 y · v x H(✓)</formula><p>or equivalently</p><formula xml:id="formula_27">PMI(x, y) = log p(y|x) p(y) = v 0 y · v x log H(✓)</formula><p>That is, following <ref type="bibr" target="#b8">(Levy and Goldberg, 2014</ref>), the inner product v 0 y · v x is an estimate of the PMI up to a constant offset H(✓).</p><p>Finally, <ref type="bibr" target="#b6">Jozefowicz et al. (2016)</ref> introduce the ranking-based variant of NCE for the language modeling problem. This is the same as the ranking-based algorithm in figure 1. They do not, however, make the connection to assumptions 2.2 and 2.1, or derive the consistency or efficiency results in the current paper. <ref type="bibr" target="#b6">Jozefowicz et al. (2016)</ref> partially motivate the ranking-based vari- ant throught the importance sampling viewpoint of <ref type="bibr" target="#b2">Bengio and Senécal (2008)</ref>. However there are two critical differences: 1) the algorithm of Ben- gio and Senécal (2008) does not lead to the same objective L n R in the ranking-based variant of NCE; instead it uses importance sampling to derive an objective that is similar but not identical; 2) the importance sampling method leads to a biased es- timate of the gradients of the log-likelihood func- tion, with the bias going to zero only as K ! 1. In contrast the theorems in the current paper show that the NCE-based methods are consistent for any value of K. In summary, while it is tempting to view the ranking variant of NCE as an impor- tance sampling method, the NCE-based view gives stronger guarantees for finite values of K.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Theory</head><p>This section states the main theorems. The supple- mentary material contains proofs. Throughout the paper, we use</p><formula xml:id="formula_28">E X [ · ], E Y [ · ], E X,Y [ · ], E Y |X=x [ · ] to represent the expectation w.r.t. p X (·), p Y (·), p X,Y (·, ·), p Y |X (·|x)</formula><p>. We use k · k to denote ei- ther the l 2 norm when the operand is a vector or the spectral norm when the operand is a matrix. Finally, we use ) to represent converge in distri- bution. Recall that we have defined ¯ s(x, y; ✓) = s(x, y; ✓) log p N (y).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Ranking</head><p>In this section, we study noise contrastive estima- tion with ranking objective under Assumption 2.1. First consider the following function:</p><formula xml:id="formula_29">L 1 R (✓) = X x,y 0 ,··· ,y K p X,Y (x, y 0 ) K Y i=1 p N (y i ) ⇥ log exp(¯ s(x, y 0 ; ✓)) P K k=0 exp(¯ s(x, y k ; ✓)) ! .</formula><p>By straightforward calculation, one can find that</p><formula xml:id="formula_30">L 1 R (✓) = E [L n R (✓)] .</formula><p>Under mild conditions, L n R (✓) converges to</p><formula xml:id="formula_31">L 1 R (✓) as n ! 1. Denote the set of maximiz- ers of L 1 R (✓) by ⇥ ⇤ R , that is ⇥ ⇤ R = arg max ✓2⇥ L 1 R (✓) .</formula><p>The following theorem shows that any parameter vector ¯ ✓ 2 ⇥ ⇤ R if and only if it gives the correct conditional distribution p Y |X (y|x). </p><formula xml:id="formula_32">p Y |X (y|x) = exp(s(x, y; ¯ ✓))/Z(x, ¯ ✓).</formula><p>In addition, ⇥ ⇤ R is a singleton if and only if As- sumption 4.1 holds.</p><p>Next we consider consistency of the estimation algorithm based on the ranking objective under the following regularity assumptions: Assumption 4.2 (Continuity). s(x, y; ✓) is con- tinuous w.r.t. ✓ for all (x, y) 2 X ⇥ Y.</p><formula xml:id="formula_33">Assumption 4.3 ⇥ ⇤ R is contained in the interior of a compact set ⇥ ⇢ R d .</formula><p>For a given estimate b p Y |X of the conditional dis- tribution p Y |X , define the error metric d(·, ·) by</p><formula xml:id="formula_34">d b p Y |X , p Y |X = X x2X ,y2Y p X,Y (x, y) ⇥ b p Y |X (y|x) p Y |X (y|x) 2 .</formula><p>For a sequence of IID observations (x (1) , y (1) ), (x (2) , y <ref type="formula" target="#formula_1">(2)</ref> ), . . . , define the sequences of esti-</p><formula xml:id="formula_35">mates ( b ✓ 1 R , b p 1 Y |X ), ( b ✓ 2 R , b p 2 Y |X ), . . . where the n th estimate ( b ✓ n R , b p n Y |X )</formula><p>is obtained by op- timizing the ranking objective of <ref type="figure">figure 1</ref> on</p><formula xml:id="formula_36">(x (1) , y (1) ), (x (2) , y (2) ), . . . , (x (n) , y (n) ).</formula><p>Theorem 4.2 (Consistency) Under Assump- tions 2.1, 4.2, 4.3, the estimates based on the ranking objective are strongly consistent in the sense that for any fixed K 1,</p><formula xml:id="formula_37">P n lim n!1 min ✓ ⇤ 2⇥ ⇤ R k b ✓ n R ✓ ⇤ k = 0 o = P n lim n!1 d ⇣ b p n Y |X , p Y |X ⌘ = 0 o = 1</formula><p>Further, if Assumption 4.1 holds,</p><formula xml:id="formula_38">P n lim n!1 b ✓ n R = ✓ ⇤ o = 1.</formula><p>Remark 4.1 Thoughout the paper, all NCE esti- mators are defined for some fixed K. We suppress the dependence on K to simplify notation (e.g. b ✓ n R should be interpreted as b ✓ n,K R ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Classification</head><p>Now we turn to the analysis of NCE with binary objective under Assumption 2.2. First consider the following function,</p><formula xml:id="formula_39">L 1 B (✓, ) = X x,y n p X,Y (x, y) log (g(x, y; ✓, )) + Kp X (x)p N (y) log (1 g(x, y; ✓, )) o</formula><p>One can find that</p><formula xml:id="formula_40">L 1 B (✓, ) = E [L n B (✓, )] .</formula><p>Denote the set of maximizers of L 1 B (✓, ) by ⌦ ⇤ B :</p><formula xml:id="formula_41">⌦ ⇤ B = arg max ✓2⇥,2 L 1 B (✓, ) .</formula><p>Parallel results of Theorem 4.1, 4.2 are established as follows.  </p><formula xml:id="formula_42">p Y |X (y|x) = exp(s(x, y; ¯ ✓) ¯ )</formula><p>for all (x, y). ⌦ ⇤ B is a singleton if and only if As- sumption 4.4 holds.</p><p>Similarly we can define the sequence of es-  </p><formula xml:id="formula_43">timates ( b ✓ 1 B , b 1 B , b p 1 Y |X ), ( b ✓ 2 B , b 2 B , b p 2 Y |X ), . . .</formula><formula xml:id="formula_44">P n lim n!1 min (✓ ⇤ , ⇤ )2⌦ ⇤ B k( b ✓ n B , b n B ) (✓ ⇤ , ⇤ )k = 0 o = P n lim n!1 d ⇣ b p n Y |X , p Y |X ⌘ = 0 o = 1</formula><p>If further Assumption 4.4 holds,</p><formula xml:id="formula_45">P n lim n!1 ( b ✓ n B , b n B ) = (✓ ⇤ , ⇤ ) o = 1.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Counterexample</head><p>In this section, we give a simple example to demonstrate that the binary classification approach fails to be consistent when assumption 2.1 holds but assumption 2.2 fails (i.e. the partition function depends on the input).</p><p>Consider X 2 X = {x 1 , x 2 } with marginal distribution</p><formula xml:id="formula_46">p X (x 1 ) = p X (x 2 ) = 1/2,</formula><p>and Y 2 Y = {y 1 , y 2 } generated by the condi- tional model specified in assumption 2.1 with the score function parametrized by ✓ = (✓ 1 , ✓ 2 ) and</p><formula xml:id="formula_47">s(x 1 , y 1 ; ✓) = log ✓ 1 , s(x 1 , y 2 ; ✓) = s(x 2 , y 1 ; ✓) = s(x 2 , y 2 ; ✓) = log ✓ 2 .</formula><p>Assume the true parameter is ✓ ⇤ = (✓ ⇤ 1 , ✓ ⇤ 2 ) = (1, 3). By simple calculation,</p><formula xml:id="formula_48">Z(✓ ⇤ ; x 1 ) = 4, Z(✓ ⇤ ; x 2 ) = 6, p X,Y (x 1 , y 1 ) = 1/8, p X,Y (x 1 , y 2 ) = 3/8, p X,Y (x 2 , y 1 ) = p X,Y (x 2 , y 2 ) = 1/4.</formula><p>Suppose we choose the negative sampling distri- bution p N (y 1 ) = p N (y 2 ) = 1/2. For any K 1, by the Law of Large Numbers, as n goes to infin- ity, L n B (✓, ) will converge to L 1 B (✓, ). Substi- tute in the parameters above. One can show that</p><formula xml:id="formula_49">L 1 B (✓, ) = 1 8 log 2✓ 1 2✓ 1 + K exp() + K 4 log K exp() 2✓ 1 + K exp() + 7 8 log 2✓ 2 2✓ 2 + K exp() + 3K 4 log K exp() 2✓ 2 + K exp() .</formula><p>Setting the derivatives w.r.t. ✓ 1 , ✓ 2 to zero, one will obtain</p><formula xml:id="formula_50">✓ 1 = 1 4 exp(), ✓ 2 = 7 12 exp(). So for any ( e ✓ 1 , e ✓ 2 , e ) 2 argmax ✓, L 1 B (✓, ), ( e ✓ 1 , e ✓ 2 , e</formula><p>) will satisfy the equalities above. Then the estimated distribution e p Y |X will satisfy</p><formula xml:id="formula_51">e p Y |X (y 1 |x 1 ) e p Y |X (y 2 |x 1 ) = e ✓ 1 e ✓ 2 = 1/4 7/12 = 3 7 ,</formula><p>which contradicts the fact that</p><formula xml:id="formula_52">p Y |X (y 1 |x 1 ) p Y |X (y 2 |x 1 ) = p X,Y (x 1 , y 1 ) p X,Y (x 1 , y 2 ) = 1 3 .</formula><p>So the binary objective does not give consistent estimation of the conditional distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Asymptotic Normality and Statistical Efficiency</head><p>Noise Contrastive Estimation significantly reduces the computational complexity, especially when the label space |Y| is large. It is natural to ask: does such scalability come at a cost? Classical likeli- hood theory tells us, under mild conditions, the maximum likelihood estimator (MLE) has nice properties like asymptotic normality and Fisher ef- ficiency. More specifically, as the sample size goes to infinity, the distribution of the MLE will con- verge to a multivariate normal distribution, and the mean square error of the MLE will achieve the Cramer-Rao lower bound <ref type="bibr" target="#b4">(Ferguson, 1996)</ref>. We have shown the consistency of the NCE es- timators in Theorem 4.2 and Theorem 4.4. In this part of the paper, we derive their asymptotic distri- bution and quantify their statistical efficiency. To this end, we restrict ourselves to the case where ✓ ⇤ is identifiable (i.e. Assumptions 4.1 or 4.4 hold) and the scoring function s(x, y; ✓) satisfies the fol- lowing smoothness condition:</p><formula xml:id="formula_53">Assumption 4.6 (Smoothness). The scoring func- tion s(x, y; ✓) is twice continuous differentiable w.r.t. ✓ for all (x, y) 2 X ⇥ Y.</formula><p>We first introduce the following maximum- likelihood estimator.</p><formula xml:id="formula_54">b ✓ MLE = arg min ✓ L n MLE (✓) := arg min ✓ n X i=1 log exp(s(x (i) , y (i) ; ✓)) P y2Y exp(s(x (i) , y; ✓)) ! .</formula><p>Define the matrix</p><formula xml:id="formula_55">I ✓ ⇤ = E X ⇥ Var Y |X=x [r ✓ s(x, y; ✓ ⇤ )] ⇤ .</formula><p>As shown below, I ✓ ⇤ is essentially the Fisher in- formation matrix under the conditional model. </p><formula xml:id="formula_56">p n( b ✓ MLE ✓ ⇤ ) ) N(0, I 1 ✓ ⇤ ).</formula><p>For any given estimator b ✓, define the scaled asymptotic mean square error by</p><formula xml:id="formula_57">MSE 1 ( b ✓) = lim n!1 E " r n d ⇣ b ✓ ✓ ⇤ ⌘ 2 # ,</formula><p>where d is the dimension of the parameter ✓ ⇤ . The- orem 4.5 implies that,</p><formula xml:id="formula_58">MSE 1 ( b ✓ MLE ) = Tr(I 1 ✓ ⇤ )/d.</formula><p>where Tr(·) denotes the trace of a matrix. Accord- ing to classical MLE theory <ref type="bibr" target="#b4">(Ferguson, 1996)</ref>, un- der certain regularity conditions, this is the best achievable mean square error. So the next question to answer is: can these NCE estimators approach this limit?  ing the two NCE objectives. We use the unigram distribution as the negative sampling distribution and consider K = 200, 400, 800, 1600.</p><p>The results on the test set are summarized in ta- ble 1. Similar patterns are observed on the vali- dation set (see Section A.2 of the supplementary material). As shown in the table, the performance of NCE-ranking and NCE-binary improves as the number of negative examples increases, and fi- nally outperforms the MLE.</p><p>An interesting observation is, without regular- ization, the binary classification approach outper- forms both ranking and MLE. This suggests the model space (two-layer LSTMs) is rich enough as to approximately incorporate the x-dependent par- tition function Z(✓; x), thus making the model ap- proximately self-normalized. This motivates us to modify the ranking and MLE objectives by adding the following regularization term:</p><formula xml:id="formula_59">↵ n n X i=1 0 @ log 0 @ 1 m m X j=1 exp ⇣ ¯ s(x (i) , e y (i,j) ; ✓) ⌘ 1 A 1 A 2 ⇡ ↵ E X h (log Z(x; ✓)) 2 i ,</formula><p>where e y (i,j) , 1  j  m are sampled from the noise distribution p N (·). This regularization term promotes a constant partition function, that is Z(x; ✓) ⇡ 1 for all x 2 X . In our experiments, we fix m to be 1/10 of the vocabulary size, K = 1600 and tune the regularization parameter ↵. As shown in the last three rows of the table, regularization significantly improves the performance of both the ranking approach and the MLE.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>In this paper we have analyzed binary and rank- ing variants of NCE for estimation of conditional models p(y|x; ✓). The ranking-based variant is consistent for a broader class of models than the binary-based algorithm. Both algorithms achieve Fisher efficiency as the number of negative exam- ples increases. Experiments show that both algo- rithms outperform MLE on a language modeling task. The ranking-based variant of NCE outper- forms the binary-based variant once a regularizer is introduced that encourages self-normalization.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Theorem 3 .</head><label>3</label><figDesc>1 (Informal: see section 4 for a for- mal statement.) For any K 1, the binary classification-based algorithm in figure 1 is con- sistent under Assumption 2.2, but is not always consistent under the weaker Assumption 2.1. For any K 1, the ranking-based algorithm in fig- ure 1 is consistent under either Assumption 2.1 or Assumption 2.2. Both algorithms achieve the same statistical efficiency as the maximum-likelihood estimate as K ! 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Assumption 4 .</head><label>4</label><figDesc>1 (Identifiability). For any ✓ 2 ⇥, if there exists a function c(x) such that s(x, y; ✓) s(x, y; ✓ ⇤ ) ⌘ c(x) for all (x, y) 2 X ⇥ Y, then ✓ = ✓ ⇤ and thus c(x) = 0 for all x. Theorem 4.1 Under Assumption 2.1, ¯ ✓ 2 ⇥ ⇤ R if and only if, for all (x, y) 2 X ⇥ Y,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Assumption 4 .</head><label>4</label><figDesc>4 (Identifiability). For any ✓ 2 ⇥, if there exists some constant c such that s(x, y; ✓)s(x, y; ✓ ⇤ ) ⌘ c for all (x, y) 2 X ⇥Y, then ✓ = ✓ ⇤ and thus c = 0. Assumption 4.5 ⌦ ⇤ B is in the interior of ⇥ ⇥ where ⇥ ⇢ R d , ⇢ R are compact sets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>B if and only if, for all (x, y) 2 X ⇥ Y,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>based on the binary objective.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>.</head><label></label><figDesc>5, the estimates defined by the binary objective are strongly consistent in the sense that for any K 1,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: KL divergence between the true distribution and the estimated distribution.</figDesc><graphic url="image-1.png" coords="9,72.00,210.64,226.77,151.18" type="bitmap" /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors thank Emily Pitler and Ali Elkahky for many useful conversations about the work, and David Weiss for comments on an earlier draft of the paper.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Simulations</head><p>Suppose we have a feature space X ⇢ R d with |X | = m x , label space Y = {1, · · · , m y }, and pa- rameter ✓ = (✓ 1 , · · · , ✓ my ) 2 R my⇥d . Then for any given sample size n, we can generate observa- tions (x (i) , y (i) ) by first sampling x (i) uniformly from X and then sampling y (i) 2 Y by the con- dional model</p><p>We first consider the estimation of ✓ by MLE and NCE-ranking. We fix d = 4, m x = 200, m y = 100 and generate X and the parameter ✓ from sep- arate mixtures of Gaussians. We try different con- figurations of (n, K) and report the KL divergence between the estimated distribution and true distri- bution, as summarized in the left panel of <ref type="figure">figure 2</ref>. The observations are:</p><p>• The NCE estimators are consistent for any fixed K. For a fixed sample size, the NCE estima- tors become comparable to MLE as K increases.</p><p>• The larger the sample size, the less sensitive are the NCE estimators to K. A very small value of K seems to suffice for large sample size.</p><p>Apparently, under the parametrization above, the model is not self-normalized. To use NCE- binary, we add an extra x-dependent bias parame- ter b x to the score function (i.e. s(x, y; ✓) = x 0 ✓ y + b x ) to make the model self-normalized or else the algorithm will not be consistent. Similar patterns to figure 2 are observed when varying sample size and K (see Section A.1 of the supplementary ma- terial). However this makes NCE-binary not di- rectly comparable to NCE-ranking/MLE since its performance will be compromised by estimating extra parameters and the number of extra param- eters depends on the richness of the feature space X . To make this clear, we fix n = 16000, d =</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The results are summarized on the right panel of figure 2. As |X | increases, the KL divergence will grow while the performance of NCE-ranking/MLE is independent of |X |. Without the x-dependent bias term for NCE-binary, the KL divergence will be much higher due to lack of consistency</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
		</imprint>
	</monogr>
	<note>0.19, 0.21, 0.24, 0.26 respectively</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">We choose (Zaremba et al., 2014) as the benchmark where the conditional distribution is modeled by two-layer LSTMs and the parameters are estimated by MLE (note that the current state-of-the-art is</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Marcus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Language Modeling We evaluate the performance of the two NCE algorithms on a language modeling problem, using the Penn Treebank (PTB) dataset</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
	<note>Medium&quot; and &quot;Large&quot;, which have 200, 650 and 1500 units per layer respectively. We follow their setup (model size. unrolled steps, dropout ratio, etc) but train the model by maximizReferences</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Adaptive importance sampling to accelerate training of a neural probabilistic language model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean-Sébastien</forename><surname>Senécal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Neural Networks</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="713" to="722" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A maximum entropy approach to natural language processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><forename type="middle">L</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vincent</forename><forename type="middle">J</forename><surname>Della Pietra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">A</forename><surname>Della Pietra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Linguist</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="39" to="71" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A course in large sample theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ferguson</forename><surname>Thomas Shelburne</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Chapman &amp; Hall London</publisher>
			<biblScope unit="volume">49</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Noise-contrastive estimation of unnormalized statistical models, with applications to natural image statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aapo</forename><surname>Michael U Gutmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hyvärinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="307" to="361" />
			<date type="published" when="2012-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Exploring the limits of language modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rafal</forename><surname>Jozefowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mike</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noam</forename><surname>Shazeer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yonghui</forename><surname>Wu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1602.02410</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Conditional random fields: Probabilistic models for segmenting and labeling sequence data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">D</forename><surname>Lafferty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><forename type="middle">C N</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighteenth International Conference on Machine Learning, ICML &apos;01</title>
		<meeting>the Eighteenth International Conference on Machine Learning, ICML &apos;01<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="282" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Neural word embedding as implicit matrix factorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Omer</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoav</forename><surname>Goldberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th International Conference on Neural Information Processing Systems</title>
		<meeting>the 27th International Conference on Neural Information Processing Systems<address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2014" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="2177" to="2185" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Building a large annotated corpus of english: The penn treebank</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mary</forename><forename type="middle">Ann</forename><surname>Mitchell P Marcus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beatrice</forename><surname>Marcinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Santorini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational linguistics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="313" to="330" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Distributed representations of words and phrases and their compositionality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th International Conference on Neural Information Processing Systems</title>
		<meeting>the 26th International Conference on Neural Information Processing Systems<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>Curran Associates Inc</publisher>
			<date type="published" when="2013" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="3111" to="3119" />
		</imprint>
	</monogr>
	<note>NIPS&apos;13</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A fast and simple algorithm for training neural probabilistic language models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andriy</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yee W</forename><surname>Teh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 29th International Conference on Machine Learning (ICML-12)</title>
		<meeting>the 29th International Conference on Machine Learning (ICML-12)</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1751" to="1758" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Breaking the softmax bottleneck: A high-rank RNN language model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhilin</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zihang</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wojciech</forename><surname>Zaremba</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1409.2329</idno>
		<title level="m">Ilya Sutskever, and Oriol Vinyals. 2014. Recurrent neural network regularization</title>
		<imprint/>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
