<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T10:16+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Generic Axiomatization of Families of Noncrossing Graphs in Dependency Parsing</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>July 30-August 4, 2017. July 30-August 4, 2017</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anssi</forename><surname>Yli-Jyrä</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Gómez-Rodríguez</surname></persName>
						</author>
						<title level="a" type="main">Generic Axiomatization of Families of Noncrossing Graphs in Dependency Parsing</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)</title>
						<meeting>the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) <address><addrLine>Vancouver, Canada; Vancouver, Canada</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="1745" to="1755"/>
							<date type="published">July 30-August 4, 2017. July 30-August 4, 2017</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.18653/v1/p17-1160</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present a simple encoding for unla-beled noncrossing graphs and show how its latent counterpart helps us to represent several families of directed and undi-rected graphs used in syntactic and semantic parsing of natural language as context-free languages. The families are separated purely on the basis of forbidden patterns in latent encoding, eliminating the need to differentiate the families of non-crossing graphs in inference algorithms: one algorithm works for all when the search space can be controlled in parser input.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Dependency parsing has received wide attention in recent years, as accurate and efficient dependency parsers have appeared that are applicable to many languages. Traditionally, dependency parsers have produced syntactic analyses in tree form, includ- ing exact inference algorithms that search for max- imum projective trees <ref type="bibr" target="#b7">(Eisner and Satta, 1999)</ref> and maximum spanning trees <ref type="bibr" target="#b26">(McDonald et al., 2005</ref>) in weighted digraphs, as well as greedy and beam- search approaches that forgo exact search for extra efficiency ( <ref type="bibr" target="#b42">Zhang and Nivre, 2011)</ref>.</p><p>Recently, there has been growing interest in pro- viding a richer analysis of natural language by go- ing beyond trees. In semantic dependency parsing <ref type="bibr" target="#b29">(Oepen et al., 2015;</ref><ref type="bibr" target="#b21">Kuhlmann and Oepen, 2016)</ref>, the desired syntactic representations can have in- degree greater than 1 (re-entrancy), suggesting the search for maximum acyclic subgraphs <ref type="bibr" target="#b36">(Schluter, 2014</ref><ref type="bibr" target="#b37">(Schluter, , 2015</ref>). As this inference task is intractable <ref type="bibr" target="#b15">(Guruswami et al., 2011</ref>), noncrossing digraphs have been studied instead, e.g. by <ref type="bibr" target="#b20">Kuhlmann and Johnsson (2015)</ref> who provide a O(n 3 ) parser for maximum noncrossing acyclic subgraphs.</p><p>Yli-Jyrä (2005) studied how to axiomatize de- pendency trees as a special case of noncrossing di- graphs. This gave rise to a new homomorphic rep- resentation of context-free languages that proves the classical Chomsky and Schützenberger theo- rem using a quite different internal language. In this language, the brackets indicate arcs in a de- pendency tree in a way that is reminiscent to en- coding schemes used earlier by <ref type="bibr" target="#b14">Greibach (1973)</ref> and <ref type="bibr" target="#b30">Oflazer (2003)</ref>. Cubic-time parsing algo- rithms that are incidentally or intentionally appli- cable to this kind of homomorphic representations have been considered, e.g., by <ref type="bibr" target="#b27">Nederhof and Satta (2003)</ref>, <ref type="bibr">Hulden (2011), and</ref><ref type="bibr" target="#b40">Yli-Jyrä (2012)</ref>.</p><p>Extending these insights to arbitrary noncross- ing digraphs, or to relevant families of them, is far from obvious. In this paper, we develop (1) a lin- ear encoding supporting general noncrossing di- graphs, and <ref type="bibr">(2)</ref> show that the encoded noncrossing digraphs form a context-free language. We then give it (3) two homomorphic, nonderivative repre- sentations and use the latent local features of the latter to characterize various families of digraphs.</p><p>Apart from the obvious relevance to the theory of context-free languages, this contribution has the practical potential to enable (4) generic context- free parsers that produce different families of non- crossing graphs with the same set of inference rules while the search space in each case is re- stricted with lexical features and the grammar.</p><p>Outline After some background on graphs and parsing as inference (Section 2), we use an on- tology of digraphs to illustrate natural families of noncrossing digraphs in Section 3. We then develop, in Section 4, the first latent context- free representation for the set of noncrossing di- graphs, then extended in Section 5 with additional latent states supporting our finite-state axiomati- zation of digraph properties, and allowing us to control the search space using the lexicon. The experiments in Section 6 cross-validate our ax- ioms and sample the growth of the constrained search spaces. Section 7 outlines the applications for practical parsing, and Section 8 concludes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Graphs and Digraphs A graph is a pair (V, E) where V is a finite set of vertices and E ⊆ {{u, v} ⊆ V } is a set of edges. A sequence of edges of the form {v 0 , v 1 }, {v 1 , v 2 }, ..., {v m−1 , v m }, with no repetitions in v 1 , ..., v m , is a path between vertices v 0 and v m and empty if m = 0. A graph is a forest if no vertex has a non-empty path to itself and connected if all pairs of vertices have a path. A tree is a connected forest.</p><p>A digraph is a pair (V, A) where A ⊆ V × V is a set of arcs u → v, thus a directed graph. Its un- derlying graph, (V, E A ), has edges</p><formula xml:id="formula_0">E A = {{u, v} | (u, v) ∈ A}. A sequence of arcs v 0 → v 1 , v 1 → v 2 , ..., v m−1 → v m , with no repetitions in v 1 , . . . , v m ,</formula><p>is a directed path, and empty if m = 0.</p><p>A digraph without self-loops v → v is loop-free (property DIGRAPH LF ). We will focus on loop- free digraphs unless otherwise specified, and de- note them just by DIGRAPH for brevity. A di- graph is d-acyclic (ACYC D ), aka a dag if no ver- tex has a non-empty directed path to itself, u- acyclic (ACYC U ) aka a m(ixed)-forest if its under- lying graph is a forest, and weakly connected (w.c., CONN W ) if its underlying graph is connected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dependency Parsing</head><p>The complete digraph G S (V, A) of a sentence S = x 1 ...x n consists of ver- tices V = {1, ..., n} and all possible arcs A = V × V − {(i, i)}. The vertex i ∈ V corresponds to the word x i and the arc i → j ∈ A corresponds to a possible dependency between the words x i and x j .</p><p>The task of dependency parsing is to find a con- strained subgraph G S (V, A ) of the complete di- graph G S of the sentence. The standard solution is a rooted directed tree called a dependency tree or a dag called a dependency graph.</p><p>Constrained Inference In arc-factored parsing <ref type="bibr" target="#b26">(McDonald et al., 2005)</ref>, each possible arc i → j is equipped with a positive weight w i j , usually com- puted as a weighted sum w i j = w · Φ(S, i → j) where w is a weight vector and Φ(x, i → j) a fea- ture vector extracted from the sentence x, con- sidering the dependency relation from word x i to word x j . Parsing then consists in finding an arc subset A ⊆ A that gives us a constrained sub- graph (V, A ) ∈ Constrained(V, A) of the complete digraph (V, A) with maximum sum of arc weights:</p><formula xml:id="formula_1">(V, A ) = arg max (V,A ) ∈ Constrained(V,A) ∑ i→ j∈A w i, j .</formula><p>The complexity of this inference task depends on the constraints imposed on the subgraph. Un- der no constraints, we simply set A = A. Infer- ence over dags is intractable <ref type="bibr" target="#b15">(Guruswami et al., 2011</ref>). Efficient solutions are known for projective trees <ref type="bibr" target="#b6">(Eisner, 1996)</ref>, various classes of mildly non- projective trees <ref type="bibr" target="#b10">(Gómez-Rodríguez, 2016)</ref>, unre- stricted spanning trees ( <ref type="bibr" target="#b26">McDonald et al., 2005</ref>), and both unrestricted and weakly connected non- crossing dags ( <ref type="bibr" target="#b20">Kuhlmann and Johnsson, 2015)</ref>.</p><p>Parsimony Semantic parsers must be able to produce more than projective trees because the share of projective trees is pretty low (under 3%) in semantic graph banks ( <ref type="bibr" target="#b20">Kuhlmann and Johnsson, 2015)</ref>. However, if we know that the parses have some restrictions, it is better to use them to restrict the search space as much as possible.</p><p>There are two strategies for reducing the search space. One is to develop a specialized infer- ence algorithm for a particular natural language or family of dags, such as weakly connected graphs ( <ref type="bibr" target="#b20">Kuhlmann and Johnsson, 2015)</ref>. The other strat- egy is to control the local complexity of digraphs through lexical categories ( <ref type="bibr" target="#b1">Baldridge and Kruijff, 2003)</ref> or equivalent mechanisms. This strategy produces a more sensitive model of the language, but requires a principled insight on how the com- plexity of digraphs can be characterized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Constraints on the Search Space</head><p>We will now present a classification of digraphs on the basis of their formal properties.</p><p>The Noncrossing Property For convenience, graphs and digraphs may be ordered like in a complete digraph of a sentence. Two edges {i, j}, {k, l} in an ordered graph or arcs i → j, k → l in an ordered digraph are said to be crossing if min{i, j} &lt; min{k, l} &lt; max{i, j} &lt; max{k, l}. A graph or digraph is noncrossing if it has no crossing edges or arcs. Noncrossing (di)graphs (NC-(DI)GRAPH) are the largest pos- sible (di)graphs that can be drawn on a circle with- out crossing arcs. In the following, we assume that all digraphs and graphs are noncrossing.</p><p>An arc x → y is (properly) covered by an arc z → t if ({x, y} = {z,t}) and min{z,t} ≤ min{x, y} ≤ max{x, y} ≤ max{z,t}.</p><p>Ontology <ref type="figure">Fig. 1</ref> presents an ontology of such families of loop-free noncrossing digraphs that can be distinguished by digraphs with 5 vertices.</p><p>In the digraph ontology, a multitree aka man- grove is a dag with the property of being strongly unambiguous (UNAMB S ), which asserts that, given two distinct vertices, there is at most one repeat-free path between them (Lange, 1997). 1 A polytree ( <ref type="bibr" target="#b33">Rebane and Pearl, 1987)</ref> is a multitree whose underlying graph is a tree. The out property (OUT) of a digraph (V, E) means that no vertex i ∈ V has two incoming arcs { j, k} → i s.t. j = k.  <ref type="figure">Figure 1</ref>: Basic properties split the set of 62464 noncrossing digraphs for 5 vertices into 23 classes An ordered digraph is weakly projective (PROJ W ) if for all vertices i, j and k, if k → j → i, then either {i, j} &lt; k or {i, j} &gt; k. In other words, the constraint, aka the outside-to-inside constraint <ref type="bibr" target="#b39">(Yli-Jyrä, 2005</ref>), states that no outgoing arc of a vertex properly covers an incoming arc. This is implied by a stronger constraint known as Harper, Hays, Lecerf and Ihm projectivity <ref type="bibr" target="#b25">(Marcus, 1967)</ref>.</p><formula xml:id="formula_2">NC-DIGRAPH +5460 CONNW +43571 UNAMB S +80 ORIENTED +140 ACYCU +1200 OUT +10 w.c</formula><p>We can embed the ontology of graphs (un- restricted, connected, forests and trees) into the ontology of digraphs by viewing an undirected graph (V, E) as an inverse digraph (V, {(i, j), ( j, i) | {i, j} ∈ E}). This kind of digraph has an inverse property (INV). Its opposite is an oriented (or.) di- graph (V, A) where i → j ∈ A implies j → i / ∈ A (defines the property ORIENTED). Out forests and trees are, by convention, oriented digraphs with an underlying forest or tree, respectively.</p><p>1 A different definition forbids diamonds as minors.</p><p>Distinctive Properties A few important proper- ties of digraphs are local and can be verified by inspecting each vertex separately with its incident arcs. These include (i) the out property (OUT), (ii) the nonstandard projectivity property (PROJ W ), (iii) the inverse property (INV) and (iv) the ori- entedness (or.) property.</p><p>Properties UNAMB S , ACYC D , CONN W , and ACYC U are nonlocal properties of digraphs and cannot be generally verified locally, through finite spheres of vertices ( <ref type="bibr" target="#b13">Grädel et al., 2005</ref>). The fol- lowing proposition covers the configurations that we have to detect in order to decide the nonlocal properties of noncrossing digraphs.</p><formula xml:id="formula_3">Proposition 1. Let G = (V, E) be a noncrossing digraph.</formula><p>• If G / ∈ UNAMB S , then the digraph contains one of the following four configurations or their reversals: Proposition 1 gives us a means to implement the property tests in practice. It tells us intuitively that although the paths can be arbitrarily long, any un- derlying cycle containing more than 2 arcs con- sists of one covering arc and a linear chain of edges between its end points.</p><formula xml:id="formula_4">u v y u v y u v y u v x y • If G / ∈ ACYC D , then</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The Set of Digraphs as a Language</head><p>In this section, we show that the set of noncross- ing digraphs is isomorphic to an unambiguous context-free language over a bracket alphabet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Basic Encoding</head><p>Any noncrossing ordered graph ( <ref type="bibr">[1, ..., n]</ref>, E), even with self-loops, can be encoded as a string of brackets using the algorithm enc in <ref type="figure">Fig. 2</ref>. For example, the output for the ordered graph func enc(n,E): func dec(stdin): for i in <ref type="bibr">[1,...,n]</ref>:</p><formula xml:id="formula_5">n = 1; E = {}; s = [] for j in [i-1,...,2,1]:</formula><p>while c in stdin: if {j,i} in E: if c == "[":</p><formula xml:id="formula_6">print "]" s.push(n) for j in [n,n-1,...,i+1]: if c == "]": if {i,j} in E: i = s.pop() print "[" E.insert((i,n)) if {i,i} in E:</formula><p>if c == "{": print "[]" n = n + 1 if i&lt;n: print "{}" return (n,E)</p><p>Figure 2: The encoding and decoding algorithms</p><formula xml:id="formula_7">1 2 3 4 n = 4, E = {1, 2}, {2, 2} {2, 4}, {1, 4} is the string [[{}][[]{}{}]].</formula><p>Intuitively, pairs of brackets of the form {} can be interpreted as spaces between vertices, and then each set of matching brackets <ref type="bibr">[...]</ref> encodes an arc that covers the spaces represented inside the brackets. Any noncrossing ordered digraph ([1, . . . , n], A) can be encoded with slight modifications to the algorithm. Instead of printing [ ] for an edge {i, j} ∈ E A , i ≤ j, the algorithm should now print</p><formula xml:id="formula_8">/ &gt; if (i, j) ∈ A,( j, i) ∈ A; &lt; / if (i, j) / ∈ A,( j, i) ∈ A; [ ] if (i, j), ( j, i) ∈ A.</formula><p>In this way, we can simply encode the di- graph ({1, 2, 3, 4}, {(1, 2), (2, 2), (4, 1), (4, 2)}) as the string</p><formula xml:id="formula_9">&lt;/{}&gt;&lt;[]{}{} / / .</formula><p>Proposition 2. The encoding respects concatena- tion where the adjacent nonempty operands have a common vertex.</p><p>Context-Freeness Arbitrary strings with bal- anced brackets form a context-free language that is known, generically, as a Dyck language. It is easy to see that the graphs NC-GRAPH are en- coded with strings that belong to the Dyck lan- guage D 2 generated by the context-free gram- mar: S → [S]S | {S}S | ε. The encoded graphs, L NC-GRAPH , are, however, generated exactly by the context-free grammar</p><formula xml:id="formula_10">S → [S ] S | {} S | ε, S → [S ] T | {} S, T → [S ] S | {} S. This lan- guage is an unambiguous context-free language.</formula><p>Proposition 3. The encoded graphs, L NC-GRAPH , make an unambiguous context-free language.</p><p>The practical significance of Proposition 3 is that there is a bijection between L NC-GRAPH and the derivation trees of a context-free grammar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Bracketing Beyond the Encoding</head><p>Non-Derivational Representation A non- derivational representation for any context-free language L has been given by <ref type="bibr" target="#b3">Chomsky and Schützenberger (1963)</ref>. This replaces the stack with a Dyck language D and the grammar rules with co-occurrence patterns specified by a regular language Reg. To hide the internal alphabet from the strings of the represented language, there is a homomorphism that cleans the internal strings of Reg and D from internal markup to get actual strings of the target language:</p><formula xml:id="formula_11">L NC-GRAPH = h(D ∩ Reg).</formula><p>To make this concrete, replace the previous con- text free grammar by</p><formula xml:id="formula_12">S → [ S ] S | {} S | ε, S → [S ] S | {} S | ε, S → [ S ] T | {} S, T → [S ] S | {} S.</formula><p>The homomorphism h <ref type="figure" target="#fig_0">(Fig. 3a</ref> </p><formula xml:id="formula_13">Proposition 5. Let L i = h(D ∩ R i ), i ∈ {0, 1, 2} be unambiguous representations with R 1 , R 2 ⊆ R 0 . Then L 3 = h(D ∩ (R 1 ∩ R 2 ))</formula><p>is an unambiguous context-free language and the same as</p><formula xml:id="formula_14">L 1 ∩ L 2 . Proof. It is immediate that L 3 ⊆ L 1 ∩ L 2 and L 3 is an unambiguous context-free language. To show that L 1 ∩ L 2 ⊆ L 3 , take an arbitrary s ∈ L 1 ∩ L 2 . Since R 1 , R 2 ⊆ R 0 there is a unique s ∈ h −1 (s) such that s ∈ D ∩ (R 1 ∩ R 2 ). Thus s ∈ L 3 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Latent Bracketing</head><p>In this section, we extend the internal strings of the non-derivational representation of L NC-DIGRAPH in such a way that the configurations given in Propo- sition 1 can be detected locally from these.</p><p>Classification of Underlying Chains A maxi- mal linear chain is a maximally long sequence of one or more edges that correspond to an under- lying left-to-right path in the underlying graph in such a way that no edge in this chain is properly covered by an edge that does not properly cover all the edges in the chain. For example, the graph Every loose chain (like V and VI) starts with a bracket that is adjacent to a }-bracket. Such a chain can contribute only a covering edge to an un- derlying cycle. In contrast, a bracket with an apos- trophe marks the beginning of a non-loose chain that can either start at the first vertex, or share starting point with a covering chain. When a non- loose chain is covered, it can be touched twice by a covering edge. The prefixes of chains are classi- fied incrementally, from left to right, with a finite automaton ( <ref type="figure" target="#fig_2">Figure 4</ref>). All states of the automaton are final and correspond to distinct classes of the chains. These classes are encoded to an extended set of brackets. The automaton is symmetric: states with uppercase names are symmetrically related with corresponding lowercase states. Thus, it suffices to define the initial and uppercase-named states: Example Here is a digraph with its latent encoding:</p><formula xml:id="formula_15">[ [ { }] [[ { }] [{ }]][[ { }] { }[{ }]]] [{ }[{ }]{ }]</formula><formula xml:id="formula_16">&lt;f [I 1 { } ]I /0 /F 2 { } &gt;F 3 { } &lt;. 4 { } /. 5 { } &gt;. 6 { } / . &gt;0 / f 7</formula><p>The brackets in the extended representation con- tain information that helps us recognize, through local patterns, that this graph has a directed cycle   <ref type="table">Table 1</ref>: Properties of encoded noncrossing digraphs as constraint languages (directed path 1 → 2 → 7 → 1), is strongly am- biguous (two directed paths 2 → 1 and 2 → 7 → 1) and is not weakly connected (vertices 5 and 6 are not connected to the rest of the digraph).</p><formula xml:id="formula_17">ACYC U A U = Σ * − Σ * R loose RΣ * R loose (no connecting edges) (a vertex without edges) CONN W C W = Σ * − Σ * R loose (ε ∪ BΣ * ) − (BΣ * ∪ Σ * B) R right R / R left R &gt; forward backward inverted arc ACYC D A D = Σ * − Σ * (R right R / ∪ R left R &gt; ∪ Σ inv )Σ * R right R &gt; R left R / R vergent R forward backward con/divergent R left2 R &gt; R right2 R \ divergent backward forward divergent UNAMB S U S = Σ * − Σ * (R right R &gt; ∪ R left R / ∪ R vergent R)Σ * −Σ * (R left2 R &gt; ∪ R right2 R \ )Σ * L / L &lt; R &gt; R / PROJ W P W = Σ * − Σ * (L / L &lt; ∪ R &gt; R / )Σ * (an arc without inverse) INV I = Σ * − Σ * Σ or Σ * (a state with more than 2 incoming arcs) OUT Out = Σ * − Σ * Σ in (Σ − B) * Σ in Σ * (an inverted edge) ORIENTED O = Σ * − Σ * Σ inv Σ *</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Expressing Properties via Forbidden Patterns</head><p>We now demonstrate that all the mentioned non- local properties of graphs have become local in the extended internal representation of the code strings L NC-DIGRAPH for noncrossing digraphs. These distinctive properties of graph families reduce to forbidden patterns in bracket strings and then compile into regular constraint languages. These are presented in <ref type="table">Table 1</ref>. To keep the pat- terns simple, subsets of brackets are defined:</p><formula xml:id="formula_18">L / [-,/-brackets L &lt; [-,&lt;-brackets R &gt; ]-,&gt;-brackets R / ]-,\-brackets B {, } R R &gt; ∪ R \ R loose }, &gt;., / ., ]. R loose R − R loose R right R reaching F,Q,I,A R left R reaching f,q,i,a R right2 &gt;P, &gt;2, &gt;E, \E, ]E R left2 \p, \2, \e, &gt;e, ]e Σ in L &lt; ∪ R &gt; B Σ − B R vergent non-' R reaching I,Q,q,A,a,C,c Σ or</formula><p>all brackets for oriented edges Σ inv all brackets for inverted edges</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Validation Experiments</head><p>The current experiments were designed (1) to help in developing the components of Reg lat and the constraint languages of axiomatic properties, (2) to validate the representation, the constraint lan- guages and their unambiguity, (3) to learn about the ontology and (4) to sample the integer se- quences associated with the cardinality of each family in the ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Finding the Components Representations of</head><p>Reg lat were built with scripts written using a finite- state toolkit <ref type="bibr" target="#b16">(Hulden, 2009</ref>) that supports rapid ex- ploration with regular languages and transducers.</p><p>Validation of Languages Our scripts presented alternative approaches to compute languages of encoded digraphs with n vertices up to n = 9. We also implemented a Python script that enumerated elements of families of graphs up to n = 6. The solutions were used to cross-validate one another. The constraint G n = B * ({}B * ) n−1 ensures n- vertices in encoded digraphs. The finite set of encoded acyclic 5-vertex digraphs was computed with a finite-state approach ) that takes the input projection of the composition</p><formula xml:id="formula_19">Id(Reg lat ∩A D ∩G 5 )•T 55 •T 55 •T 55 •T 55 •T 55 •Id(ε)</formula><p>where Id defines an identity relation and trans- ducer T 55 eliminates matching adjacent brack- ets. This composition differs from the typical use where the purpose is to construct a regular relation <ref type="bibr" target="#b18">(Kaplan and Kay, 1994)</ref> or its output projection <ref type="bibr" target="#b34">(Roche, 1996;</ref><ref type="bibr" target="#b30">Oflazer, 2003)</ref>.</p><p>For digraphs with a lot of vertices, we had an option to employ a dynamic programming scheme <ref type="bibr" target="#b40">(Yli-Jyrä, 2012</ref>) that uses weighted transducers.</p><p>Building the Ontology To build the ontology in <ref type="figure">Figure 1</ref> we first found out which combinations of digraph properties co-occur to define distinguish- able families of digraphs. After the nodes of the lattice were found, we were able to see the partial order between these.</p><p>Integer Sequences We sampled, for important families of digraphs, the prefixes of their related integer sequences. We found out that each family of graphs is pretty much described by its cardi- nality, see <ref type="table" target="#tab_3">Table 2</ref>. In many cases, the number se- quence was already well documented (OEIS Foun- dation Inc., 2017).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">The Formal Basis of Practical Parsing</head><p>While presenting a practical parser implementa- tion is outside of the scope of this paper, which focuses in the theory, we outline in this section the aspects to take into account when applying our representation to build practical natural language parsers.</p><p>Positioned Brackets In order to do inference in arc-factored parsing, we incorporate weights to the representation. For each vertex in G n , the brackets are decorated with the respective position number. Then, we define an input-specific grammar repre- sentation where each pair of brackets in D gets an arc-factored weight given the directions and the vertex numbers associated with the brackets.</p><p>Grammar Intersection We associate, to each G n , a quadratic-size context-free grammar that generates all noncrossing digraphs with n vertices. This grammar is obtained by computing (or even precomputing) the intersection D 55 ∩ Reg lat ∩ G n in any order, exploiting the closure of context- free languages under intersection with regular languages ( <ref type="bibr" target="#b2">Bar-Hillel et al., 1961)</ref>. The intro- duction of the position numbers and weights in the Dyck language gives us, instead, a weighted grammar and its intersection <ref type="bibr" target="#b23">(Lang, 1994)</ref>. This grammar is a compact representation for a finite set of weighted latent encoded digraphs. Addi- tional constraints during the intersection tailors the grammar to different families of digraphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dynamic Programming</head><p>The heaviest digraph is found with a dynamic programming algorithm that computes, for each nonterminal in the gram- mar, the weight of the heaviest subtree. A care- ful reader may notice some connections to Eisner algorithm <ref type="bibr" target="#b7">(Eisner and Satta, 1999</ref>), context-free parsing through intersection <ref type="bibr" target="#b27">(Nederhof and Satta, 2003)</ref>, and a dynamic programming scheme that uses contracting transducers and factorized com- position <ref type="bibr" target="#b40">(Yli-Jyrä, 2012</ref>). Unfortunately, space does not permit discussing the connections here.</p><p>Lexicalized Search Space In practical parsing, we want the parser behavior and the dependency structure to be sensitive to the lexical entries or features of each word. We can replace the generic vertex description B * in G n with subsets that de- pend on respective lexical entries. Graphical con- straints can be applied to some vertices but relaxed for others. This application of current results gives a principled, graphically motivated solution to lex- icalized control over the search space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>We have investigated the search space of parsers that produce noncrossing digraphs. Parsers that can be adapted to different needs are less depen- dent on artificial assumptions on the search space. Adaptivity gives us freedom to model how the properties of digraphs are actually distributed in linguistic data. As the adaptive data analysis de- serves to be treated in its own right, the current work focuses on the separation of the parsing al- gorithm from the properties of the search space.</p><p>This paper makes four significant contributions.</p><p>Contribution 1: Digraph Encoding The paper introduces, for noncrossing digraphs, an encoding that uses brackets to indicate edges. Bracketed trees are widely used in generative syntax, treebanks and structured document for- mats. There are established conversions between phrase structure and projective dependency trees, but the currently advocated edge bracketing is ex- pressive and captures more than just projective dependency trees. This capacity is welcome as syntactic and semantic analysis with dependency graphs is a steadily growing field.</p><p>The edge bracketing creates new avenues for the study of connections between noncrossing graphs and context-free languages, as well as their recognizable properties. By demonstrating that digraphs can be treated as strings, we suggest that practical parsing to these structures could be implemented with existing methods that restrict context-free grammars to a regular yield language.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Contribution 2:</head><p>Context-Free Properties Acyclicity and other important properties of noncrossing digraphs are expressible as unam- biguous context-free sets of encoded noncrossing  digraphs. This facilitates the incorporation of property testing to dynamic programming algorithms that implement exact inference.</p><p>Descriptive complexity helps us understand to which degree various graphical properties are lo- cal and could be incorporated into efficient dy- namic programming during exact inference. It is well known that acyclicity and connecticity are not definable in first-order logic (FO) while they can be defined easily in monadic second order logic (MSO) <ref type="bibr" target="#b5">(Courcelle, 1997)</ref>. MSO involves set-valued variables whose use in dynamic pro- gramming algorithms and tabular parsing is inef- ficient. MSO queries have a brute force transfor- mation to first-order (FO) logic, but this does not generally help either as it is well known that MSO can express intractable problems.</p><p>The interesting observation of the current work is that some MSO definable properties of digraphs become local in our extended encoding. This en- coding is linear compared to the size of digraphs: each string over the extended bracket alphabet en- codes a fixed assignment of MSO variables. The properties of noncrossing digraphs now reduce to properties of bracketed trees with linear amount of A deeper explanation for our observation comes from the fact that the treewidth of noncrossing and other outerplanar graphs is bounded to 2. When the treewidth is bounded, all MSO definable prop- erties, including the intractable ones, become lin- ear time decidable for individual structures <ref type="bibr" target="#b4">(Courcelle, 1990</ref>). They can also be decided in a loga- rithmic amount of writable space <ref type="bibr" target="#b9">(Elberfeld et al., 2010</ref>), e.g. with element indices instead of sets. By combining this insight with Proposition 1, we obtain a logspace solution for testing acyclicity of a noncrossing graph ( <ref type="figure" target="#fig_6">Figure 5)</ref>.</p><p>Although bounded treewidth is a weaker con- straint than so-called bounded treedepth that would immediately guarantee first-order definabil-ity ( <ref type="bibr" target="#b8">Elberfeld et al., 2016)</ref>, it can sometimes turn intractable search problems to dynamic program- ming algorithms ( <ref type="bibr" target="#b0">Akutsu and Tamura, 2012</ref>). In our case, Proposition 1 gave rise to unambigu- ous context-free subsets of L NC-DIGRAPH . These can be recognized with dynamic programming and used in efficient constrained inference when we add vertex indices to the brackets and weights to the grammar of the corresponding Dyck language.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Contribution 3:</head><p>Digraph Ontology The context-free properties of encoded digraphs have elegant nonderivative language representations and they generate a semi-lattice under language intersection. Although context-free languages are not generally closed under intersection, all combinations of the properties in this lattice are context-free and define natural families of digraphs. The nonderivative representations for our axiomatic properties share the same Dyck lan- guage D 55 and homomorphism, but differ in terms of forbidden patterns. As a consequence, also any conjunctive combination of these two prop- erties shares these components and thus define a context-free language. The obtained semilattice is an ontology of families of noncrossing digraphs.</p><p>Our ontology contains important families of noncrossing digraphs used in syntactic and se- mantic dependency parsing: out trees, dags, and weakly connected digraphs. It shows the entail- ment between the properties and proves the exis- tence of less known families of noncrossing di- graphs such as strongly unambiguous digraphs and oriented graphs, multitrees, oriented forests and polytrees. These are generalizations of out oriented trees. However, these families can still be weakly projective. <ref type="table" target="#tab_3">Table 2</ref> shows integer se- quences obtained by enumerating digraphs in each family. At least twelve of these sequences are pre- viously known, which indicates that the families are natural.</p><p>We used a finite-state toolkit to build the com- ponents of the nongenerative language representa- tion for latent encoded digraphs and the axioms. <ref type="bibr">2</ref> Contribution 4: Generic Parsing The fourth contribution of this paper is to show that parsing algorithms can be separated from the formal prop- erties of their search space.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>) would now relate this language to the original lan- guage, mapping the string [ [ {}] [[ {}] {}]] to the string [[{}][[{}]{}]], for example. The Dyck language D = D 3 checks that the internal brack- ets are balanced, and the regular component Reg (Fig. 3b) checks that the new brackets are used correctly. A similar representation for the lan- guage L NC-DIGRAPH of encoded digraphs can be obtained with straightforward extensions.The h and Reg components The representation L = h(D ∩ Reg) is unam- biguous if, for every word w ∈ L, the preimage h −1 (w) ∩ D ∩ Reg is a single string. This implies that L is an unambiguous context-free language. Proposition 4. The set of encoded digraphs, L NC-DIGRAPH , has an unambiguous representation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>six maximal linear chains, indicated with their Roman numbers on each arc. We decide non- local properties of noncrossing digraphs by recog- nizing maximal linear chains as parts of configu- rations presented in Proposition 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The finite automaton whose state 0 begins non-loose chains and state 1 loose chains</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>→ x ← ←y involves three chain levels. To support the recognition, subtypes of edges are defined according to the chains they cover. The brackets &gt;I', \I', &gt;I, \I, \A, &gt;a, \Q, &gt;Q, &gt;q,\q, &gt;C, \c, \E, &gt;e indicate edges that constitute a cycle with the chain they cover. The brackets &gt;V', \v', &gt;V, \v indicate edges that cover 2-turn chains. Not all states make these distinctions. Extended Representation The extended brack- ets encode the latent structure of digraphs: the ori- entation and the subtype of the edge and the class of the chain. The total alphabet Σ of the strings now contains the boundary brackets {} and 54 pairs of brackets (Figure 4) for edges from which we obtain a new Dyck language, D 55 , and an ex- tended homomorphism h lat . The Reg component of the language representa- tion is replaced with Reg lat , that is, an intersection of (1) an inverse homomorphic image of Reg to strings over the extended alphabet, (2) a local lan- guage that constrains adjacent edges according to Figure 4, (3) a local language specifying how the chains start, and (4) a local language that distin- guishes pure oriented edges from those that cover a cycle or a 2-turn chain. The new component re- quires only 24 states as a deterministic automaton. Proposition 6. h lat (D 55 ∩ Reg lat ) is an unambigu- ous representation for L NC-DIGRAPH . The internal language L NC-DIGRAPH lat = D 55 ∩ Reg lat is called the set of latent encoded digraphs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Forbidden</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>A</head><label></label><figDesc>= (OEIS Foundation Inc., 2017), KJ = Kuhlmann (2015) or Kuhlmann and Johnsson (2015), YJ = Yli-Jyrä (2012)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Testing ACYC U in logarithmic space</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>patterns in noncrossing digraphs¸</head><label></label><figDesc></figDesc><table>Property 
Constraint language 

R loose R 

a nonloose chain 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><head>Table 2 : Characterizations for some noncrossing families of digraphs and graphs</head><label>2</label><figDesc></figDesc><table>Name 
Sequence prefix for n = 2, 3, ... 
Example 
Name 
Sequence prefix for n = 2, 3, ... Example 

digraph 
(KJ): 4,64,1792,62464,2437120,101859328 
hlat(D55 ∩ Gn ∩ Reg lat ) 

1 2 3 4 5 

weakly projective 
digraph 
4,36,480,7744,138880,2661376 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ) 

1 2 3 4 5 

w.c.digraph 3,54,1539,53298,2051406,84339468 
hlat(D55 ∩ Gn ∩ Reg lat ∩CW ) 

1 2 3 4 5 

w.p. w.c.digraph 3,26,339,5278,90686,1658772 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩CW ) 

1 2 3 4 5 

unamb.digr. 4,39,529,8333,142995,2594378 
hlat(D55 ∩ Gn ∩ Reg lat ∩US) 

1 2 3 4 5 

w.p. unamb.digr. 4,29,275,3008,35884,453489 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩US) 

1 2 3 4 5 

m-forest 
4,37,469,6871,109369,1837396,32062711 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AU ) 

1 2 3 4 5 

w.p. m-forest 
4,29,273,2939,34273,421336 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AU ) 

1 2 3 4 5 

out digraph 4,27,207,1683,14229,123840,1102365 
hlat(D55 ∩ Gn ∩ Reg lat ∩ Out) 

1 2 3 4 5 

w.p. out digraph 4,21,129,867,6177,45840,350379 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ Out) 

1 2 3 4 5 

or. digraph 3,27,405,7533,156735,3492639,77539113 
hlat(D55 ∩ Gn ∩ Reg lat ∩ O) 

1 2 3 4 5 

w.p. or.digraph 
see w.p.dag 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ O) 
see w.p.dag 
dags 
(A246756): 3,25,335,5521,101551 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD) 

1 2 3 4 5 

w.p. dag 
3,21,219,2757,38523, 574725, 8967675 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD) 

1 2 3 4 5 

w.c. dag 
(KJ): 2,18,242,3890,69074,1306466 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∩CW ) 

1 2 3 4 5 

w.p. w.c. dag 
2,14,142,1706,22554,316998,4480592 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD ∩CW ) 

1 2 3 4 5 

multitree 
3,19,167,1721,19447,233283,2917843 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∩US) 
see oriented forest 
or w.c. multitree 

w.p. multitree 
3,17,129,1139,11005,112797,1203595 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD ∩US) 

1 2 3 4 5 

or.forest 
3,19,165,1661,18191,210407,2528777 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∪ AU ) 

1 2 3 4 5 

w.p. or.forest 
3,17,127,1089,10127,99329,1010189 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD ∪ AU ) 

1 2 3 4 5 

w.c. multitree 2,12,98,930,9638,105798,1201062 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∩US ∩CW ) 

1 2 3 4 5 

w.p. w.c. multitree 2,10,68,538,4650,42572,404354 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD ∩US ∩CW ) 1 2 3 4 5 
out or.forest 3,16,105,756,5738,45088,363221 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∩ Out) 

1 2 3 4 5 

w.p. out or.forest (A003169): 3,14,79,494,3294,22952 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD ∩ Out) 

1 2 3 4 5 

polytree 
(A153231): 2,12,96,880,8736,91392 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∩CW ∩ AU ) 

1 2 3 4 5 

w.p. polytree 
(A027307):2,10,66,498,4066,34970 
hlat(D55 ∩ Gn ∩ Reg lat ∩ PW ∩ AD ∩CW ∩ AU ) 1 2 3 4 5 

out or.tree 
(A174687): 2,9,48,275,1638,9996 
hlat(D55 ∩ Gn ∩ Reg lat ∩ AD ∩CW ∩ Out) 

1 2 3 4 5 

projective 
out or.tree 
(A006013): 2,7,30,143,728,3876,21318 
hlat(D55 ∩Gn ∩Reg lat ∩PW ∩AD ∩CW ∩Out) 1 2 3 4 5 

graph 
(A054726): 2,8,48,352,2880,25216 
hlat(D55 ∩ Gn ∩ Reg lat ∩ I) 

1 2 3 4 5 

connected graph (A007297): 1,4,23,156,1162,9192 
hlat(D55 ∩ Gn ∩ Reg lat ∩ I ∩CW ) 

1 2 3 4 5 

forest 
(A054727): 2,7,33,181,1083,6854 
hlat(D55 ∩ Gn ∩ Reg lat ∩ I ∩ AU ) 

1 2 3 4 5 

tree 
(A001764,YJ): 1,3,12,55,273,1428,7752 
hlat(D55 ∩ Gn ∩ Reg lat ∩ I ∩ AU ∩CW ) 

</table></figure>

			<note place="foot" n="2"> The finite-state toolkit scripts and a Python-based graph enumerator are available at https://github.com/amikael/ncdigraphs .</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A polynomial-time algorithm for computing the maximum common subgraph of outerplanar graphs of bounded degree</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tatsuya</forename><surname>Akutsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takeyuki</forename><surname>Tamura</surname></persName>
		</author>
		<idno type="doi">10.1007/978-3-642-32589-210</idno>
		<ptr target="https://doi.org/10.1007/978-3-642-32589-210" />
	</analytic>
	<monogr>
		<title level="m">Mathematical Foundations of Computer Science 2012: 37th International Symposium, MFCS 2012</title>
		<editor>Branislav Rovan, Vladimiro Sassone, and Peter Widmayer</editor>
		<meeting><address><addrLine>Bratislava, Slovakia; Berlin Heidelberg; Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012-08-27" />
			<biblScope unit="page" from="76" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Multi-modal combinatory categorial grammar</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Baldridge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Geert-Jan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kruijff</surname></persName>
		</author>
		<idno type="doi">10.3115/1067807.1067836</idno>
		<ptr target="https://doi.org/10.3115/1067807.1067836" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of EACL&apos;03: the Tenth Conference on European Chapter of the Association for Computational Linguistics</title>
		<meeting>EACL&apos;03: the Tenth Conference on European Chapter of the Association for Computational Linguistics<address><addrLine>Budapest, Hungary</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="211" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On formal properties of simple phrase structure grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yehoshua</forename><surname>Bar-Hillel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Micha</forename><surname>Perles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eliahu</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Zeitschrift für Phonologie, Sprachwissenschaft und Kommunikationsforschung</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="113" to="124" />
			<date type="published" when="1961" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">The algebraic theory of context-free languages. Computer Programming and Formal Systems pages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noam</forename><surname>Chomsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcel-Paul</forename><surname>Schützenberger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1963" />
			<biblScope unit="page" from="118" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The monadic second-order logic of graphs. I. recognizable sets of finite graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bruno</forename><surname>Courcelle</surname></persName>
		</author>
		<idno type="doi">10.1016/0890-5401(90)90043-H</idno>
		<ptr target="https://doi.org/10.1016/0890-5401(90)90043-H" />
	</analytic>
	<monogr>
		<title level="j">Information and Computation</title>
		<imprint>
			<biblScope unit="volume">85</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="12" to="75" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The expression of graph properties and graph transformations in monadic secondorder logic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bruno</forename><surname>Courcelle</surname></persName>
		</author>
		<editor>G. Rozenberg</editor>
		<imprint>
			<date type="published" when="1997" />
			<publisher>World Scientific</publisher>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="313" to="400" />
			<pubPlace>New-Jersey, London</pubPlace>
		</imprint>
	</monogr>
	<note>Handbook of Graph Grammars and Computing by Graph Transformations</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Three new probabilistic models for dependency parsing: An exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Eisner</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/C/C96/C96-1058.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th International Conference on Computational Linguistics (COLING-96)</title>
		<meeting>the 16th International Conference on Computational Linguistics (COLING-96)<address><addrLine>Copenhagen, Denmark</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="340" to="345" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Efficient parsing for bilexical context-free grammars and Head Automaton Grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Eisner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Satta</surname></persName>
		</author>
		<idno type="doi">10.3115/1034678.1034748</idno>
		<ptr target="https://doi.org/10.3115/1034678.1034748" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics</title>
		<meeting>the 37th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics<address><addrLine>College Park, Maryland, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="457" to="464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Where first-order and monadic secondorder logic coincide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Elberfeld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Grohe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Till</forename><surname>Tantau</surname></persName>
		</author>
		<idno type="doi">10.1145/2946799</idno>
		<idno>25:1-25:18</idno>
		<ptr target="https://doi.org/10.1145/2946799" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Comput. Logic</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Logspace versions of the theorems of Bodlaender and Courcelle</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Elberfeld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Jakoby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Till</forename><surname>Tantau</surname></persName>
		</author>
		<idno type="doi">10.1109/FOCS.2010.21</idno>
		<ptr target="https://doi.org/10.1109/FOCS.2010.21" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 IEEE 51st Annual Symposium on Foundations of Computer Science</title>
		<meeting>the 2010 IEEE 51st Annual Symposium on Foundations of Computer Science<address><addrLine>Washington, DC, USA, FOCS &apos;10</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="143" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Restricted non-projectivity: Coverage vs. efficiency</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Gómez-Rodríguez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="809" to="817" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<idno type="doi">10.1162/COLIa00267</idno>
		<ptr target="https://doi.org/10.1162/COLIa00267" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Dependency parsing schemata and mildly non-projective dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Gómez-Rodríguez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">A</forename><surname>Carroll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">J</forename><surname>Weir</surname></persName>
		</author>
		<idno type="doi">10.1162/COLIa00060</idno>
		<ptr target="https://doi.org/10.1162/COLIa00060" />
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="541" to="586" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erich</forename><surname>Grädel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Kolaitis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Libkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Marx</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Spencer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Moshe</forename><forename type="middle">Y</forename><surname>Vardi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Venema</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Finite Model Theory and Its Applications</title>
		<meeting><address><addrLine>Secaucus, NJ, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag New York, Inc</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The hardest context-free language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sheila</forename><surname>Greibach</surname></persName>
		</author>
		<idno type="doi">10.1137/0202025</idno>
		<ptr target="https://doi.org/10.1137/0202025" />
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="304" to="310" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Beating the random ordering is hard: Every ordering CSP is approximation resistant</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Venkatesan</forename><surname>Guruswami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johan</forename><surname>Håstad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rajsekar</forename><surname>Manokaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prasad</forename><surname>Raghavendra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Moses</forename><surname>Charikar</surname></persName>
		</author>
		<idno type="doi">10.1137/090756144</idno>
		<ptr target="https://doi.org/10.1137/090756144" />
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">878914</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Foma: a finite-state compiler and library</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mans Hulden</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/E09-2008" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Demonstrations Session at EACL 2009. Association for Computational Linguistics</title>
		<meeting>the Demonstrations Session at EACL 2009. Association for Computational Linguistics<address><addrLine>Athens, Greece</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="29" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Human Language Technology. Challenges for Computer Science and Linguistics: 4th Language and Technology Conference, LTC</title>
		<idno type="doi">10.1007/978-3-642-20095-314</idno>
		<ptr target="https://doi.org/10.1007/978-3-642-20095-314" />
	</analytic>
	<monogr>
		<title level="m">Mans Hulden. 2011. Parsing CFGs and PCFGs with a Chomsky-Schützenberger representation</title>
		<editor>Zygmunt Vetulani</editor>
		<meeting><address><addrLine>Poznan, Poland; Berlin Heidelberg; Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009-11-68" />
			<biblScope unit="page" from="151" to="160" />
		</imprint>
	</monogr>
	<note>Revised Selected Papers</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Regular models of phonological rule systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ronald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="331" to="378" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Kuhlmann</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1504.04993</idno>
		<ptr target="https://arxiv.org/abs/1504.04993" />
		<title level="m">Tabulation of noncrossing acyclic digraphs</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Parsing to noncrossing dependency graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Kuhlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Johnsson</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/Q/Q15/Q15-1040.pdf" />
	</analytic>
	<monogr>
		<title level="j">Transactions of the Association for Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="559" to="570" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Towards a catalogue of linguistic graph banks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Kuhlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephan</forename><surname>Oepen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="819" to="827" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<idno type="doi">10.1162/COLIa00268</idno>
		<ptr target="https://doi.org/10.1162/COLIa00268" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Recognition can be harder than parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernard</forename><surname>Lang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Intelligence</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="486" to="494" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">An unambiguous class possessing a complete set</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus-Jörn</forename><surname>Lange</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=695352" />
	</analytic>
	<monogr>
		<title level="m">STACKS&apos;97 Proceedings</title>
		<editor>Morvan Reischuk</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997" />
			<biblScope unit="volume">1200</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Algebraic Linguistics; Analytical Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marcus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics in Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<date type="published" when="1967" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Non-projective dependency parsing using spanning tree algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kiril</forename><surname>Ribarov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Human Language Technology Conference and Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics</title>
		<meeting>Human Language Technology Conference and Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics<address><addrLine>British Columbia, Canada</addrLine></address></meeting>
		<imprint>
			<publisher>Vancouver</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page">523</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Probabilistic parsing as intersection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Mark-</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Nederhof</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Satta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">8th International Workshop on Parsing Technologies. LORIA</title>
		<meeting><address><addrLine>Nancy, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="137" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
				<ptr target="http://oeis.org" />
		<title level="m">OEIS Foundation Inc. 2017. The on-line encyclopedia of integer sequences</title>
		<imprint>
			<date type="published" when="2017-01" />
			<biblScope unit="page">15</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Semeval 2015 task 18: Broad-coverage semantic dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephan</forename><surname>Oepen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Kuhlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yusuke</forename><surname>Miyao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Zeman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Silvie</forename><surname>Cinkova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Flickinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Hajic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zdenka</forename><surname>Uresova</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/S15-2153" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Workshop on Semantic Evaluation</title>
		<meeting>the 9th International Workshop on Semantic Evaluation<address><addrLine>Denver, Colorado</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="915" to="926" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Dependency parsing with an extended finite-state approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kemal</forename><surname>Oflazer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="515" to="544" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<idno type="doi">10.1162/089120103322753338</idno>
		<ptr target="https://doi.org/10.1162/089120103322753338" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Finding optimal 1-endpointcrossing trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emily</forename><surname>Pitler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sampath</forename><surname>Kannan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mitchell</forename><surname>Marcus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of the Association for Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="13" to="24" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">The recovery of causal poly-trees from statistical data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><surname>Rebane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Judea</forename><surname>Pearl</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=3023784" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd Annual Conference on Uncertainty in Artificial Intelligence (UAI 1987</title>
		<meeting>the 3rd Annual Conference on Uncertainty in Artificial Intelligence (UAI 1987<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="222" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Transducer parsing of free and frozen sentences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emmanuel</forename><surname>Roche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Natural Language Engineering</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="345" to="350" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title/>
		<idno type="doi">10.1017/S1351324997001605</idno>
		<ptr target="https://doi.org/10.1017/S1351324997001605" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">On maximum spanning DAG algorithms for semantic DAG parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Natalie</forename><surname>Schluter</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/W/W14/W14-2412.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACL 2014 Workshop on Semantic Parsing. Association for Computational Linguistics</title>
		<meeting>the ACL 2014 Workshop on Semantic Parsing. Association for Computational Linguistics<address><addrLine>Baltimore, MD</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="61" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">The complexity of finding the maximum spanning DAG and other restrictions for DAG parsing of natural language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Natalie</forename><surname>Schluter</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/S15-1031" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourth Joint Conference on Lexical and Computational Semantics. Association for Computational Linguistics</title>
		<meeting>the Fourth Joint Conference on Lexical and Computational Semantics. Association for Computational Linguistics<address><addrLine>Denver, Colorado</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="259" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Axiomatization of restricted non-projective dependency trees through finite-state constraints that analyse crossing bracketings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anssi</forename><surname>Yli-Jyrä</surname></persName>
		</author>
		<ptr target="https://www.aclweb.org/anthology/W/W04/W04-1504.pdf" />
	</analytic>
	<monogr>
		<title level="m">COLING 2004 Recent Advances in Dependency Grammar. COLING</title>
		<editor>Geert-Jan M. Kruijff and Denys Duchier</editor>
		<meeting><address><addrLine>Geneva, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="25" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Approximating dependency grammars through intersection of star-free regular languages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anssi</forename><surname>Yli-Jyrä</surname></persName>
		</author>
		<idno type="doi">10.1142/S0129054105003169</idno>
		<ptr target="https://doi.org/10.1142/S0129054105003169" />
	</analytic>
	<monogr>
		<title level="j">Int. J. Found. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="565" to="579" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">On dependency analysis via contractions and weighted FSTs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anssi</forename><surname>Yli-Jyrä</surname></persName>
		</author>
		<idno type="doi">10.1007/978-3-642-30773-710</idno>
		<ptr target="https://doi.org/10.1007/978-3-642-30773-710" />
	</analytic>
	<monogr>
		<title level="m">Shall We Play the Festschrift Game?, Essays on the Occasion of Lauri Carlson&apos;s 60th Birthday</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="133" to="158" />
		</imprint>
	</monogr>
	<note>Diana Santos, Krister Lindén, and Wanjiku Ng&apos;ang&apos;a</note>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Refining the design of a contracting finite-state dependency parser</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anssi</forename><surname>Yli-Jyrä</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jussi</forename><surname>Piitulainen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Atro</forename><surname>Voutilainen</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/W12-6218" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th International Workshop on Finite State Methods and Natural Language Processing</title>
		<meeting>the 10th International Workshop on Finite State Methods and Natural Language Processing<address><addrLine>Donostia-San Sebastián, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="108" to="115" />
		</imprint>
	</monogr>
	<note>Iñaki Alegria and Mans Hulden</note>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Transition-based dependency parsing with rich non-local features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/P11-2033" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies<address><addrLine>Portland, Oregon, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="188" to="193" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
