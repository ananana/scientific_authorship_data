<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T12:55+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Learning Discourse-level Diversity for Neural Dialog Models using Conditional Variational Autoencoders</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>July 30-August 4, 2017. July 30-August 4, 2017</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Ran Zhao</roleName><forename type="first">Tiancheng</forename><surname>Zhao</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Ran Zhao</roleName><forename type="first">Ran</forename><surname>Zhao</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maxine</forename><surname>Eskenazi</surname></persName>
						</author>
						<title level="a" type="main">Learning Discourse-level Diversity for Neural Dialog Models using Conditional Variational Autoencoders</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)</title>
						<meeting>the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) <address><addrLine>Vancouver, Canada; Vancouver, Canada</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="654" to="664"/>
							<date type="published">July 30-August 4, 2017. July 30-August 4, 2017</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.18653/v1/p17-1061</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>While recent neural encoder-decoder models have shown great promise in mod-eling open-domain conversations, they often generate dull and generic responses. Unlike past work that has focused on diversifying the output of the decoder at word-level to alleviate this problem, we present a novel framework based on conditional variational autoencoders that captures the discourse-level diversity in the encoder. Our model uses latent variables to learn a distribution over potential conversational intents and generates diverse responses using only greedy de-coders. We have further developed a novel variant that is integrated with linguistic prior knowledge for better performance. Finally, the training procedure is improved by introducing a bag-of-word loss. Our proposed models have been validated to generate significantly more diverse responses than baseline approaches and exhibit competence in discourse-level decision-making.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The dialog manager is one of the key components of dialog systems, which is responsible for mod- eling the decision-making process. Specifically, it typically takes a new utterance and the dialog con- text as input, and generates discourse-level deci- sions ( <ref type="bibr" target="#b3">Bohus and Rudnicky, 2003;</ref><ref type="bibr">Williams and Young, 2007)</ref>. Advanced dialog managers usu- ally have a list of potential actions that enable them to have diverse behavior during a conver- sation, e.g. different strategies to recover from non-understanding ( <ref type="bibr">Yu et al., 2016)</ref>. However, the conventional approach of designing a dialog manager <ref type="bibr">(Williams and Young, 2007)</ref> does not scale well to open-domain conversation models because of the vast quantity of possible decisions. Thus, there has been a growing interest in applying encoder-decoder models <ref type="bibr">(Sutskever et al., 2014</ref>) for modeling open-domain conversation <ref type="bibr">(Vinyals and Le, 2015;</ref><ref type="bibr">Serban et al., 2016a</ref>). The basic ap- proach treats a conversation as a transduction task, in which the dialog history is the source sequence and the next response is the target sequence. The model is then trained end-to-end on large conver- sation corpora using the maximum-likelihood esti- mation (MLE) objective without the need for man- ual crafting.</p><p>However recent research has found that encoder-decoder models tend to generate generic and dull responses (e.g., I don't know), rather than meaningful and specific answers ( <ref type="bibr">Li et al., 2015;</ref><ref type="bibr">Serban et al., 2016b</ref>). There have been many attempts to explain and solve this limita- tion, and they can be broadly divided into two cat- egories (see Section 2 for details): (1) the first cat- egory argues that the dialog history is only one of the factors that decide the next response. Other features should be extracted and provided to the models as conditionals in order to generate more specific responses ( <ref type="bibr">Xing et al., 2016;</ref><ref type="bibr">Li et al., 2016a)</ref>; (2) the second category aims to improve the encoder-decoder model itself, including de- coding with beam search and its variations <ref type="bibr">(Wiseman and Rush, 2016)</ref>, encouraging responses that have long-term payoff ( <ref type="bibr">Li et al., 2016b</ref>), etc.</p><p>Building upon the past work in dialog managers and encoder-decoder models, the key idea of this paper is to model dialogs as a one-to-many prob- lem at the discourse level. Previous studies indi- cate that there are many factors in open-domain dialogs that decide the next response, and it is non- trivial to extract all of them. Intuitively, given a similar dialog history (and other observed in- puts), there may exist many valid responses (at the discourse-level), each corresponding to a certain configuration of the latent variables that are not presented in the input. To uncover the potential re- sponses, we strive to model a probabilistic distri- bution over the distributed utterance embeddings of the potential responses using a latent variable <ref type="figure" target="#fig_0">(Figure 1</ref>). This allows us to generate diverse re- sponses by drawing samples from the learned dis- tribution and reconstruct their words via a decoder neural network. Specifically, our contributions are three-fold: 1. We present a novel neural dialog model adapted from conditional variational autoencoders (CVAE) ( <ref type="bibr">Yan et al., 2015;</ref><ref type="bibr">Sohn et al., 2015)</ref>, which introduces a latent variable that can cap- ture discourse-level variations as described above 2. We propose Knowledge-Guided CVAE (kgC- VAE), which enables easy integration of expert knowledge and results in performance improve- ment and model interpretability. 3. We develop a training method in addressing the difficulty of optimizing CVAE for natural language genera- tion ( <ref type="bibr" target="#b4">Bowman et al., 2015)</ref>. We evaluate our models on human-human conversation data and yield promising results in: (a) generating appro- priate and discourse-level diverse responses, and (b) showing that the proposed training method is more effective than the previous techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Our work is related to both recent advancement in encoder-decoder dialog models and generative models based on CVAE.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Encoder-decoder Dialog Models</head><p>Since the emergence of the neural dialog model, the problem of output diversity has received much attention in the research community. Ideal out- put responses should be both coherent and diverse. However, most models end up with generic and dull responses. To tackle this problem, one line of research has focused on augmenting the in- put of encoder-decoder models with richer con- text information, in order to generate more spe- cific responses. <ref type="bibr">Li et al., (2016a)</ref> captured speak- ers' characteristics by encoding background infor- mation and speaking style into the distributed em- beddings, which are used to re-rank the generated response from an encoder-decoder model. <ref type="bibr">Xing et al., (2016)</ref> maintain topic encoding based on La- tent Dirichlet Allocation (LDA) ( <ref type="bibr" target="#b2">Blei et al., 2003)</ref> of the conversation to encourage the model to out- put more topic coherent responses.</p><p>On the other hand, many attempts have also been made to improve the architecture of encoder- decoder models. <ref type="bibr">Li et al,. (2015)</ref> proposed to opti- mize the standard encoder-decoder by maximizing the mutual information between input and output, which in turn reduces generic responses. This ap- proach penalized unconditionally high frequency responses, and favored responses that have high conditional probability given the input. <ref type="bibr">Wiseman and Rush (2016)</ref> focused on improving the de- coder network by alleviating the biases between training and testing. They introduced a search- based loss that directly optimizes the networks for beam search decoding. The resulting model achieves better performance on word ordering, parsing and machine translation. Besides improv- ing beam search, <ref type="bibr">Li et al., (2016b)</ref> pointed out that the MLE objective of an encoder-decoder model is unable to approximate the real-world goal of the conversation. Thus, they initialized a encoder- decoder model with MLE objective and leveraged reinforcement learning to fine tune the model by optimizing three heuristic rewards functions: in- formativity, coherence, and ease of answering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Conditional Variational Autoencoder</head><p>The variational autoencoder (VAE) <ref type="bibr">(Kingma and Welling, 2013;</ref><ref type="bibr">Rezende et al., 2014</ref>) is one of the most popular frameworks for image generation. The basic idea of VAE is to encode the input x into a probability distribution z instead of a point encoding in the autoencoder. Then VAE applies a decoder network to reconstruct the original input using samples from z. To generate images, VAE first obtains a sample of z from the prior distribu- tion, e.g. N (0, I), and then produces an image via the decoder network. A more advanced model, the conditional VAE (CVAE), is a recent modification of VAE to generate diverse images conditioned on certain attributes, e.g. generating different human faces given skin color ( <ref type="bibr">Yan et al., 2015;</ref><ref type="bibr">Sohn et al., 2015)</ref>. Inspired by CVAE, we view the dialog con- texts as the conditional attributes and adapt CVAE to generate diverse responses instead of images.</p><p>Although VAE/CVAE has achieved impressive results in image generation, adapting this to natu- ral language generators is non-trivial. <ref type="bibr" target="#b4">Bowman et al., (2015)</ref> have used VAE with Long-Short Term Memory (LSTM)-based recognition and decoder networks to generate sentences from a latent Gaus- sian variable. They showed that their model is able to generate diverse sentences with even a greedy LSTM decoder. They also reported the difficulty of training because the LSTM decoder tends to ig- nore the latent variable. We refer to this issue as the vanishing latent variable problem. <ref type="bibr">Serban et al., (2016b)</ref> have applied a latent variable hierar- chical encoder-decoder dialog model to introduce utterance-level variations and facilitate longer re- sponses. To improve upon the past models, we firstly introduce a novel mechanism to leverage linguistic knowledge in training end-to-end neural dialog models, and we also propose a novel train- ing technique that mitigates the vanishing latent variable problem. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Proposed Models</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Conditional Variational Autoencoder (CVAE) for Dialog Generation</head><p>Each dyadic conversation can be represented via three random variables: the dialog context c (con- text window size k − 1), the response utterance x (the k th utterance) and a latent variable z, which is used to capture the latent distribution over the valid responses. Further, c is composed of the dia- log history: the preceding k-1 utterances; conver- sational floor (1 if the utterance is from the same speaker of x, otherwise 0) and meta features m (e.g. the topic). We then define the conditional dis- tribution p(x, z|c) = p(x|z, c)p(z|c) and our goal is to use deep neural networks (parametrized by θ) to approximate p(z|c) and p(x|z, c). We refer to p θ (z|c) as the prior network and p θ (x, |z, c) as the response decoder. Then the generative process of x is <ref type="figure" target="#fig_1">(Figure 2</ref> (a)):</p><p>1. Sample a latent variable z from the prior net- work p θ (z|c).</p><p>2. Generate x through the response decoder p θ (x|z, c).</p><p>CVAE is trained to maximize the conditional log likelihood of x given c, which involves an in- tractable marginalization over the latent variable z. As proposed in ( <ref type="bibr">Sohn et al., 2015;</ref><ref type="bibr">Yan et al., 2015)</ref>, CVAE can be efficiently trained with the Stochastic Gradient Variational Bayes (SGVB) framework <ref type="bibr">(Kingma and Welling, 2013</ref>) by maxi- mizing the variational lower bound of the condi- tional log likelihood. We assume the z follows multivariate Gaussian distribution with a diago- nal covariance matrix and introduce a recognition network q φ (z|x, c) to approximate the true poste- rior distribution p(z|x, c). Sohn and et al,. <ref type="formula">(2015)</ref> have shown that the variational lower bound can be written as:</p><formula xml:id="formula_0">L(θ, φ; x, c) = −KL(q φ (z|x, c)p θ (z|c)) + E q φ (z|c,x) [log p θ (x|z, c)] (1)</formula><p>≤ log p(x|c) <ref type="figure" target="#fig_2">Figure 3</ref> demonstrates an overview of our model. The utterance encoder is a bidirectional recurrent neural network (BRNN) <ref type="bibr">(Schuster and Paliwal, 1997</ref>) with a gated recurrent unit (GRU) ( <ref type="bibr">Chung et al., 2014</ref>) to encode each utterance into fixed- size vectors by concatenating the last hidden states of the forward and backward</p><formula xml:id="formula_1">RNN u i = [ h i , h i ].</formula><p>x is simply u k . The context encoder is a 1-layer GRU network that encodes the preceding k-1 ut- terances by taking u 1:k−1 and the corresponding conversation floor as inputs. The last hidden state h c of the context encoder is concatenated with meta features and c = [h c , m]. Since we assume z follows isotropic Gaussian distribution, the recog- nition network q φ (z|x, c) ∼ N (µ, σ 2 I) and the prior network p θ (z|c) ∼ N (µ , σ 2 I), and then we have:</p><formula xml:id="formula_2">µ log(σ 2 ) = W r x c + b r (2) µ log(σ 2 ) = MLP p (c)<label>(3)</label></formula><p>We then use the reparametrization trick ( <ref type="bibr">Kingma and Welling, 2013)</ref> to obtain samples of z either from N (z; µ, σ 2 I) predicted by the recognition network (training) or N (z; µ , σ 2 I) predicted by the prior network (testing). Finally, the response decoder is a 1-layer GRU network with initial state</p><formula xml:id="formula_3">s 0 = W i [z, c]+b i .</formula><p>The response decoder then pre- dicts the words in x sequentially.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Knowledge-Guided CVAE (kgCVAE)</head><p>In practice, training CVAE is a challenging opti- mization problem and often requires large amount of data. On the other hand, past research in spo- ken dialog systems and discourse analysis has sug- gested that many linguistic cues capture crucial features in representing natural conversation. For example, dialog acts ( <ref type="bibr">Poesio and Traum, 1998)</ref> have been widely used in the dialog managers <ref type="bibr">(Litman and Allen, 1987;</ref><ref type="bibr">Raux et al., 2005;</ref><ref type="bibr">Zhao and Eskenazi, 2016)</ref> to represent the propositional function of the system. Therefore, we conjecture that it will be beneficial for the model to learn meaningful latent z if it is provided with explicitly extracted discourse features during the training. In order to incorporate the linguistic features into the basic CVAE model, we first denote the set of linguistic features as y. Then we assume that the generation of x depends on c, z and y. y re- lies on z and c as shown in <ref type="figure" target="#fig_1">Figure 2</ref>. Specifically, during training the initial state of the response de- coder is s 0 = W i [z, c, y] + b i and the input at ev- ery step is [e t , y] where e t is the word embedding of t th word in x. In addition, there is an MLP to predict y = MLP y (z, c) based on z and c. In the testing stage, the predicted y is used by the re- sponse decoder instead of the oracle decoders. We denote the modified model as knowledge-guided CVAE (kgCVAE) and developers can add desired discourse features that they wish the latent vari- able z to capture. KgCVAE model is trained by maximizing:</p><formula xml:id="formula_4">L(θ, φ; x, c, y) = −KL(q φ (z|x, c, y)P θ (z|c)) + E q φ (z|c,x,y) [log p(x|z, c, y)] + E q φ (z|c,x,y) [log p(y|z, c)] (4)</formula><p>Since now the reconstruction of y is a part of the loss function, kgCVAE can more efficiently en- code y-related information into z than discovering it only based on the surface-level x and c. Another advantage of kgCVAE is that it can output a high- level label (e.g. dialog act) along with the word- level responses, which allows easier interpretation of the model's outputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Optimization Challenges</head><p>A straightforward VAE with RNN decoder fails to encode meaningful information in z due to the vanishing latent variable problem <ref type="bibr" target="#b4">(Bowman et al., 2015)</ref>. <ref type="bibr" target="#b4">Bowman et al., (2015)</ref> proposed two solu- tions: (1) KL annealing: gradually increasing the weight of the KL term from 0 to 1 during training; (2) word drop decoding: setting a certain percent- age of the target words to 0. We found that CVAE suffers from the same issue when the decoder is an RNN. Also we did not consider word drop de- coding because Bowman et al,. (2015) have shown that it may hurt the performance when the drop rate is too high.</p><p>As a result, we propose a simple yet novel tech- nique to tackle the vanishing latent variable prob- lem: bag-of-word loss. The idea is to introduce an auxiliary loss that requires the decoder network to predict the bag-of-words in the response x as shown in <ref type="figure" target="#fig_2">Figure 3(b)</ref>. We decompose x into two variables: x o with word order and x bow without order, and assume that x o and x bow are condi- tionally independent given z and c: p(x,</p><note type="other">z|c) = p(x o |z, c)p(x bow |z, c)p(z|c). Due to the condi- tional independence assumption, the latent vari- able is forced to capture global information about the target response. Let f = MLP b (z, x) ∈ R V where V is vocabulary size, and we have:</note><formula xml:id="formula_5">log p(x bow |z, c) = log |x| t=1 e fx t V j e f j (5)</formula><p>where |x| is the length of x and x t is the word index of t th word in x. The modified variational lower bound for CVAE with bag-of-word loss is (see Appendix A for kgCVAE):</p><formula xml:id="formula_6">L (θ, φ; x, c) = L(θ, φ; x, c) + E q φ (z|c,x,y) [log p(x bow |z, c)] (6)</formula><p>We will show that the bag-of-word loss in Equa- tion 6 is very effective against the vanishing latent variable and it is also complementary to the KL annealing technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experiment Setup</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Dataset</head><p>We chose the Switchboard (SW) 1 Release 2 Cor- pus <ref type="bibr">(Godfrey and Holliman, 1997</ref>) to evaluate the proposed models. SW has 2400 two-sided tele- phone conversations with manually transcribed speech and alignment. In the beginning of the call, a computer operator gave the callers recorded prompts that define the desired topic of discus- sion. There are 70 available topics. We ran- domly split the data into 2316/60/62 dialogs for train/validate/test. The pre-processing includes (1) tokenize using the NLTK tokenizer ( <ref type="bibr" target="#b1">Bird et al., 2009)</ref>; (2) remove non-verbal symbols and re- peated words due to false starts; (3) keep the top 10K frequent word types as the vocabulary. The final data have 207, 833/5, 225/5, 481 (c, x) pairs for train/validate/test. Furthermore, a sub- set of SW was manually labeled with dialog acts ( <ref type="bibr">Stolcke et al., 2000</ref>). We extracted dia- log act labels based on the dialog act recognizer proposed in ( <ref type="bibr">Ribeiro et al., 2015</ref>). The features include the uni-gram and bi-gram of the utter- ance, and the contextual features of the last 3 ut- terances. We trained a Support Vector Machine (SVM) <ref type="bibr">(Suykens and Vandewalle, 1999</ref>) with lin- ear kernel on the subset of SW with human anno- tations. There are 42 types of dialog acts and the SVM achieved 77.3% accuracy on held-out data. Then the rest of SW data are labelled with dialog acts using the trained SVM dialog act recognizer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Training</head><p>We trained with the following hyperparameters (according to the loss on the validate dataset): word embedding has size 200 and is shared across everywhere. We initialize the word embed- ding from Glove embedding pre-trained on Twit- ter ( <ref type="bibr">Pennington et al., 2014</ref>). The utterance en- coder has a hidden size of 300 for each direc- tion. The context encoder has a hidden size of 600 and the response decoder has a hidden size of 400. The prior network and the MLP for pre- dicting y both have 1 hidden layer of size 400 and tanh non-linearity. The latent variable z has a size of 200. The context window k is 10. All the initial weights are sampled from a uniform distribution [-0.08, 0.08]. The mini-batch size is 30. The models are trained end-to-end using the Adam optimizer <ref type="bibr">(Kingma and Ba, 2014</ref>) with a learning rate of 0.001 and gradient clipping at 5. We selected the best models based on the varia- tional lower bound on the validate data. Finally, we use the BOW loss along with KL annealing of 10,000 batches to achieve the best performance. Section 5.4 gives a detailed argument for the im- portance of the BOW loss.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experiments Setup</head><p>We compared three neural dialog models: a strong baseline model, CVAE, and kgCVAE. The base- line model is an encoder-decoder neural dialog model without latent variables similar to <ref type="bibr">(Serban et al., 2016a</ref>). The baseline model's encoder uses the same context encoder to encode the dialog his- tory and the meta features as shown in <ref type="figure" target="#fig_2">Figure 3</ref>. The encoded context c is directly fed into the de- coder networks as the initial state. The hyperpa- rameters of the baseline are the same as the ones reported in Section 4.2 and the baseline is trained to minimize the standard cross entropy loss of the decoder RNN model without any auxiliary loss.</p><p>Also, to compare the diversity introduced by the stochasticity in the proposed latent variable ver- sus the softmax of RNN at each decoding step, we generate N responses from the baseline by sam-pling from the softmax. For CVAE/kgCVAE, we sample N times from the latent z and only use greedy decoders so that the randomness comes en- tirely from the latent variable z.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Quantitative Analysis</head><p>Automatically evaluating an open-domain gen- erative dialog model is an open research chal- lenge ( <ref type="bibr">Liu et al., 2016</ref>). Following our one-to- many hypothesis, we propose the following met- rics. We assume that for a given dialog context c, there exist M c reference responses</p><formula xml:id="formula_7">r j , j ∈ [1, M c ].</formula><p>Meanwhile a model can generate N hypothesis re- sponses h i , i ∈ [1, N ]. The generalized response- level precision/recall for a given dialog context is:</p><formula xml:id="formula_8">precision(c) = N i=1 max j∈[1,Mc] d(r j , h i ) N recall(c) = Mc j=1 max i∈[1,N ] d(r j , h i )) M c where d(r j , h i )</formula><p>is a distance function which lies between 0 to 1 and measures the similarities be- tween r j and h i . The final score is averaged over the entire test dataset and we report the perfor- mance with 3 types of distance functions in or- der to evaluate the systems from various linguistic points of view:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Smoothed Sentence-level BLEU (Chen and</head><p>Cherry, 2014): BLEU is a popular metric that measures the geometric mean of modified n- gram precision with a length penalty <ref type="bibr">(Papineni et al., 2002;</ref><ref type="bibr">Li et al., 2015)</ref>. We use BLEU-1 to 4 as our lexical similarity metric and normalize the score to 0 to 1 scale.</p><p>2. Cosine Distance of Bag-of-word Embed- ding: a simple method to obtain sentence embeddings is to take the average or ex- trema of all the word embeddings in the sen- tences ( <ref type="bibr">Forgues et al., 2014;</ref><ref type="bibr" target="#b0">Adi et al., 2016</ref>). The d(r j , h i ) is the cosine distance of the two embedding vectors. We used Glove embed- ding described in Section 4 and denote the av- erage method as A-bow and extrema method as E-bow.</p><p>3. Dialog Act Match: to measure the similar- ity at the discourse level, the same dialog- act tagger from 4.1 is applied to label all the generated responses of each model. We set d(r j , h i ) = 1 if r j and h i have the same dia- log acts, otherwise d(r j , h i ) = 0.</p><p>One challenge of using the above metrics is that there is only one, rather than multiple reference responses/contexts. This impacts reliability of our measures. Inspired by <ref type="bibr">(Sordoni et al., 2015</ref>), we utilized information retrieval techniques (see Ap- pendix A) to gather 10 extra candidate reference responses/context from other conversations with the same topics. Then the 10 candidate references are filtered by two experts, which serve as the ground truth to train the reference response classi- fier. The result is 6.69 extra references in average per context. The average number of distinct refer- ence dialog acts is 4.2.  <ref type="table" target="#tab_0">Table 1</ref>: Performance of each model on automatic measures. The highest score in each row is in bold. Note that our BLEU scores are normalized to <ref type="bibr">[0,</ref><ref type="bibr">1]</ref>.</p><p>The proposed models outperform the baseline in terms of recall in all the metrics with statis- tical significance. This confirms our hypothesis that generating responses with discourse-level di- versity can lead to a more comprehensive cov- erage of the potential responses than promoting only word-level diversity. As for precision, we observed that the baseline has higher or similar scores than CVAE in all metrics, which is expected since the baseline tends to generate the mostly likely and safe responses repeatedly in the N hy- potheses. However, kgCVAE is able to achieve the highest precision and recall in the 4 metrics at the same time (BLEU1-4, E-BOW). One reason for kgCVAE's good performance is that the pre- dicted dialog act label in kgCVAE can regularize the generation process of its RNN decoder by forc- ing it to generate more coherent and precise words. We further analyze the precision/recall of BLEU- 4 by looking at the average score versus the num- ber of distinct reference dialog acts. A low num- ber of distinct dialog acts represents the situation where the dialog context has a strong constraint on the range of the next response (low entropy), while a high number indicates the opposite (high- entropy). <ref type="figure" target="#fig_3">Figure 4</ref> shows that CVAE/kgCVAE achieves significantly higher recall than the base- line in higher entropy contexts. Also it shows that CVAE suffers from lower precision, espe- cially in low entropy contexts. Finally, kgCVAE gets higher precision than both the baseline and CVAE in the full spectrum of context entropy.  <ref type="table">Table 2</ref> shows the outputs generated from the baseline and kgCVAE. In example 1, caller A be- gins with an open-ended question. The kgCVAE model generated highly diverse answers that cover multiple plausible dialog acts. Further, we notice that the generated text exhibits similar dialog acts compared to the ones predicted separately by the model, implying the consistency of natural lan- guage generation based on y. On the contrary, the responses from the baseline model are limited to local n-gram variations and share a similar prefix, i.e. "I'm". Example 2 is a situation where caller A is telling B stories. The ground truth response is a back-channel and the range of valid answers is more constrained than example 1 since B is play- ing the role of a listener. The baseline successfully predicts "uh-huh". The kgCVAE model is also able to generate various ways of back-channeling. This implies that the latent z is able to capture context-sensitive variations, i.e. in low-entropy di- alog contexts modeling lexical diversity while in high-entropy ones modeling discourse-level diver- sity. Moreover, kgCVAE is occasionally able to generate more sophisticated grounding (sample 4) beyond a simple back-channel, which is also an acceptable response given the dialog context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Qualitative Analysis</head><p>In addition, past work ( <ref type="bibr">Kingma and Welling, 2013)</ref> has shown that the recognition network is able to learn to cluster high-dimension data, so we conjecture that posterior z outputted from the recognition network should cluster the responses into meaningful groups. <ref type="figure" target="#fig_4">Figure 5</ref> visualizes the posterior z of responses in the test dataset in 2D space using t-SNE <ref type="bibr">(Maaten and Hinton, 2008)</ref>. We found that the learned latent space is highly correlated with the dialog act and length of re- sponses, which confirms our assumption. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Results for Bag-of-Word Loss</head><p>Finally, we evaluate the effectiveness of bag-of- word (BOW) loss for training VAE/CVAE with the RNN decoder. To compare with past work <ref type="bibr" target="#b4">(Bowman et al., 2015)</ref>, we conducted the same lan- guage modelling (LM) task on Penn Treebank us- ing VAE. The network architecture is same ex- cept we use GRU instead of LSTM. We compared four different training setups: (1) standard VAE without any heuristics; (2) VAE with KL anneal- ing (KLA); (3) VAE with BOW loss; (4) VAE with both BOW loss and KLA. Intuitively, a well trained model should lead to a low reconstruction loss and small but non-trivial KL cost. For all models with KLA, the KL weight increases lin- early from 0 to 1 in the first 5000 batches. <ref type="table" target="#tab_2">Table 3</ref> shows the reconstruction perplexity and the KL cost on the test dataset. The standard VAE fails to learn a meaningful latent variable by hav- <ref type="table">Table 2</ref>: Generated responses from the baselines and kgCVAE in two examples. KgCVAE also provides the predicted dialog act for each response. The context only shows the last utterance due to space limit (the actual context window size is 10).</p><p>ing a KL cost close to 0 and a reconstruction per- plexity similar to a small LSTM LM ( <ref type="bibr">Zaremba et al., 2014)</ref>. KLA helps to improve the recon- struction loss, but it requires early stopping since the models will fall back to the standard VAE after the KL weight becomes 1. At last, the models with BOW loss achieved significantly lower perplexity and larger KL cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Model</head><p>Perplexity   <ref type="figure" target="#fig_5">Figure 6</ref> visualizes the evolution of the KL cost. We can see that for the standard model, the KL cost crashes to 0 at the beginning of training and never recovers. On the contrary, the model with only KLA learns to encode substantial informa- tion in latent z when the KL cost weight is small. However, after the KL weight is increased to 1 (af- ter 5000 batch), the model once again decides to ignore the latent z and falls back to the naive im- plementation. The model with BOW loss, how- ever, consistently converges to a non-trivial KL cost even without KLA, which confirms the im- portance of BOW loss for training latent vari- able models with the RNN decoder. Last but not least, our experiments showed that the conclusions drawn from LM using VAE also apply to training CVAE/kgCVAE, so we used BOW loss together with KLA for all previous experiments. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>In conclusion, we identified the one-to-many na- ture of open-domain conversation and proposed two novel models that show superior performance in generating diverse and appropriate responses at the discourse level. While the current paper ad- dresses diversifying responses in respect to dia- logue acts, this work is part of a larger research direction that targets leveraging both past linguis- tic findings and the learning power of deep neural networks to learn better representation of the la- tent factors in dialog. In turn, the output of this novel neural dialog model will be easier to ex- plain and control by humans. In addition to di- alog acts, we plan to apply our kgCVAE model to capture other different linguistic phenomena in- cluding sentiment, named entities,etc. Last but not least, the recognition network in our model will serve as the foundation for designing a data- driven dialog manager, which automatically dis- covers useful high-level intents. All of the above suggest a promising research direction. <ref type="bibr">Kihyuk Sohn, Honglak Lee, and Xinchen Yan. 2015</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Supplemental Material</head><p>Variational Lower Bound for kgCVAE</p><p>We assume that even with the presence of linguis- tic feature y regarding x, the prediction of x bow still only depends on the z and c. Therefore, we have:</p><p>L(θ, φ; x, c, y) = −KL(q φ (z|x, c, y)P θ (z|c)) + E q φ (z|c,x,y) [log p(x|z, c, y)]</p><p>+ E q φ (z|c,x,y) [log p(y|z, c)]</p><p>+ E q φ (z|c,x,y) [log p(x bow |z, c)]</p><p>Collection of Multiple Reference Responses</p><p>We collected multiple reference responses for each dialog context in the test set by information re- trieval techniques combining with traditional a machine learning method. First, we encode the di- alog history using Term Frequency-Inverse Doc- ument Frequency (TFIDF) <ref type="bibr">(Salton and Buckley, 1988)</ref> weighted bag-of-words into vector repre- sentation h. Then we denote the topic of the con- versation as t and denote f as the conversation floor, i.e. if the speakers of the last utterance in the dialog history and response utterance are the same f = 1 otherwise f = 0. Then we com- puted the similarity d(c i , c j ) between two dialog contexts using:</p><formula xml:id="formula_10">d(c i , c j ) = 1(t i = t j )1(t i = t j ) h i · h j ||h i ||||h j ||<label>(8)</label></formula><p>Unlike past work ( <ref type="bibr">Sordoni et al., 2015)</ref>, this sim- ilarity function only cares about the distance in the context and imposes no constraints on the re- sponse, therefore is suitbale for finding diverse re- sponses regarding to the same dialog context. Sec- ondly, for each dialog context in the test set, we retrieved the 10 nearest neighbors from the train- ing set and treated the responses from the training set as candidate reference responses. Thirdly, we further sampled 240 context-responses pairs from 5481 pairs in the total test set and post-processed the selected candidate responses by two human computational linguistic experts who were told to give a binary label for each candidate response about whether the response is appropriate regard- ing its dialog context. The filtered lists then served as the ground truth to train our reference response classifier. For the next step, we extracted bigrams, part-of-speech bigrams and word part-of-speech pairs from both dialogue contexts and candidate reference responses with rare threshold for feature extraction being set to 20. Then L2-regularized logistic regression with 10-fold cross validation was applied as the machine learning algorithm. Cross validation accuracy on the human-labelled data was 71%. Finally, we automatically anno- tated the rest of test set with this trained classifier and the resulting data were used for model evalu- ation.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Given A's question, there exists many valid responses from B for different assumptions of the latent variables, e.g., B's hobby.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Graphical models of CVAE (a) and kgCVAE (b)</figDesc><graphic url="image-2.png" coords="3,79.09,395.54,204.09,82.27" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The neural network architectures for the baseline and the proposed CVAE/kgCVAE models. denotes the concatenation of the input vectors. The dashed blue connections only appear in kgCVAE.</figDesc><graphic url="image-3.png" coords="4,72.00,62.81,453.49,173.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: BLEU-4 precision/recall vs. the number of distinct reference dialog acts.</figDesc><graphic url="image-4.png" coords="7,75.46,319.21,104.31,65.19" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: t-SNE visualization of the posterior z for test responses with top 8 frequent dialog acts. The size of circle represents the response length.</figDesc><graphic url="image-6.png" coords="7,312.09,264.07,208.63,166.37" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: The value of the KL divergence during training with different setups on Penn Treebank.</figDesc><graphic url="image-7.png" coords="8,314.36,292.76,204.09,109.46" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 shows the results.</head><label>1</label><figDesc></figDesc><table>Metrics 
Baseline CVAE kgCVAE 
perplexity (KL) 35.4 
(n/a) 

20.2 
(11.36) 

16.02 
(13.08) 
BLEU-1 prec 
0.405 
0.372 
0.412 
BLEU-1 recall 0.336 
0.381 
0.411 
BLEU-2 prec 
0.300 
0.295 
0.350 
BLEU-2 recall 0.281 
0.322 
0.356 
BLEU-3 prec 
0.272 
0.265 
0.310 
BLEU-3 recall 0.254 
0.292 
0.318 
BLEU-4 prec 
0.226 
0.223 
0.262 
BLEU-4 recall 0.215 
0.248 
0.272 
A-bow prec 
0.387 
0.389 
0.373 
A-bow recall 
0.337 
0.361 
0.336 
E-bow prec 
0.701 
0.705 
0.711 
E-bow recall 
0.684 
0.709 
0.712 
DA prec 
0.736 
0.704 
0.721 
DA recall 
0.514 
0.604 
0.598 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 3 :</head><label>3</label><figDesc></figDesc><table>The reconstruction perplexity and KL 
terms on Penn Treebank test set. 

</table></figure>
		</body>
		<back>
			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Fine-grained analysis of sentence embeddings using auxiliary prediction tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yossi</forename><surname>Adi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Einat</forename><surname>Kermany</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yonatan</forename><surname>Belinkov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ofer</forename><surname>Lavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoav</forename><surname>Goldberg</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1608.04207</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Natural language processing with Python</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ewan</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><surname>Loper</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<pubPlace>O&apos;Reilly Media</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Latent dirichlet allocation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Blei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael I Jordan</forename><surname>Ng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of machine Learning research</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="993" to="1022" />
			<date type="published" when="2003-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Ravenclaw: Dialog management using hierarchical task decomposition and an expectation agenda</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Bohus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander I</forename><surname>Rudnicky</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Generating sentences from a continuous space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luke</forename><surname>Samuel R Bowman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Vilnis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rafal</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samy</forename><surname>Jozefowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bengio</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.06349</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
