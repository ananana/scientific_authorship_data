<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T13:03+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Learning To Use Formulas To Solve Simple Arithmetic Problems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>August 7-12, 2016</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arindam</forename><surname>Mitra</surname></persName>
							<email>amitra7@asu.edu</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Arizona State University</orgName>
								<orgName type="institution" key="instit2">Arizona State University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chitta</forename><surname>Baral</surname></persName>
							<email>chitta@asu.edu</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Arizona State University</orgName>
								<orgName type="institution" key="instit2">Arizona State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Learning To Use Formulas To Solve Simple Arithmetic Problems</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics</title>
						<meeting>the 54th Annual Meeting of the Association for Computational Linguistics <address><addrLine>Berlin, Germany</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="2144" to="2153"/>
							<date type="published">August 7-12, 2016</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Solving simple arithmetic word problems is one of the challenges in Natural Language Understanding. This paper presents a novel method to learn to use formulas to solve simple arithmetic word problems. Our system, analyzes each of the sentences to identify the variables and their attributes; and automatically maps this information into a higher level representation. It then uses that representation to recognize the presence of a formula along with its associated variables. An equation is then generated from the formal description of the formula. In the training phase, it learns to score the &lt;formula, variables&gt; pair from the systematically generated higher level representation. It is able to solve 86.07% of the problems in a corpus of standard primary school test questions and beats the state-of-the-art by a margin of 8.07%.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Developing algorithms to solve math word prob- lems <ref type="table">(Table 1)</ref> has been an interest of NLP re- searchers for a long time <ref type="bibr" target="#b8">(Feigenbaum and Feldman, 1963)</ref>. It is an interesting topic of study from the point of view of natural language understand- ing and reasoning for several reasons. First, it in- corporates rigorous standards of accurate compre- hension. Second, we know of a good representa- tion to solve the word problems, namely algebraic equations. Finally, the evaluation is straightfor- ward and the problems can be collected easily.</p><p>In the recent years several challenges have been proposed for natural language understanding. This includes the Winograd Schema challenge for commonsense reasoning <ref type="bibr" target="#b15">(Levesque, 2011</ref>), Story Comprehension Challenge ( <ref type="bibr" target="#b20">Richardson et al., 2013)</ref>, Facebook bAbl task ( <ref type="bibr" target="#b24">Weston et al., 2015)</ref>, Semantic Textual Similarity ( <ref type="bibr" target="#b0">Agirre et al., 2012</ref>) and Textual Entailment ( <ref type="bibr" target="#b3">Bowman et al., 2015;</ref><ref type="bibr" target="#b6">Dagan et al., 2010)</ref>. The study of word math problems is also an important problem as quantita- tive reasoning is inextricably related to human life. <ref type="bibr">Clark &amp; Etzioni (Clark, 2015;</ref><ref type="bibr" target="#b4">Clark and Etzioni, 2016</ref>) discuss various properties of math word (and science) problems emphasizing elementary school science and math tests as a driver for AI.</p><p>Researchers at Allen AI Institute have published two standard datasets as part of the Project Euclid 1 for future endeavors in this regard. One of them contains simple addition-subtraction arithmetic problems ( <ref type="bibr" target="#b11">Hosseini et al., 2014</ref>) and the other contains general arithmetic problems <ref type="bibr">(KoncelKedziorski et al., 2015)</ref>. In this research, we focus on the former one, namely the AddSub dataset.</p><p>Dan grew 42 turnips and 38 cantelopes . Jes- sica grew 47 turnips . How many turnips did they grow in total ? Formula Associated variables part-whole whole: x, parts: {42, 47} Equation x = 42 + 47 <ref type="table">Table 1</ref>: Solving a word problem using part-whole</p><p>Broadly speaking, common to the existing ap- proaches ( <ref type="bibr" target="#b11">Hosseini et al., 2014;</ref><ref type="bibr" target="#b25">Zhou et al., 2015;</ref><ref type="bibr" target="#b22">Shi et al., 2015;</ref><ref type="bibr" target="#b21">Roy and Roth, 2015</ref>) is the task of grounding, that takes as input a word problem in the natural language and represents it in a formal language, such as, a sys- tem of equations, expression trees or states <ref type="bibr" target="#b11">(Hosseini et al., 2014</ref>), from which the answer can be easily computed. In this work, we divide this task of grounding into two parts as follows:</p><p>In the first step, the system learns to connect the assertions in a word problem to abstract mathe- matical concepts or formulas. In the second step, it maps that formula into an algebraic equation. Examples of such formulas in the arithmetic do- main includes part whole which says, 'the whole is equal to the sum of its parts', or the Unitary Method that is used to solve problems like 'A man walks seven miles in two hours. What is his aver- age speed?'.</p><p>Consider the problem in <ref type="table">Table 1</ref>. If the system can determine it is a 'part whole' problem where the unknown quantity X plays the role of whole and its parts are 42 and 47, it can easily express the relation as X = 42 + 47. The translation of a formula to an equation requires only the knowl- edge of the formula and can be formally encoded. Thus, we are interested in the question, 'how can an agent learn to apply the formulas for the word problems?' Solving a word problem in general, requires several such applications in series or par- allel, generating multiple equations. However, in this research, we restrict the problems to be of a single equation which requires only one applica- tion.</p><p>Our system currently considers three mathemat- ical concepts: 1) the concept of part whole, 2) the concept of change and 3) the concept of compar- ison. These concepts are sufficient to solve the arithmetic word problems in AddSub. <ref type="table">Table 2</ref> il- lustrates each of these three concepts with exam- ples. The part whole problems deal with the part whole relationships and ask for either the part or the whole. The change problems make use of the relationship between the new value of a quantity and its original value after the occurrence of a se- ries of increase or decrease. The question then asks for either the initial value of the quantity or the final value of the quantity or the change. In case of comparison problems, the equation can be visualized as a comparison between two quanti- ties and the question typically looks for either the larger quantity or the smaller quantity or the dif- ference. While the equations are simple, the prob- lems describe a wide variety of scenarios and the system needs to make sense of multiple sentences without a priori restrictions on the syntax or the vocabulary to solve the problem.</p><p>Training has been done in a supervised fash- ion. For each example problem, we specify the formula that should be applied to generate the ap-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Change</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RESULT UNKNOWN Mary had 18 baseball cards , and 8 were torn . Fred gave Mary 26 new baseball cards . Mary bought 40 baseball cards . How many baseball cards does Mary have now ? CHANGE UNKNOWN</head><p>There were 28 bales of hay in the barn . Tim stacked bales in the barn today . There are now 54 bales of hay in the barn . How many bales did he store in the barn ? START UNKNOWN Sam 's dog had puppies and 8 had spots . He gave 2 to his friends . He now has 6 puppies . How many puppies did he have to start with? Part Whole TOTAL SET UNKNOWN Tom went to 4 hockey games this year , but missed 7 . He went to 9 games last year . How many hockey games did Tom go to in all ? PART UNKNOWN Sara 's high school played 12 basketball games this year . The team won most of their games . They were defeated during 4 games . How many games did they win ? Comparision DIFFERENCE UNKNOWN Last year , egg producers in Douglas County produced 1416 eggs . This year , those same farms produced 4636 eggs . How many more eggs did the farms produce this year ? LARGE QUANTITY UNKNOWN Bill has 9 marbles. Jim has 7 more marbles than Bill. How many marbles does Jim have? SMALL QUANTITY UNKNOWN Bill has 9 marbles. He has 7 more marbles than Jim. How many marbles does Jim have? <ref type="table">Table 2</ref>: Examples of Add-Sub Word Problems propriate equation and the relevant variables. The system then learns to apply the formulas for new problems. It achieves an accuracy of 86.07% on the AddSub corpus containing 395 word arithmetic problems with a margin of 8.07% with the current state-of-the-art ( <ref type="bibr" target="#b21">Roy and Roth, 2015)</ref>.</p><p>Our contributions are three-fold: (a) We model the application of a formula and present a novel method to learn to apply a formula; (b) We anno- tate the publicly available AddSub corpus with the correct formula and its associated variables; and (c) We make the code publicly available. <ref type="bibr">2</ref> The rest of the paper is organized as follows. In section 2, we formally define the problem and de- scribe our learning algorithm. In section 3, we de- fine our feature function. In section 4, we discuss related works. Section 5 provides a detailed de- scription of the experimental evaluation. Finally, we conclude the paper in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Formulation</head><p>A single equation word arithmetic problem P is a sequence of k words w 1 , ..., w k and contains a set of variables V P = {v 0 , v 1 , ..., v n−1 , x} where v 0 , v 1 , ..., v n−1 are numbers in P and x is the unknown whose value is the answer we seek ( <ref type="bibr" target="#b13">Koncel-Kedziorski et al., 2015)</ref>. Let P addsub be the set of all such problems, where each prob- lem P ∈ P addsub can be solved by a evaluating a valid mathematical equation E formed by com- bining the elements of V P and the binary operators from O = {+, −}.</p><p>We assume that each target equation E of P ∈ P addsub is generated by applying one of the possible mathematical formulas from C = {C partwhole , C change , C comparision }. Let P 1 addsub ⊆ P addsub be the set of all problems where the target equation E can be generated by a single application of one of the possible formulas from C. The goal is then to find the correct appli- cation of a formula for the problem P ∈ P 1 addsub .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Modelling Formulas And their Applications</head><p>We model each formula as a template that has pre- defined slots and can be mapped to an equation when the slots are filled with variables. Applica- tion of a formula C ∈ C to the problem P , is then defined as the instantiation of the template by a subset of V P that contains the unknown.</p><p>Part Whole The concept of part whole has two slots, one for the whole that accepts a single variable and the other for its parts that accepts a set of variables of size at least two. If the value of the whole is w and the value of the parts are p 1 , p 2 , ..., p m , then that application is mapped to the equation, w = p 1 + p 2 + ... + p m , denoting that whole is equal to the sum of its parts.</p><p>Change The change concept has four slots, namely start, end, gains, losses which respectively denote the original value of a variable, the final value of that variable, and the set of increments and decrements that happen to the original value of the variable. The start slot can be empty; in that case it is assumed to be 0. For example, con- sider the problem, 'Joan found 70 seashells on the beach . she gave Sam some of her seashells. She has 27 seashell . How many seashells did she give to Sam?'. In this case, our assumption is that be- fore finding the 70 seashells Joan had an empty hand. Given an instantiation of change concept the equation is generated as follows:</p><formula xml:id="formula_0">val start + g∈gains val g = l∈losses val l + val end Comparision</formula><p>The comparision concept has three slots namely the large quantity, the small quantity and their difference. An instantiation of the comparision concept is mapped to the follow- ing equation: large = small + dif f erence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The Space of Possible Applications</head><p>Consider the problem in <ref type="table">Table 1</ref>. Even though the correct application is an instance of part whole formula with whole = x and the parts being {42, 47}, there are many other possible applica- tions, such as, partWhole(whole=47, parts=x,42), change(start=47, losses={x}, gains={}, end = 42), comparison(large=47, small=x, differ- ence=42).</p><p>Note that, comparison(large=47, small=38, difference=42) is not a valid applica- tion since none of the associated variables is an unknown. Let A P be the set of all possible appli- cations to the problem P . The following lemma characterizes the size of A P as a function of the number of variables in P . Lemma 2.2.1. Let P ∈ P 1 addsub be an arithmetic word problem with n variables (|V P | = n), then the following are true:</p><p>1. The number of possible applications of part whole formula to the problem P , N partwhole is (n + 1)2 n−2 + 1.</p><p>4. The number of all possible applications to the problem P is N partwhole + N change + N comparison .</p><p>Proof of lemma 2.2.1 is provided in the Ap- pendix. The total number of applications for prob- lems having 3, 6, 7, 8 number of variables are 47, 3, 105, 11, 755, 43, 699 respectively. Addition- Subtraction arithmetic problems hardly contain more than 6 variables. So, the number of possi- ble applications is not intractable in practice.</p><p>The total number of applications increases rapidly mainly due to the change concept. Since, the template involves two sets, there is a 3 n−3 fac- tor present in the formula of N change . However, any application of change concept with gains and losses slots containing a collection of variables can be broken down into multiple instances of change concept where the gains and losses slots accepts only a single variable by introducing more inter- mediate unknown variables. Since, for any for- mula that does not have a slot that accepts a set, the number of applications is polynomial in the number of variables, there is a possibility to re- duce the application space. We plan to explore this possibility in our future work. For the part whole concept, even though there is a exponen- tial term involved, it is practically tractable (for n = 10, N partwhole = 2, 817 ). In practice, we believe that there will hardly be any part whole application involving more than 10 variables. For formulas that are used for other categories of word math problems (algebraic or arithmetic), such as the unitary method, formulas for ratio, percentage, time-distance and rate of interest, none of them have any slot that accepts sets of variables. Thus, further increase in the space of possible applica- tions will be polynomial.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Probabilistic Model</head><p>For each problem P there are different possible applications y ∈ A P , however not all of them are meaningful. To capture the semantics of the word problem to discriminate between competing appli- cations we use the log-linear model, which has a feature function φ and parameter vector θ ∈ R d . The feature function φ : H → R d takes as in- put a problem P and a possible application y and maps it to a d-dimensional real vector (feature vector) that aims to capture the important infor- mation required to discriminate between compet- ing applications. Here, the set H is defined as {(P, y) : P ∈ P 1 addsub ∧ y ∈ A P }, to accommo- date the dependency of the possible applications on the problem instance. Given the definition of the feature function φ and the parameter vector θ, the probability of an application y given a problem P is defined as,</p><formula xml:id="formula_1">p(y|P ; θ) = e θ.φ(P,y) y ∈A P e θ.φ(P,y )</formula><p>Here, . denotes dot product. Section 3 defines the feature function. Assuming that the parame- ter θ is known, the function f that computes the correct application is defined as,</p><formula xml:id="formula_2">f (P ) = arg max y∈A P p(y|P ; θ)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Parameter Estimation</head><p>To learn the function f , we need to estimate the parameter vector θ. For that, we assume access to n training examples, {P i , y * i : i = 1 . . . n}, each containing a word problem P i and the correct ap- plication y * i for the problem P i . We estimate θ by minimizing the negative of the conditional log- likelihood of the data:</p><formula xml:id="formula_3">O(θ) = − n i=1 log p(y * i |P i ; θ) = − n i=1 [θ.φ(P i , y * i ) − log y∈A P i e θ.φ(P i ,y) ]</formula><p>We use stochastic gradient descent to optimize the parameters. The gradient of the objective func- tion is given by:</p><formula xml:id="formula_4">O θ = − n i=1 [φ(P i , y * i ) − y∈A P i p(y|P i ; θ) × φ(P i , y)]<label>(1)</label></formula><p>Note that, even though the space of possible ap- plications vary with the problem P i , the gradient for the example containing the problem P i can be easily computed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Feature Function φ</head><p>A formula captures the relationship between vari- ables in a compact way which is sufficient to gen- erate an appropriate equation. In a word prob- lem, those relations are hidden in the assertions of the story. The goal of the feature function is thus to gather enough information from the story so that underlying mathematical relation between the variables can be discovered. The feature func- tion thus needs to be aware of the mathemati- cal relations so that it knows what information it needs to find. It should also be "familiar" with the word problem language so that it can extract the information from the text. In this research, the feature function has access to machine read- able dictionaries such as WordNet <ref type="bibr" target="#b18">(Miller, 1995)</ref>, ConceptNet ( <ref type="bibr" target="#b16">Liu and Singh, 2004</ref>) which captures inter word relationships such as hypernymy, syn- onymy, antonymy etc, and syntactic and depen- dency parsers that help to extract the subject, verb, object, preposition and temporal information from the sentences in the text. Given these resources, the feature function first computes a list of at- tributes for each variable. Then, for each applica- tion y it uses that information, to compute if some aspects of the expected relationship described in y is satisfied by the variables in y.</p><p>Let the first b dimensions of the feature vector contain part whole related features, the next c di- mensions are for change related features and the remaining d features are for comparison concept. Then the feature vector for a problem P and an application of a formula y is computed in the fol- lowing way: The rest of the section is organized as follows. We first describe the attributes of the variables that are computed from the text. Then, we define a list of boolean variables which computes semantic re- lations between the attributes of each pair of vari- ables. Finally, we present the complete definition of the feature function using the description of the attributes and the boolean variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Attributes of Variables</head><p>For each occurrence of a number in the text a vari- able is created with the attribute value referring to that numeric value. An unknown variable is created corresponding to the question. A special attribute type denotes the kind of object the vari- able refers to. <ref type="table" target="#tab_0">Table 3</ref>   <ref type="bibr" target="#b7">(De Marneffe and Manning, 2008)</ref>, such as nsubj, tmod, prep in, that spans from either the words in associated verb or words in the type. These at- tributes were computed using Stanford Core NLP ( <ref type="bibr" target="#b17">Manning et al., 2014</ref>). For the sentence, "John found 70 seashells on the beach." the attributes of the variable are the following: { value : {70}, verb : {found} , nsubj : {John}, prep on : {beach }}.</p><note type="other">shows several examples of the type attribute. It plays an important role in identifying irrelevant numbers while answering the question. Text Type John had 70 seashells seashells 70 seashells and 8 were broken seashells 61 male and 78 female salmon male, salmon 35 pears and 27 apples pear</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Cross Attribute Relations</head><p>Once the variables are created and their attributes are extracted, our system computes a set of boolean variables, each denoting whether the at- tribute a 1 of the variable v 1 has the same value as the attribute a 2 of the variable v 2 . The value of each attribute is a set of words, consequently set equality is used to calculate attribute equality. Two words are considered equal if their lemma matches.</p><p>Four more boolean variables are computed for each pair of variables based on the attribute type and they are defined as follows:</p><p>subType: Variable v 1 is a subT ype of vari- able v 2 if v 2 .type ⊂ v 1 .type or their type consists of a single word and there exists the IsA relation between them in ConceptNet ( <ref type="bibr" target="#b23">Speer and Havasi, 2013;</ref><ref type="bibr" target="#b16">Liu and Singh, 2004</ref>). disjointType is true if v 1 .type v 2 .type = φ intersectingType is true if v 1 is neither a subT ype of v 2 nor is disjointT ype nor equal.</p><p>We further compute some more variables by uti- lizing several relations that exist between words:</p><p>antonym: For every pair of variables v 1 and v 2 , we compute an antonym variable that is true if there exists a pair of word in (v 1 .verb v1.adj)× (v 2 .verb v2.adj) that are antonym to each other in WordNet irrespective of their part of speech tag.</p><p>relatedVerbs: The verbs of two variables are related if there exists a RelatedTo relations in Con- ceptNet between them. subjConsume: The nsubj of v 1 consumes the nsubj of v 2 if the formers refers to a group and the latter is a part of that group. For example, in the problem, 'Joan grew 29 carrots and 14 watermel- ons . Jessica grew 11 carrots . How many carrots did they grow in all ?', the nsubj of the unknown variable consumes others. This is computed using Stanford co-reference resolution. For the situation where there is a variable with nsubj as 'they' and it does not refer to any entity, the subjConsume variable is assumed to be implicitly true for any variable having a nsubj of type person.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Features: Part Whole</head><p>The part whole features look for some combina- tions of the boolean variables and the presence of some cue words (e.g. 'all') in the attribute list. These features capture the underlying reason- ings that can affect the decision of applying a part whole concept. We describe the conditions which when satisfied activate the features. If active, the value of a feature is the number of variables asso- ciated with the application y and 0 otherwise. This is also true for change and comparision features also. Part whole features are computed only when the y is an instance of the formula part whole. The same applies for change and comparision features.</p><p>Generic Word Cue This feature is activated if y.whole has a word in its attributes that belongs to the "total words set" containing the followings words "all", "total", "overall", "altogether", "to- gether" and "combine"; and none of the variables in parts are marked with these words.</p><p>ISA Type Cue is active if all the part variables are subType of the whole.</p><p>Type-Verb Cue is active if the type and verb attributes of v whole matches that of all the variables in the part slot of y.</p><p>Type-Individual Group Cue is active if the variable v whole subjConsume each part variable v p in y and their type matches.</p><p>Type-Verb-Tmod Cue is active if the vari- able in the slot whole is the unknown and for each part variable v p their verb, type and tmod (time modifier of the verb) attributes match.</p><p>Type-SubType-Verb Cue is active if the vari- able in the slot whole is either the unknown or marked with a word in "total words set" and for all parts v p , their verb matches and one of the type or subType boolean variable is true.</p><p>Type-SubType-Related Verb Cue is similar to Type-SubType-Verb Cue however relaxes the verb match conditions to related verb match. This is helpful in problems like 'Mary went to the mall. She spent $ 13.04 on a shirt and $ 12.27 on a jacket . She went to 2 shops . In total , how much money did Mary spend on clothing ? '.</p><p>Type-Loose Verb Cue ConceptNet does not contain all relations between verbs. For example, according to ConceptNet 'buy' and 'spend' are re- lated however there is no relation in ConceptNet between 'purchase' and 'spend'. To handle these situations, we use this feature which is similar to the previous one. The difference is that it assumes that the verbs of part-whole variable pairs are re- lated if all verbs associated with the parts are same, even though there is no relation in ConceptNet.</p><p>Type-Verb-Prep Cue is active if type and verb matches. The whole does not have a "prepo- sition" but parts have and they are different.</p><p>Other Cues There are also features that add nsubj match criteria to the above ones. The prior feature for part whole is that the whole if not un- known, is smaller than the sum of the parts. There is one more feature that is active if the two part variables are antonym to each other; one of type or subType should be true.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Features: Change</head><p>The change features are computed from a set of 10 simple indicator variables, which are computed in the following way:</p><p>Start Cue is active if the verb associated with the variable in start slot has one of the following possessive verbs : {'call for', 'be', 'contain', 're- main', 'want', 'has', 'have', 'hold', ...}; the type and nsubj of start variable match with the end vari- able and the tense of the end does not precede the start. The list of 'possessive verbs' is automati- cally constructed by adding all the verbs associ- ated with the start and the end slot variables in annotated corpus.</p><p>Start Explicit Cue is active if one of follow- ing words, "started with", "initially", "begining", "originally" appear in the context of the start vari- able and the type of start and end variables match.</p><p>Start prior is active if the verb associated with the variable in start slot is a member of the set 'possessive verbs' and the variable appears in first sentence.</p><p>Start Default Cue is active if the start vari- able has a "possessive verb" with past tense.</p><p>End Cue is active if the verb associated with the variable in slot end has a possessive verb with the tense of the verb not preceding the tense of the start, in case the start is not missing. The type and nsubj should match with either the start or the gains in case the start is missing.</p><p>End Prior is true if v end has a possessive verb and an unknown quantity and at least one of v end or v start does not have a nsubj attribute.</p><p>Gain Cue is active if for all variables in the gains slot, the type matches with either v end or v start and one of the following is true: 1) the nsubj of the variable matches with v end or v start and the verb implies gain (such as 'find') and 2) the nsubj of the variable does not match with v end or v start and the verb implies losing (e.g. spend). The set of gain and loss verbs are collected from the anno- tated corpus by following the above procedure.</p><p>Gain Prior is true if the problem contains only three variables, with v start &lt; v end and the only variable in the gain slot, associated with non- possessive verb is the unknown.</p><p>Loss Cue &amp; Loss prior are designed in a fashion similar to the Gain cue and Gain Prior.</p><p>Let us say bad gains denotes that none of the gain prior or gain cue is active even though the gain slot is not empty. bad losses is defined similarly and let bad = bad gains ∨ bad losses . Then the change fea- tures are computed from these boolean indicators using logical operators and, or, not. Table4 shows some of the change features. <ref type="table">Table 4</ref>: Activation criteria of some change related features.</p><formula xml:id="formula_5">!bad ∧ gain cue ∧ start def ault ∧ end cue !bad∧!gain cue ∧loss cue ∧start def ault ∧end cue !bad ∧ (gain cue ∨ loss cue ) ∧ start cue ∧!start def ault ∧ end cue !bad ∧ (gain cue ∨ loss cue ) ∧ start explicit ∧!start def ault ∧ end cue !bad ∧ (gain cue ∨ loss cue ) ∧ start prior ∧ (end cue ||end prior ) !bad ∧ (gain cue ∨ loss cue ) ∧ (start prior ∨ start cue )∧!start def ault ∧ end prior</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Features: Comparison</head><p>The features for the "compare" concept are rela- tively straight forward.</p><p>Difference Unknown Que If the application y states that the unknown quantity is the differ- ence between the larger and smaller quantity, it is natural to see if the variable in the difference slot is marked with a comparative adjective or compara- tive adverb. The prior is that the value of the larger quantity must be bigger than the small one. An- other two features add the type and subject match- ing criteria along with the previous ones.</p><p>Large &amp; Small Unknown Que These fea- tures can be active only when the variable in the large or small slot is unknown. To detect if the ref- erent is bigger or smaller, it is important to know the meaning of the comparative words such as 'less' and 'longer'. Since, the corpus contains only 33 comparison problems we collect these compar- ative words from web which are then divided into two categories. With these categories, the features are designed in a fashion similar to change fea- tures that looks for type, subject matches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Handling Arbitrary Number of Variables</head><p>This approach can handle arbitrary number of variables. To see that consider the problem, 'Sally found 9 seashells , Tom found 7 seashells , and Jessica found 5 seashells on the beach . How many seashells did they find together ?'. Let us say that feature vector contains only the 'Type- Individual Group Cue' feature and the weight of that feature is 1. Consider the two follow- ing applications: y 1 = partWhole(x,{9,7}) and y 2 = partWhole(x,{9,7, 5}). For both y 1 and y 2 the 'Type-Individual Group Cue' feature is active since the subject of the unknown x refers to a group that contains the subject of all part variables in y 1 and y 2 and their types match. However, as mentioned in section 3.3, when active, the value of a feature is the number of variables associated with the application. Thus p(y 2 ;P,θ) p(y 1 ;P,θ) = e 4 e 3 = e. Thus, y 2 is more probable than y 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Related Works</head><p>Researchers in early years have studied math word problems in a constrained domain by either lim- iting the input sentences to a fixed set of pat- terns <ref type="bibr" target="#b2">(Bobrow, 1964b;</ref><ref type="bibr" target="#b1">Bobrow, 1964a;</ref><ref type="bibr" target="#b10">Hinsley et al., 1977)</ref> or by directly operating on a proposi- tional representation instead of a natural language text ( <ref type="bibr" target="#b12">Kintsch and Greeno, 1985;</ref><ref type="bibr" target="#b9">Fletcher, 1985)</ref>. <ref type="bibr" target="#b19">Mukherjee and Garain (2008)</ref> survey these works.</p><p>Among the recent algorithms, the most general ones are the work in ( <ref type="bibr" target="#b25">Zhou et al., 2015)</ref> . Both algorithms try to map a word math problem to a 'system template' that contains a set of 'equation templates' such as ax + by = c. These 'system templates' are collected from the training data. They implicitly assume that these templates will reoccur in the new examples which is a major drawback of these algorithms. Also, <ref type="bibr" target="#b13">Koncel-Kedziorski et al. (2015)</ref> show that the work of  heavily re- lies on the overlap between train and test data and when this overlap is reduced the system performs poorly.</p><p>Work of ( <ref type="bibr" target="#b13">Koncel-Kedziorski et al., 2015;</ref><ref type="bibr" target="#b21">Roy and Roth, 2015)</ref> on the other hand try to map the math word problem to an expression tree. Even though, these algorithms can handle all the four arithmetic operators they cannot solve problems that require more than one equation. Moreover, experiments show that our system is much more robust to diversity in the problem types between training and test data for the problems it handles.</p><p>The system ARIS in ( <ref type="bibr" target="#b11">Hosseini et al., 2014</ref>) solves the addition-subtraction problems by cat- egorizing the verbs into seven categories such as 'positive transfer', 'loss' etc. It represents the in- formation in a problem as a state and then updates the state according to the category of a verb as the story progresses. Both ARIS and our system share the property that they give some explanation be- hind the equation they create. However, the verb categorization approach of ARIS can only solve a subset of addition-subtraction problems (see error analysis in <ref type="bibr" target="#b11">(Hosseini et al., 2014)</ref>); whereas the us- age of formulas to model the word problem world, gives our system the ability to accommodate other math word problems as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experimental Evaluation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Dataset</head><p>The AddSub dataset consist of a total of 395 addition-subtraction arithmetic problems for third, fourth, and fifth graders. The dataset is divided into three diverse set MA1, MA2, IXL containing 134, 140 and 121 problems respectively. As men- tioned in <ref type="bibr" target="#b11">(Hosseini et al., 2014</ref>), the problems in MA2 have more irrelevant information compared to the other two datasets, and IXL includes more information gaps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Result</head><p>Hosseini et al. (2014) evaluate their system using 3-fold cross validation. We follow that same pro- cedure. <ref type="table" target="#tab_2">Table 5</ref> shows the accuracy of our sys- tem on each dataset (when trained on the other two datasets). <ref type="table">Table 6</ref> shows the distribution of the part whole, change, comparison problems and the accuracy on recognizing the correct formula.  As we can see in <ref type="table">Table 6</ref> only IXL contains problems of type 'comparison'. So, to study the accuracy in detecting the compare formula we uniformly distribute the 33 examples over the 3 datasets. Doing that results in only two errors in the recognition of a compare formula and also in- creases the overall accuracy of solving arithmetic problems to 90.38%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MA1 IXL MA2 Avg</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Error Analysis</head><p>An equation that can be generated from a change or comparision formula can also be generated by a part whole formula. Four such errors happened for the change problems and out of the 33 com- pare problems, 18 were solved by part whole. Also, there are 3 problems that require two appli- cations. One example of such problem is, "There are 48 erasers in the drawer and 30 erasers on the desk. Alyssa placed 39 erasers and 45 rulers on the desk. How many erasers are now there in to- tal ?". To solve this we need to first combine the two numbers 48 and 30 to find the total number of erasers she initially had. This requires the knowl- edge of 'part-whole'. Now, that sum of 48 and 30, 39 and x can be connected together using the 'change' formula. With respect to 'solving' arith- metic problems, we find the following categories as the major source of errors:</p><p>Problem Representation: Solving problems in this category requires involved representation. Consider the problem, 'Sally paid $ 12.32 total for peaches , after a '3 dollar' coupon , and $ 11.54 for cherries . In total , how much money did Sally spend?'. Since the associated verb for the variable 3 dollar is 'pay', our system incorrectly thinks that Sally did spend it.</p><p>Information Gap: Often, information that is critical to solve a problem is not present in the text. E.g. Last year , 90171 people were born in a coun- try , and 16320 people immigrated to it . How many new people began living in the country last year ?. To correctly solve this problem, it is impor- tant to know that both the event 'born' and 'immi- gration' imply the 'began living' event, however that information is missing in the text. Another example is the problem, "Keith spent $6.51 on a rabbit toy , $5.79 on pet food , and a cage cost him $12.51 . He found a dollar bill on the ground. What was the total cost of Keith 's purchases? ". It is important to know here that if a cage cost Keith $12.51 then Keith has spent $12.51 for cage.</p><p>Modals: Consider the question 'Jason went to 11 football games this month . He went to 17 games last month , and plans to go to 16 games next month . How many games will he attend in all?' To solve this question one needs to under- stand the meanings of the verb "plan" and "will". If we replace "will" in the question by "did" the answer will be different. Currently our algorithm <ref type="table" target="#tab_0">Type  MA1 IXL MA2   part whole  Total  59  89  51  correct 59  81  40   change  Total  74  18  68  correct 70  15  56   compare  Total  0  33  0  correct 0  0  0   Table 6</ref>: Accuracy on recognizing the correct ap- plication. None of the MA1 and MA2 dataset con- tains "compare" problems so the cross validation accuracy on "IXL" for "compare" problems is 0.</p><p>cannot solve this problem and we need to either use a better representation or a more powerful learning algorithm to be able to answer correctly. Another interesting example of this kind is the following: "For his car , Mike spent $118.54 on speakers and $106.33 on new tires . Mike wanted 3 CD 's for $4.58 but decided not to . In total , how much did Mike spend on car parts?"</p><p>Incomplete IsA Knowledge: For the prob- lem "Tom bought a skateboard for $ 9.46 , and spent $ 9.56 on marbles . Tom also spent $ 14.50 on shorts . In total , how much did Tom spend on toys ? ", it is important to know that 'skate- board' and 'marbles' are toys but 'shorts' are not. However, such knowledge is not always present in ConceptNet which results in error.</p><p>Parser Issue: Error in dependency parsing is another source of error. Since the attribute values are computed from the dependency parse tree, a wrong assignment (mostly for verbs) often makes the entity irrelevant to the computation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>Solving math word problems often requires ex- plicit modeling of the word. In this research, we use well-known math formulas to model the word problem and develop an algorithm that learns to map the assertions in the story to the correct for- mula. Our future plan is to apply this model to general arithmetic problems which require multi- ple applications of formulas.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Data: A word problem P , an application y Result: d-dimensional feature vector, f v Initialize f v := 0 if y is instance of part whole then compute f v[1 : b] end if y is instance of change then compute f v[b + 1 : b + c] end if y is instance of comparision then compute f v[b + c + 1 : b + c + d] end Algorithm 1: Skeleton of the feature function φ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 3 :</head><label>3</label><figDesc>Example of type for highlighted variables. The other attributes of a variable captures its linguistic context to surrogate the meaning of the variable. This includes the verb attribute i.e. the verb attached to the variable, and attributes corresponding to Stanford dependency relations</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 5 :</head><label>5</label><figDesc></figDesc><table>Comparision with ARIS, KAZB (Kush-
man et al., 2014), ALGES (Koncel-Kedziorski et 
al., 2015) and the state of the art Roy &amp; Roth on 
the accuracy of solving arithmetic problems. 

</table></figure>

			<note place="foot" n="1"> http://allenai.org/euclid.html</note>

			<note place="foot" n="2"> The code and data is publicly available at https://github.com/ari9dam/MathStudent.</note>

			<note place="foot" n="2">. The number of possible applications of change formula to the problem P , N change is 3 n−3 (2n 2 + 6n + 1) − 2n + 1. 3. The number of possible applications of comparison formula to the problem P , N comparison is 3(n − 1)(n − 2).</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Acknowledgement</head><p>We thank NSF for the DataNet Federation Consor-tium grant OCI-0940841 and ONR for their grant N00014-13-1-0334 for partially supporting this re-search.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Semeval-2012 task 6: A pilot on semantic textual similarity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eneko</forename><surname>Agirre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mona</forename><surname>Diab</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Cer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aitor</forename><surname>Gonzalez-Agirre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Joint Conference on Lexical and Computational Semantics</title>
		<meeting>the First Joint Conference on Lexical and Computational Semantics</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="385" to="393" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Natural language input for a computer problem solving system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bobrow</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1964" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A question-answering system for high school algebra word problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bobrow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fall Joint Computer Conference, Part I, AFIPS &apos;64 (Fall, part I)</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1964-10-27" />
			<biblScope unit="page" from="591" to="614" />
		</imprint>
	</monogr>
	<note>Proceedings of the</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabor</forename><surname>Samuel R Bowman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Angeli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher D</forename><surname>Potts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Manning</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1508.05326</idno>
		<title level="m">A large annotated corpus for learning natural language inference</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">My computer is an honor student but how intelligent is it? standardized tests as a measure of ai</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<publisher>AI Magazine</publisher>
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Elementary school science and math tests as a driver for ai: Take the aristo challenge! In AAAI</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Clark</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="4019" to="4021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Recognizing textual entailment: Rational, evaluation and approaches-erratum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Ido Dagan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernardo</forename><surname>Dolan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><forename type="middle">Roth</forename><surname>Magnini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Natural Language Engineering</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">01</biblScope>
			<biblScope unit="page" from="105" to="105" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Stanford typed dependencies manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marie-Catherine De</forename><surname>Marneffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher D</forename><surname>Manning</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
		<respStmt>
			<orgName>Stanford University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Edward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julian</forename><surname>Feigenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Feldman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and thought</title>
		<imprint>
			<date type="published" when="1963" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Understanding and solving arithmetic word problems: A computer simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Charles R Fletcher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behavior Research Methods, Instruments, &amp; Computers</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="565" to="571" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">From words to equations: Meaning and representation in algebra word problems. Cognitive processes in comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">R</forename><surname>Hinsley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert A</forename><surname>Hayes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Simon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977" />
			<biblScope unit="page">329</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Learning to solve arithmetic word problems with verb categorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad Javad</forename><surname>Hosseini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nate</forename><surname>Kushman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP)</title>
		<meeting>the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP)</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="523" to="533" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Understanding and solving word arithmetic problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walter</forename><surname>Kintsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James G</forename><surname>Greeno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Psychological review</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">109</biblScope>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Parsing algebraic word problems into equations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rik</forename><surname>Koncel-Kedziorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashish</forename><surname>Sabharwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Siena Dumas</forename><surname>Ang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of the Association for Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="585" to="597" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Learning to automatically solve algebra word problems. Association for Computational Linguistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nate</forename><surname>Kushman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoav</forename><surname>Artzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luke</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Regina</forename><surname>Barzilay</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">The winograd schema challenge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hector</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Levesque</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Conceptneta practical commonsense reasoning tool-kit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugo</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Push</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BT technology journal</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="211" to="226" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The stanford corenlp natural language processing toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mihai</forename><surname>Christopher D Manning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Surdeanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jenny</forename><forename type="middle">Rose</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Finkel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Bethard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mcclosky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL (System Demonstrations)</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="55" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Wordnet: a lexical database for english</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>George</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="39" to="41" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A review of methods for automatic understanding of natural language mathematical problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anirban</forename><surname>Mukherjee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Utpal</forename><surname>Garain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence Review</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="93" to="122" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Mctest: A challenge dataset for the open-domain machine comprehension of text</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Christopher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erin</forename><surname>Burges</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Renshaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Solving general arithmetic word problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Subhro</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EMNLP</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Automatically solving number word problems by semantic parsing and reasoning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuming</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuehui</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chin-Yew</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaojiang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yong</forename><surname>Rui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP)</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing (EMNLP)<address><addrLine>Lisbon, Portugal</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Conceptnet 5: A large semantic network for relational knowledge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Speer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Catherine</forename><surname>Havasi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Peoples Web Meets NLP</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="161" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Towards ai-complete question answering: A set of prerequisite toy tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antoine</forename><surname>Bordes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sumit</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1502.05698</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Learn to solve algebra word problems using quadratic programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lipu</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuaixiang</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liwei</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2015 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="817" to="822" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
