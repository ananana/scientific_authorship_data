<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T12:36+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Efficient Disfluency Detection with Transition-based Parsing</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>July 26-31, 2015. 2015</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuangzhi</forename><surname>Wu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Harbin Institute of Technology ‡ Microsoft Research</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dongdong</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Harbin Institute of Technology ‡ Microsoft Research</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Zhou</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Harbin Institute of Technology ‡ Microsoft Research</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tiejun</forename><surname>Zhao</surname></persName>
							<email>tjzhao@hit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="institution">Harbin Institute of Technology ‡ Microsoft Research</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Efficient Disfluency Detection with Transition-based Parsing</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing</title>
						<meeting>the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing <address><addrLine>Beijing, China</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="495" to="503"/>
							<date type="published">July 26-31, 2015. 2015</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Automatic speech recognition (ASR) outputs often contain various disfluencies. It is necessary to remove these disfluencies before processing downstream tasks. In this paper, an efficient disfluency detection approach based on right-to-left transition-based parsing is proposed, which can efficiently identify disfluencies and keep ASR outputs grammatical. Our method exploits a global view to capture long-range dependencies for disfluency detection by integrating a rich set of syntactic and dis-fluency features with linear complexity. The experimental results show that our method outperforms state-of-the-art work and achieves a 85.1% f-score on the commonly used English Switchboard test set. We also apply our method to in-house annotated Chinese data and achieve a significantly higher f-score compared to the baseline of CRF-based approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>With the development of the mobile internet, speech inputs have become more and more popu- lar in applications where automatic speech recog- nition (ASR) is the key component to convert speech into text. ASR outputs often contain var- ious disfluencies which create barriers to sub- sequent text processing tasks like parsing, ma- chine translation and summarization. Usually, disfluencies can be classified into uncompleted words, filled pauses (e.g. "uh", "um"), discourse markers (e.g. "I mean"), editing terms (e.g. "you know") and repairs. To identify and remove dis- fluencies, straightforward rules can be designed to tackle the former four classes of disfluencies since they often belong to a closed set. However, the repair type disfluency poses particularly more difficult problems as their form is more arbitrary. Typically, as shown in <ref type="figure">Figure 1</ref>, a repair disflu- ency type consists of a reparandum ("to Boston") and a filled pause ("um"), followed by its repair ("to Denver"). This special structure of disfluency constraint, which exists in many languages such as English and Chinese, reflects the scenarios of spontaneous speech and conversation, where peo- ple often correct preceding words with following words when they find that the preceding words are wrong or improper. This procedure might be interrupted and inserted with filled pauses when people are thinking or hesitating. The challenges of detecting repair disfluencies are that reparan- dums vary in length, may occur everywhere, and are sometimes nested. There are many related works on disfluency detection, that mainly focus on detecting repair type of disfluencies. Straightforwardly, disflu- ency detection can be treated as a sequence la- beling problem and solved by well-known ma- chine learning algorithms such as conditional ran- dom fields (CRF) or max-margin markov network (M 3 N) ( <ref type="bibr" target="#b10">Liu et al., 2006;</ref><ref type="bibr" target="#b4">Georgila, 2009;</ref><ref type="bibr" target="#b15">Qian and Liu, 2013)</ref>, and prosodic features are also concerned in ( <ref type="bibr" target="#b8">Kahn et al., 2005;</ref><ref type="bibr" target="#b20">Zhang et al., 2006</ref>). These methods achieve good performance, but are not powerful enough to capture compli- cated disfluencies with longer spans or distances. Recently, syntax-based models such as transition- based parser have been used for detecting disflu-encies ( <ref type="bibr" target="#b5">Honnibal and Johnson, 2014;</ref><ref type="bibr" target="#b16">Rasooli and Tetreault, 2013)</ref>. These methods can jointly per- form dependency parsing and disfluency detec- tion. But in these methods, great efforts are made to distinguish normal words from disfluent words as decisions cannot be made imminently from left to right, leading to inefficient implementation as well as performance loss.</p><p>In this paper, we propose detecting disfluencies using a right-to-left transition-based dependency parsing (R2L parsing), where the words are con- sumed from right to left to build the parsing tree based on which the current word is predicted to be either disfluent or normal. The proposed models cater to the disfluency constraint and integrate a rich set of features extracted from contexts of lexi- cons and partial syntactic tree structure, where the parsing model and disfluency predicting model are jointly calculated in a cascaded way. As shown in <ref type="figure" target="#fig_1">Figure 2</ref>(b), while the parsing tree is being built, disfluency tags are predicted and attached to the disfluency nodes. Our models are quite efficient with linear complexity of 2 * N (N is the length of input). Intuitively, compared with previous syntax- based work such as <ref type="bibr" target="#b5">(Honnibal and Johnson, 2014</ref>) that uses left-to-right transition-based pars- ing (L2R parsing) model, our proposed approach simplifies disfluency detection by sequentially processing each word, without going back to mod- ify the pre-built tree structure of disfluency words. As shown in <ref type="figure" target="#fig_1">Figure 2</ref>(a), the L2R parsing based joint approach needs to cut the pre-built depen- dency link between "did" and "he" when "was" is identified as the repair of "did", which is never needed in our method as <ref type="figure" target="#fig_1">Figure 2(b)</ref>. Furthermore, our method overcomes the deficiency issue in de- coding of L2R parsing based joint method, mean- ing the number of parsing transitions for each hy- pothesis path is not identical to 2 * N , which leads to the failure of performing optimal search during decoding. For example, the involvement of the ex- tra cut operation in <ref type="figure" target="#fig_1">Figure 2</ref>(a) destroys the com- petition scoring that accumulates over 2 * N tran- sition actions among hypotheses in the standard transition-based parsing. Although the heuristic score, such as the normalization of transition count <ref type="bibr" target="#b5">(Honnibal and Johnson, 2014</ref>), can be introduced, the total scores of all hypotheses are still not sta- tistically comparable from a global view.</p><p>We conduct the experiments on English Switch- board corpus. The results show that our method can achieve a 85.1% f-score with a gain of 0.7 point over state-of-the-art M 3 N labeling model in <ref type="bibr" target="#b15">(Qian and Liu, 2013</ref>) and a gain of 1 point over state-of-the-art joint model proposed in <ref type="bibr" target="#b5">(Honnibal and Johnson, 2014</ref>). We also apply our method on Chinese annotated data. As there is no available public data in Chinese, we annotate 25k Chinese sentences manually for training and testing. We achieve 71.2% f-score with 15 points gained com- pared to the CRF-based baseline, showing that our models are robust and language independent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Transition-based dependency parsing</head><p>In a typical transition-based parsing, the Shift- Reduce decoding algorithm is applied and a queue and stack are maintained ( <ref type="bibr" target="#b18">Zhang and Clark, 2008)</ref>. The queue stores the stream of the input and the front of the queue is indexed as the current word. The stack stores the unfinished words which may be linked to the current word or a future word in the queue. When words in the queue are con- sumed in sequential order, a set of transition ac- tions is applied to build a parsing tree. There are four kinds of transition actions in the parsing pro- cess ( <ref type="bibr" target="#b18">Zhang and Clark, 2008)</ref>, as described below.</p><p>• Shift : Removes the front of the queue and pushes it to the stack.</p><p>• Reduce : Pops the top of the stack.</p><p>• LeftArc : Pops the top of the stack, and links the popped word to the front of the queue.</p><p>• RightArc : Links the front of the queue to the top of the stack and, removes the front of the queue and pushes it to the stack.</p><p>The choice of each transition action during pars- ing is scored by a generalized perceptron <ref type="bibr" target="#b2">(Collins, 2002</ref>) which can be trained over a rich set of non- local features. In decoding, beam search is per- formed to search the optimal sequence of transi- tion actions. As each word must be pushed to the stack once and popped off once, the number of ac- tions needed to parse a sentence is always 2 * N , where N is the length of the sentence.</p><p>Transition-based dependency parsing <ref type="bibr" target="#b18">(Zhang and Clark, 2008)</ref> can be performed in either a left- to-right or a right-to-left way, both of which have a performance that is comparable as illustrated in Section 4. However, when they are applied to disfluency detection, their behaviors are very dif- ferent due to the disfluency structure constraint. We prove that right-to-left transition-based parsing is more efficient than left-to-right transition-based parsing for disfluency detection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Our method 3.1 Model</head><p>Unlike previous joint methods <ref type="bibr" target="#b5">(Honnibal and Johnson, 2014;</ref><ref type="bibr" target="#b16">Rasooli and Tetreault, 2013)</ref>, we introduce dependency parsing into disfluency de- tection from theory. In the task of disfluency detection, we are given a stream of unstructured words from automatic speech recognition (ASR). We denote the word sequence with W n 1 := w 1 , w 2 ,w 3 ,...,w n , which is actually the inverse order of ASR words that should be w n , w n−1 ,w n−2 ,...,w 1 . The output of the task is a sequence of binary tags denoted as</p><formula xml:id="formula_0">D n 1 = d 1 , d 2 ,d 3 ,...,d n ,</formula><p>where each d i corresponds to w i , indicating whether w i is a dis- fluency word (X) or not (N). <ref type="bibr">1</ref> Our task can be modeled as formula <ref type="formula" target="#formula_1">(1)</ref>, which is to search the best sequence D * given the stream of words W n 1 .</p><formula xml:id="formula_1">D * = argmax D P (D n 1 |W n 1 )<label>(1)</label></formula><p>The dependency parsing tree is introduced into model (1) to guide detection. The rewritten for- mula is shown below:</p><formula xml:id="formula_2">D * = argmax D T P (D n 1 , T |W n 1 )<label>(2)</label></formula><p>We jointly optimize disfluency detection and parsing with form (3), rather than considering all possible parsing trees:</p><formula xml:id="formula_3">(D * , T * ) = argmax (D,T ) P (D n 1 , T |W n 1 )<label>(3)</label></formula><p>As both the dependency tree and the disfluency tags are generated word by word, we decompose formula (3) into:</p><formula xml:id="formula_4">(D * , T * ) = argmax (D,T ) n i=1 P (d i , T i 1 |W i 1 , T i−1 1 ) (4)</formula><p>where T i 1 is the partial tree after word w i is con- sumed, d i is the disfluency tag of w i .</p><p>We simplify the joint optimization in a cascaded way with two different forms <ref type="formula">(5)</ref> and <ref type="formula" target="#formula_5">(6)</ref>.</p><formula xml:id="formula_5">(D * , T * ) = argmax (D,T ) n i=1 P (T i 1 |W i 1 , T i−1 1 ) × P (d i |W i 1 , T i 1 ) (5) (D * , T * ) = argmax (D,T ) n i=1 P (d i |W i 1 , T i−1 1 ) × P (T i 1 |W i 1 , T i−1 1 , d i )<label>(6)</label></formula><p>Here, P (T i 1 |.) is the parsing model, and</p><formula xml:id="formula_6">P (d i |.</formula><p>) is the disfluency model used to predict the disluency tags on condition of the contexts of partial trees that have been built.</p><p>In (5), the parsing model is calculated first, fol- lowed by the calculation of the disfluency model. Inspired by <ref type="bibr" target="#b21">(Zhang et al., 2013)</ref>, we associate the disfluency tags to the transition actions so that the calculation of P (d i |W i 1 , T i 1 ) can be omitted as d i can be inferred from the partial tree T i 1 . We then get</p><formula xml:id="formula_7">(D * , T * ) = argmax (D,T ) n i=1 P (d i , T i 1 |W i 1 , T i−1 1 )<label>(7)</label></formula><p>Where the parsing and disfluency detection are unified into one model. We refer to this model as the Unified Transition(UT) model. While in (6), the disfluency model is calculated first, followed by the calculation of the parsing model. We model P (d i |.) as a binary classifier to classify whether a word is disfluent or not. We re- fer to this model as the binary classifier transition (BCT) model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Unified transition-based model (UT)</head><p>In model (7), in addition to the standard 4 transi- tion actions mentioned in Section 2, the UT model adds 2 new transition actions which extend the original Shift and RightArc transitions as shown below:</p><p>• Dis Shift: Performs what Shift does then marks the pushed word as disfluent.</p><p>• Dis RightArc: Adds a virtual link from the front of the queue to the top of the stack which is similar to Right Arc, marking the front of the queue as disfluenct and pushing it to the stack. <ref type="figure" target="#fig_2">Figure 3</ref> shows an example of how the UT model works. Given an input "he did great was great", the optimal parsing tree is predicted by the UT model. According to the parsing tree, we can get the disfluency tags "N X X N N" which have been attached to each word. To ensure the normal words are built grammatical in the parse tree, we apply a constraint to the UT model. UT model constraint: When a word is marked disfluent, all the words in its left and right sub- trees will be marked disfluent and all the links of its descendent offsprings will be converted to vir- tual links, no matter what actions are applied to these words.</p><p>For example, the italic word "great" will be marked disfluent, no matter what actions are per- formed on it. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">A binary classifier transition-based model (BCT)</head><p>In model (6), we perform the binary classifier and the parsing model together by augmenting the Shift-Reduce algorithm with a binary classifier transition(BCT) action:</p><p>• BCT : Classifies whether the current word is disfluent or not. If it is, remove it from the queue, push it into the stack which is simi- lar to Shift and then mark it as disfluent, oth- erwise the original transition actions will be used.</p><p>It is noted that when BCT is performed, the next action must be Reduce. This constraint guarantees that any disfluent word will not have any descen- dent offspring. <ref type="figure" target="#fig_1">Figure 2(b)</ref> shows an example of the BCT model. When the partial tree "great was" is built, the next word "did" is obviously disfluent. Unlike UT model, the BCT will not link the word "did" to any word. Instead only a virtual link will add it to the virtual root.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Training and decoding</head><p>In practice, we use the same linear model for both models (6) and <ref type="formula" target="#formula_7">(7)</ref> to score a parsing tree as:</p><formula xml:id="formula_8">Score(T ) = action φ(action) · λ</formula><p>Where φ(action) is the feature vector extracted from partial hypothesis T for a certain action and λ is the weight vector. φ(action) · λ calculates the score of a certain transition action. The score of a parsing tree T is the sum of action scores.</p><p>In addition to the basic features introduced in (Zhang and Nivre, 2011) that are defined over bag of words and POS-tags as well as tree-based con- text, our models also integrate three classes of new features combined with Brown cluster fea- tures ( <ref type="bibr" target="#b0">Brown et al., 1992</ref>) that relate to the right- to-left transition-based parsing procedure as de- tailed below. Simple repetition function</p><p>• δ I (a, b): A logic function which indicates whether a and b are identical.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Syntax-based repetition function</head><p>• δ L (a, b): A logic function which indicates whether a is a left child of b.</p><p>• δ R (a, b): A logic function which indicates whether a is a right child of b.</p><p>Longest subtree similarity function</p><formula xml:id="formula_9">• N I (a, b):</formula><p>The count of identical children on the left side of the root node between subtrees rooted at a and b.</p><p>• N # (a 0..n , b): The count of words among a 0 .. a n that are on the right of the subtree rooted at b. <ref type="table" target="#tab_0">Table 1</ref> summarizes the features we use in the model computation, where w s denotes the top word of the stack, w 0 denotes the front word of the queue and w 0..2 denotes the top three words of the queue. Every p i corresponds to the POS-tag of w i and p 0..2 represents the POS-tags of w 0.. Similar to the work in ( <ref type="bibr" target="#b18">Zhang and Clark, 2008;</ref><ref type="bibr" target="#b19">Zhang and Nivre, 2011)</ref>, we train our models by averaged perceptron <ref type="bibr" target="#b2">(Collins, 2002</ref>). In decod- ing, beam search is performed to get the optimal parsing tree as well as the tag sequence.</p><note type="other">2 . In addition, w i c means the Brown cluster of w i . With these symbols, several new feature templates are defined in Table 1. Both our models have the same feature templates. Basic features All templates in (Zhang and Nivre, 2011) New disfluency features Function unigrams δ</note><formula xml:id="formula_10">I (w s , w 0 );δ I (p s , p 0 ); δ L (w 0 , w s );δ L (p 0 , p s ); δ R (w 0 , w s );δ R (p 0 , p s ); N I (w 0 , w s );N I (p 0 , p s ); N # (w 0..2 , w s );N # (p 0..2 , p s ); Function bigrams δ I (w s , w 0 )δ I (p s , p 0 ); δ L (w 0 , w s )δ L (p 0 , p s ); δ R (w 0 , w s )δ R (p 0 , p s ); N I (w 0 , w s )N I (p 0 , p s ); N # (w 0..2 , w s )N # (p 0..2 , p s ); δ I (w s , w 0 )w s c; δ I (w s , w 0 )w 0 c; Function trigrams w s w 0 δ I (w s , w 0 ); w s w 0 δ I (p s , p 0 );</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Experimental setup</head><p>Our training data is the Switchboard portion of the English Penn Treebank ( <ref type="bibr" target="#b11">Marcus et al., 1993)</ref> corpus, which consists of telephone conversations about assigned topics. As not all the Switchboard data has syntactic bracketing, we only use the sub- corpus of PAESED/MRG/SWBD. Following the experiment settings in <ref type="bibr" target="#b1">(Charniak and Johnson, 2001</ref>), the training subcorpus contains directories 2 and 3 in PAESED/MRG/SWBD and directory 4 is split into test and development sets. We use the Stanford dependency converter <ref type="bibr" target="#b3">(De Marneffe et al., 2006</ref>) to get the dependency structure from the Switchboard corpus, as <ref type="bibr" target="#b5">Honnibal and Johnson (2014)</ref> prove that Stanford converter is robust to the Switchboard data.</p><p>For our Chinese experiments, no public Chinese corpus is available. We annotate about 25k spo- ken sentences with only disfluency annotations ac- cording to the guideline proposed by <ref type="bibr" target="#b13">Meteer et al. (1995)</ref>. In order to generate similar data format as English Switchboard corpus, we use Chinese dependency parsing trained on the Chinese Tree- bank corpus to parse the annotated data and use these parsed data for training and testing . For our Chinese experiment setting, we respectively select about 2k sentences for development and testing. The rest are used for training.</p><p>To train the UT model, we create data for- mat adaptation by replacing the original Shift and RightArc of disfluent words with Dis Shift and Dis RightArc, since they are just extensions of Shift and RightArc. For the BCT model, disflu- ent words are directly depended to the root node and all their links and labels are removed. We then link all the fluent children of disfluent words to parents of disfluent words. We also remove partial words and punctuation from data to simu- late speech recognizer results where such informa- tion is not available ( ). Additionally, following <ref type="bibr" target="#b5">Honnibal and Johnson (2014)</ref>, we remove all one token sentences as these sentences are trivial for disfluency detection, then lowercase the text and discard filled pauses like "um" and "uh".</p><p>The evaluation metrics of disfluency detection are precision (Prec.), recall (Rec.) and f-score (F1). For parsing accuracy metrics, we use unla- beled attachment score (UAS) and labeled attach- ment score (LAS). For our primary comparison, we evaluate the widely used CRF labeling model, the state-of-the-art M 3 N model presented by <ref type="bibr" target="#b15">Qian and Liu (2013)</ref> which has been commonly used as baseline in previous works and the state-of-the-art L2R parsing based joint model proposed by Hon- nibal and Johnson (2014).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Experimental results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Performance of disfluency detection on English Swtichboard corpus</head><p>The evaluation results of both disfluency detec- tion and parsing accuracy are presented in   <ref type="formula" target="#formula_1">(2014)</ref>, as we all conduct experi- ments on the same pre-processed data set. In order to compare parsing accuracy, we use the CRF and M 3 N † model to pre-process the test set by remov- ing all the detected disfluencies, then evaluate the parsing performance on the processed set. From the table, our BCT model with new disfluency fea- tures achieves the best performance on disfluency detection as well as dependency parsing. The performance of the CRF model is low, be- cause the local features are not powerful enough to capture long span disfluencies. Our main com- parison is with the M 3 N † labeling model and the L2R parsing based model by <ref type="bibr" target="#b5">Honnibal and Johnson (2014)</ref>. As illustrated in <ref type="table" target="#tab_1">Table 2</ref>, the BCT model outperforms the M 3 N † model (we got an accuracy of 84.4%, though 84.1% was reported in their paper) and the L2R parsing based model respectively by 0.7 point and 1 point on disflu- ency detection, which shows our method can ef- ficiently tackle disfluencies. This is because our method can cater extremely well to the disfluency constraint and perform optimal search with iden- tical transition counts over all hypotheses in beam search. Furthermore, our global syntactic and dis- <ref type="bibr">2</ref> The toolkit is available at https://code.google.com/p/disfluency-detection/downloads. fluency features can help capture long-range de- pendencies for disfluency detection. However, the UT model does not perform as well as BCT. This is because the UT model suffers from the risk that normal words may be linked to disfluencies which may bring error propagation in decoding. In addition our models with only basic features respectively score about 3 points below the mod- els adding new features, which shows that these features are important for disfluency detection. In comparing parsing accuracy, our BCT model out- performs all the other models, showing that this model is more robust on disfluent parsing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Performance of disfluency detection on different part-of-speeches</head><p>In this section, we further analyze the frequency of different part-of-speeches in disfluencies and test the performance on different part-of-speeches. Five classes of words take up more than 73% of all disfluencies as shown in <ref type="table">Table 3</ref>, which are pronouns (contain PRP and PRP$), verbs (con- tain VB,VBD,VBP,VBZ,VBN), determiners (con- tain DT), prepositions (contain IN) and conjunc- tions (contain CC). Obviously, these classes of words appear frequently in our communication.</p><p>Pron  <ref type="table">Table 3</ref>:</p><p>Distribution of different part-of- speeches in disfluencies.</p><p>Conj.=conjunction; Dete.=determiner; Pron.=pronoun; Prep.= prepo- sition. <ref type="table" target="#tab_5">Table 4</ref> illustrates the performance (f-score) on these classes of words. The results of L2R pars- ing based joint model in <ref type="bibr" target="#b5">(Honnibal and Johnson, 2014)</ref> are not listed because we cannot get such detailed data.  As shown in <ref type="table" target="#tab_5">Table 4</ref>, our BCT model outper- forms all other models except that the performance on determiner is lower than M 3 N † , which shows that our algorithm can significantly tackle com- mon disfluencies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CRF</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Performance of disfluency detection on Chinese annotated corpus</head><p>In addition to English experiments, we also apply our method on Chinese annotated data. As there is no standard Chinese corpus, no Chinese experi- mental results are reported in <ref type="bibr" target="#b5">(Honnibal and Johnson, 2014;</ref><ref type="bibr" target="#b15">Qian and Liu, 2013)</ref>. We only use the CRF-based labeling model with lexical and POS- tag features as baselines. 86.7% 59.5% 70.6% BCT(+new features) 85.5% 61% 71.2% <ref type="table" target="#tab_6">Table 5</ref>: Disfluency detection performance on Chinese annotated data.</p><p>Our models outperform the CRF model with bag of words and POS-tag features by more than 15 points on f-score which shows that our method is more effective. As shown latter in 4.2.4, the standard transition-based parsing is not robust in parsing disfluent text. There are a lot of parsing er- rors in Chinese training data. Even though we are still able to get promising results with less data and un-golden parsing annotations. We believe that if we were to have the golden Chinese syntactic an- notations and more data, we would get much better results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.4">Performance of transition-based</head><p>parsing In order to show whether the advantage of the BCT model is caused by the disfluency constraint or the difference between R2L and L2R parsing models, in this section, we make a comparison between the original left-to-right transition-based parsing and right-to-left parsing. These experiments are per- formed with the Penn Treebank (PTB) Wall Street Journal (WSJ) corpus. We follow the standard ap- proach to split the corpus as 2-21 for training, 22 for development and section 23 for testing <ref type="bibr" target="#b12">(McDonald et al., 2005</ref>). The features for the two parsers are basic features in <ref type="table" target="#tab_0">Table 1</ref>. The POS- tagger model that we implement for a pre-process before parsing also uses structured perceptron for training and can achieve a competitive accuracy of 96.7%. The beam size for both POS-tagger and parsing is set to 5.  <ref type="table" target="#tab_7">Table 6</ref>: Performance of our parsers on different test sets.</p><p>The parsing accuracy on SWBD is lower than WSJ which means that the parsers are more robust on written text data. The performances of R2L and L2R parsing are comparable on both SWBD and WSJ test sets. This demonstrates that the effec- tiveness of our disfluency detection model mainly relies on catering to the disfluency constraint by using R2L parsing based approach, instead of the difference in parsing models between L2R and R2L parsings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related work</head><p>In practice, disfluency detection has been exten- sively studied in both speech processing field and natural language processing field. Noisy channel models have been widely used in the past to detect disfluencies.  pro- posed a TAG-based noisy channel model where the TAG model was used to find rough copies. Thereafter, a language model and MaxEnt re- ranker were added to the noisy channel model by . Following their frame- work, <ref type="bibr" target="#b22">Zwarts and Johnson (2011)</ref> extended this model using minimal expected f-loss oriented n- best reranking with additional corpus for language model training.</p><p>Recently, the max-margin markov networks (M 3 N) based model has achieved great improve- ment in this task. Qian and Liu (2013) presented a multi-step learning method using weighted M 3 N model for disfluency detection. They showed that M 3 N model outperformed many other labeling models such as CRF model. Following this work, <ref type="bibr" target="#b17">Wang et al. (2014)</ref> used a beam-search decoder to combine multiple models such as M 3 N and lan- guage model, they achieved the highest f-score. However, direct comparison with their work is dif- ficult as they utilized the whole SWBD data while we only use the subcorpus with syntactic annota- tion which is only half the SWBD corpus and they also used extra corpus for language model train- ing.</p><p>Additionally, syntax-based approaches have been proposed which concern parsing and dis- fluency detection together. <ref type="bibr" target="#b9">Lease and Johnson (2006)</ref> involved disfluency detection in a PCFG parser to parse the input along with detecting dis- fluencies. <ref type="bibr" target="#b14">Miller and Schuler (2008)</ref> used a right corner transform of syntax trees to produce a syn- tactic tree with speech repairs. But their perfor- mance was not as good as labeling models. There exist two methods published recently which are similar to ours. <ref type="bibr" target="#b16">Rasooli and Tetreault (2013)</ref> de- signed a joint model for both disfluency detection and dependency parsing. They regarded the two tasks as a two step classifications. <ref type="bibr" target="#b5">Honnibal and Johnson (2014)</ref> presented a new joint model by ex- tending the original transition actions with a new "Edit" transition. They achieved the state-of-the- art performance on both disfluency detection and parsing. But this model suffers from the problem that the number of transition actions is not identi- cal for different hypotheses in decoding, leading to the failure of performing optimal search. In con- trast, our novel right-to-left transition-based joint method caters to the disfluency constraint which can not only overcome the decoding deficiency in previous work but also achieve significantly higher performance on disfluency detection as well as de- pendency parsing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>In this paper, we propose a novel approach for disfluency detection. Our models jointly perform parsing and disfluency detection from right to left by integrating a rich set of disfluency features which can yield parsing structure and difluency tags at the same time with linear complexity. The algorithm is easy to implement without compli- cated backtrack operations. Experiential results show that our approach outperforms the baselines on the English Switchboard corpus and experi- ments on the Chinese annotated corpus also show the language independent nature of our method. The state-of-the-art performance on disfluency de- tection and dependency parsing can benefit the downstream tasks of text processing.</p><p>In future work, we will try to add new classes of features to further improve performance by cap- turing the property of disfluencies. We would also like to make an end-to-end MT test over transcribed speech texts with disfluencies removed based on the method proposed in this paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>I</head><label></label><figDesc>Figure 1: A typical example of repair type disfluency consists of FP (Filled Pause), RM (Reparandum), and RP (Repair). The preceding RM is corrected by the following RP.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: An instance of the detection procedure where 'N' stands for a normal word and 'X' a disfluency word. Words with italic font are Reparandums. (a) is the L2R detecting procedure and (b) is the R2L procedure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: An example of UT model, where 'N' means the word is a fluent word and 'X' means it is disfluent. Words with italic font are Reparandums.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>Feature templates designed for disfluency 
detection and dependency parsing. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 . The accuracy of M 3 N directly refers to the re-</head><label>2</label><figDesc></figDesc><table>Disfluency detection accuracy Parsing accuracy 
Method 
Prec. 
Rec. 
F1 
UAS 
LAS 
CRF(BOW) 
81.2% 
44.9% 
57.8% 
88.7% 
84.7% 
CRF(BOW+POS) 
88.3% 
62.2% 
73.1% 
89.2% 
85.6% 
M 3 N 
N/A 
N/A 
84.1% 
N/A 
N/A 
M 3 N  † 
90.5% 
79.1% 
84.4% 
91% 
88.2% 
H&amp;J 
N/A 
N/A 
84.1% 
90.5% 
N/A 
UT(basic features) 
86% 
72.5% 
78.7% 
91.9% 
89.0% 
UT(+new features) 
88.8% 
75.1% 
81.3% 
92.1% 
89.4% 
BCT(basic features) 
88.2% 
77.9% 
82.7% 
92.1% 
89.3% 
BCT(+new features) 
90.3% 
80.5% 
85.1% 
92.2% 
89.6% 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Disfluency detection and parsing accuracies on English Switchboard data. The accuracy of 
M 3 N refers to the result reported in (Qian and Liu, 2013). H&amp;J is the L2R parsing based joint model in 
(Honnibal and Johnson, 2014). The results of M 3 N  † come from the experiments with toolkit released by 
Qian and Liu (2013) on our pre-processed corpus. 

sults reported in (Qian and Liu, 2013). The re-
sults of M 3 N  † come from our experiments with the 
toolkit 2 released by Qian and Liu (2013) which 
uses our data set with the same pre-processing. It 
is comparable between our models and the L2R 
parsing based joint model presented by Honni-
bal and Johnson </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table>Performance on different classes 
of words. Dete.=determiner; Pron.=pronoun; 
Conj.=conjunction; Prep.= preposition. feat.=new 
disfluency features 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>Table 5 shows</head><label>5</label><figDesc></figDesc><table>the results 
of Chinese disfluency detection. 

Model 
Prec. Rec. 
F1 
CRF(BOW) 
89.5% 35.6% 50.9% 
CRF(BOW+POS) 
83.4% 41.6% 55.5% 
UT(+new features) 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="true"><head>Table 6 presents</head><label>6</label><figDesc>the results on WSJ test set and Switchboard (SWBD) test set.</figDesc><table>Data sets 
Model 
UAS 
LAS 
WSJ 
L2R Parsing 92.1% 89.8% 
R2L Parsing 92.0% 89.6% 
SWBD 
L2R Parsing 88.4% 84.4% 
R2L Parsing 88.7% 84.8% 

</table></figure>

			<note place="foot" n="1"> We just use tag &apos;N&apos; to represent a normal word, in practice normal words will not be tagged anything by default.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We are grateful to the anonymous reviewers for their insightful comments. We also thank Mu Li, Shujie Liu, Lei Cui and Nan Yang for the helpful discussions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Class-based n-gram models of natural language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Peter F Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">L</forename><surname>Desouza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vincent J Della</forename><surname>Mercer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jenifer C</forename><surname>Pietra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational linguistics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="467" to="479" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Edit detection and parsing for transcribed speech</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Charniak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the second meeting of the North American Chapter of the Association for Computational Linguistics on Language technologies</title>
		<meeting>the second meeting of the North American Chapter of the Association for Computational Linguistics on Language technologies</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Discriminative training methods for hidden markov models: Theory and experiments with perceptron algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Collins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACL-02 conference on Empirical methods in natural language processing</title>
		<meeting>the ACL-02 conference on Empirical methods in natural language processing</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2002" />
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Generating typed dependency parses from phrase structure parses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marie-Catherine De</forename><surname>Marneffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Maccartney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of LREC</title>
		<meeting>LREC</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="449" to="454" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Using integer linear programming for detecting speech disfluencies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kallirroi</forename><surname>Georgila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Short Papers</title>
		<meeting>Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Short Papers</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="109" to="112" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Joint incremental disfluency detection and dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Honnibal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of the Association for Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="131" to="142" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A tagbased noisy channel model of speech repairs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Charniak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics, page 33. Association for Computational Linguistics</title>
		<meeting>the 42nd Annual Meeting on Association for Computational Linguistics, page 33. Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An improved model for recognizing disfluencies in conversational speech</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Charniak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Lease</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Rich Transcription Workshop</title>
		<meeting>Rich Transcription Workshop</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Effective use of prosody in parsing conversational speech</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Jeremy G Kahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Lease</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Charniak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mari</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ostendorf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the conference on human language technology and empirical methods in natural language processing</title>
		<meeting>the conference on human language technology and empirical methods in natural language processing</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Early deletion of fillers in processing conversational speech</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Lease</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Human Language Technology Conference of the NAACL, Companion Volume: Short Papers</title>
		<meeting>the Human Language Technology Conference of the NAACL, Companion Volume: Short Papers</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="73" to="76" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Enriching speech recognition with automatic detection of sentence boundaries and disfluencies. Audio, Speech, and Language Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Elizabeth</forename><surname>Shriberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Stolcke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dustin</forename><surname>Hillard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mari</forename><surname>Ostendorf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mary</forename><surname>Harper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1526" to="1540" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Building a large annotated corpus of english: The penn treebank</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mary</forename><forename type="middle">Ann</forename><surname>Mitchell P Marcus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beatrice</forename><surname>Marcinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Santorini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational linguistics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="313" to="330" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Online large-margin training of dependency parsers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koby</forename><surname>Crammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd annual meeting on association for computational linguistics</title>
		<meeting>the 43rd annual meeting on association for computational linguistics</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Dysfluency annotation stylebook for the switchboard corpus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ann</forename><forename type="middle">A</forename><surname>Marie W Meteer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rukmini</forename><surname>Macintyre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iyer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
		<respStmt>
			<orgName>University of Pennsylvania</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A unified syntactic model for parsing fluent and disfluent speech</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Schuler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics on Human Language Technologies: Short Papers</title>
		<meeting>the 46th Annual Meeting of the Association for Computational Linguistics on Human Language Technologies: Short Papers</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="105" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Disfluency detection using multi-step stacked learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xian</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yang</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HLT-NAACL</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="820" to="825" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Joint parsing and disfluency detection in linear time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><surname>Sadegh Rasooli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><forename type="middle">R</forename><surname>Tetreault</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="124" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A beam-search decoder for disfluency detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xuancong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hwee</forename><forename type="middle">Tou</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Khe Chai</forename><surname>Sim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of COLING</title>
		<meeting>of COLING</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A tale of two parsers: investigating and combining graphbased and transition-based dependency parsing using beam-search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="562" to="571" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Transition-based dependency parsing with rich non-local features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies: short papers</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies: short papers</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="188" to="193" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A progressive feature selection algorithm for ultra large feature spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qi</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fuliang</forename><surname>Weng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhe</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics</title>
		<meeting>the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="561" to="568" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Punctuation prediction with transition-based parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dongdong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuangzhi</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nan</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mu</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL (1)</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="752" to="760" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The impact of language models and loss functions on repair disfluency detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simon</forename><surname>Zwarts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="703" to="711" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
