<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T10:11+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">TermSuite: Terminology Extraction with Term Variant Detection</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>August 7-12, 2016</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Damien</forename><surname>Cram</surname></persName>
							<email>damien.cram@univ-nantes.fr</email>
							<affiliation key="aff0">
								<orgName type="laboratory">LINA -UMR CNRS 6241</orgName>
								<orgName type="institution">Université de Nantes</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Béatrice</forename><surname>Daille</surname></persName>
							<email>beatrice.daille@univ-nantes.fr</email>
							<affiliation key="aff1">
								<orgName type="laboratory">LINA -UMR CNRS 6241 Université de Nantes</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">TermSuite: Terminology Extraction with Term Variant Detection</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics-System Demonstrations</title>
						<meeting>the 54th Annual Meeting of the Association for Computational Linguistics-System Demonstrations <address><addrLine>Berlin, Germany</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="13" to="18"/>
							<date type="published">August 7-12, 2016</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We introduce, TermSuite, a JAVA and UIMA-based toolkit to build terminologies from corpora. TermSuite follows the classic two steps of terminology extraction tools, the identification of term candidates and their ranking, but implements new features. It is multilingually designed, scalable, and handles term variants. We focus on the main components: UIMA Tokens Regex for defining term and variant patterns over word annotations , and the grouping component for clustering terms and variants that works both at morphological and syntactic levels.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Terminologies play a central role in any NLP ap- plications such as information retrieval, informa- tion extraction, or ontology acquisition. A ter- minology is a coherent set of terms that consti- tutes the vocabulary of a domain. It also reflects the conceptual system of that domain. A term could be a single term (SWT), such as rotor, or a complex term. Complex terms are either com- pounds such as broadband, or multi-word terms (MWT) such as frequency band. Terms are func- tional classes of lexical items used in discourse, and as such they are subjected to linguistic varia- tions such as modification or coordination.</p><p>As specialized domains are poorly covered by general dictionaries, Term Extraction Tools (TET) that extract terminology from corpora have been developed since the early nineties. This first gen- eration of <ref type="bibr">TET (Cabré et al., 2001</ref>) was mono- lingually designed, not scalable, and they were not handling term variants, except for ACABIT <ref type="bibr" target="#b5">(Daille, 2001</ref>) and FASTR <ref type="bibr" target="#b8">(Jacquemin, 2001</ref>).</p><p>This last question has always been a pain in the neck for TET.</p><p>The current generation of TET improves on var- ious aspects. As an example, TermoStat 1 deals with several Romance languages, reaches to treat text up to 30 megabytes, and proposes a first structuring based on lexical inclusion. Term- Suite goes a step forward: it is multilingually designed, scalable, and handles term variants. It is able to perform term extraction from languages that behave differently from the linguistic point of view. Complex terms in languages such as Ger- man and Russian are mostly compounds, while in Roman languages they are MWT. TermSuite extracts single terms and any kind of complex terms. For some generic domains and some ap- plications, large amounts of data have to be pro- cessed. TermSuite is scalable and has been applied to corpora of 1.1 gigabytes using a per- sonal computer configuration. Finally, Term- Suite identifies a broad range of term variants, from spelling to syntactic variants that may be used to structure the extracted terminology with various conceptual relations.</p><p>Since the first TermSuite release (Rocheteau and Daille, 2011), several enhancements about TET have been made. We developed UIMA To- kens Regex, a tool to define term and variant pat- terns using word annotations within the UIMA framework ( <ref type="bibr" target="#b7">Ferrucci and Lally, 2004</ref>) and a group- ing tool to cluster terms and variants. Both tools are designed to treat in an uniform way all linguis- tic kinds of complex terms.</p><p>After a brief reminder of TermSuite gene- ral architecture, we present its term spotting tool UIMA Tokens Regex, its variant grouping tool, and the variant specifications we design for En- glish, French, Spanish, German, and Russian. Fi-nally, we provide some figures and considerations about TermSuite resources and behaviour.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">TermSuite architecture</head><p>TET are dedicated to compute the termhood and the unithood of a term candidate ( <ref type="bibr" target="#b10">Kageura and Umino, 1996)</ref>. Two steps make up the core of the terminology extraction process ( <ref type="bibr" target="#b13">Pazienza et al., 2005</ref>):</p><p>1. Spotting: Identification and collection of term-like units in the texts, mostly a subset of nominal phrases;</p><p>2. Filtering and sorting: Filtering of the ex- tracted term-like units that may not be terms, syntactically or terminologically; Sorting of the term candidates according to their unit- hood, their terminological degree and their most interest for the target application.</p><p>TermSuite adopts these two steps. Term- like units are collected with the following NLP pipeline: tokenization, POS tagging, lemmatiza- tion, stemming, splitting, and MWT spotting with UIMA Tokens Regex. They are ranked according to the most popular termhood measure. But in or- der to improve the term extraction process and to provide a first structuring of the term candidates, a component dedicating to term variant recognition has been added. Indeed, term variant recognition improves the outputs of term extraction: the rank- ing of the term candidates is more accurate and more terms are detected <ref type="bibr" target="#b3">(Daille and Blancafort, 2013)</ref>. <ref type="figure" target="#fig_5">Figure 2</ref> shows the output of TermSuite TET within the graphical interface. The main win- dow shows the terms rank according to termhood. A term candidate may group miscellaneous term variants. When a term is highlighted, the occur- rences spot by UIMA Tokens Regex are showed in the bottom window and the term features in the right window.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Spotting multiword terms</head><p>We design a component in charge of spotting multi-word terms and their variants in text, which is based on UIMA Tokens Regex 2 , a concise and expressive language coupled with an efficient rule engine. UIMA Tokens Regex allows the user to</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Syntax</head><p>UIMA Tokens Regex syntax is formally de- fined by an ANTLR 3 grammar and inspired by Stanford TokensRegex <ref type="bibr" target="#b2">(Chang and Manning, 2014</ref>).</p><p>Matchers Before defining regular expressions over annotations, each annotation needs to be atomically matchable. That is why UIMA Tokens Regex defines a syntax for matchers. A matcher can be of three types:</p><p>[Boolean Exp] an expression matching the values of annotation attributes. /String RegExp/ A valid Java regular ex- pression matching against the text covered by the an- notation. The dot "." matches any annotation. The Boolean Exp within brackets is a combination of atomic boolean expressions, boolean operators &amp; and , and parentheses. An atomic boolean expression is of the form:</p><formula xml:id="formula_0">property op literal</formula><p>Where property is an annotation feature de- fined in TermSuite UIMA type system, op is one of ==, !=, &lt;, &lt;=, &gt;, and &gt;=, and literal is either a string, a boolean (true or false), or a number (integer or double).</p><p>Rules Rules are named regular expressions that are defined as follows:</p><p>term "rule name": TokensRegex;</p><p>Where TokensRegex is a sequence of quantified matchers. The quantifiers are:</p><p>? 0 or 1 * 0 or several + at least 1 {n} exactly n {m,n} between m and n</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Engine</head><p>UIMA Tokens Regex engine parses the list of rules and creates for each of these rules a finite-state automaton. The engine provides automata with the sequence of UIMA annotations of the prepro- cessed input document. UIMA Tokens Regex en- gine implements the default behaviour of a regu- lar expression engine: it is greedy, backtracking, picking out the first alternative, and impatient.</p><p>Every time an automaton (ie. a rule) matches, TermSuite generates a rule occurrence and stores the offset indexes of the matched text.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Application to terminology extraction</head><p>Example In TermSuite type system, the val- ues of the feature category are the part-of- speech (POS) tags. Rule an below extracts MWT composed of one or several adjectives followed by a noun. Rule acan extracts coordination variants that match the "adjective conjunction adjective noun" pattern, such as onshore and offshore locations. The quantifier ? expresses an optional determiner. Rule npn can extract both MWT: energy of wind and energy of the wind.</p><p>Features The annotation features available in TermSuite type system are category, subCategory, lemma, and stem and in- flectional features such as mood, tense, or case.</p><p>Lexical filtering Matcher A above shows an ex- ample of lexical filtering that prohibits occur- rences of the listed lemma in the pattern. For ex- ample, Rule an will not match the term candidate same energy.</p><p>Contextual filtering Contextual POS are pre- ceded by tilde (∼). Rule acan shows an example of contextual filtering. A determinant should oc- cur for the pattern to be matched, but it will be not part of collected MWT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Variant grouping</head><p>TermSuite is able to gather terms according to syntactic and morphological variant patterns that are defined with YAML syntax <ref type="bibr" target="#b0">(Ben-Kiki et al., 2005</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Syntax</head><p>A variant rule states a set of conditions that two term candidates must fulfil to be paired. It consists of:</p><p>a rule name a string expression between double quotes ("), ended by a colon (:), a source pattern and a target pattern, which are sequences of matcher labels.</p><p>a boolean expression a logical expression on source and target term features, denoted by rule. The field rule is interpreted by a Groovy engine and must be defined in valid Groovy syntax.</p><p>Example The example below is the simplest variant grouping rule defined for English. This rule is named S-I-NN-(N|A). It states that one term candidate (the source) must be of pattern N N, and the second term candidate (the target) of patterns N N N or N A N. The rule field states that the lemma property of s <ref type="bibr">[0]</ref>, the first noun of the source, has the same lemma as t <ref type="bibr">[0]</ref>, the first noun of the target. Likewise s <ref type="bibr">[1]</ref> and t <ref type="bibr">[2]</ref> must share the same lemma. For exam- ple, this variant grouping rule will be satisfied for the two terms turbine structure and turbine base structure.</p><p>Word features The rule field expresses con- ditions on word features. The two main features used for grouping are lemma and stem. lemma is the default one, that is why stating s[0] == t <ref type="bibr">[0]</ref> is equivalent to s <ref type="bibr">[0]</ref>.lemma == t <ref type="bibr">[0]</ref>.lemma. The rule "S-PI-NN-P" below makes use of the stem property. An example of grouping is effect of ro- tation and rotational effect where rotational is de- rived from rotation. Morphological variants TermSuite imple- ments Compost, a multilingual splitter <ref type="bibr" target="#b12">(Loginova Clouet and Daille, 2014</ref>) that makes the de- cision as to whether the term composed of one graphic unit, is a SWT or a compound, and for compounds, it gives one or several candidate anal- yses ranked by their scores. We only keep the best split. The compound elements are reachable when TermSuite comes to apply the variant group- ing rules. The syntax of YAML variant rules al- lows the user to express morphological variants between two terms: In the rule M-I-EN-N|A above, the tag <ref type="bibr">[compound]</ref> after the source pattern states that the source has to be a morphosyntactic compound. In the rule field, we access the component fea- tures with the second index of the two-based in- dexing arrays, the first index referring to the POS position in the source or target patterns. As ex- amples, this rule groups the two term candidates windfarm and windmill farm, and also hydropower and hydroelectric power.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Engine</head><p>Term variant grouping applies on term pairs with a complexity of O(n 2 ), where n is the number of term candidates extracted by UIMA Tokens Regex. TermSuite copes with this issue by pre-indexing each term candidate with all its pairs of single-word lemmas. For example, the term of length 3 offshore wind turbine has three in- dexing keys: (offshore, wind), (offshore, turbine), and (turbine, wind). The group- ing engine operates over all terms sharing the same indexing key, for all indexing keys. Therefore, the <ref type="table">MWT Variants  en 43  41  fr  35  37  de 20  30  es 62  40  ru 18  16   Table 1</ref>: Numbers of rules provided in Term- Suite O(n 2 ) complexity applies to small subsets of term candidates, and the weight of variant grouping in the overall terminology extraction process is quite reasonable (see Section 7).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Language grammars</head><p>We define MWT spotting rules and variant group- ing rules for the five languages supported by TermSuite: Fr, En, Es, De, and Ru. <ref type="table">Table 1</ref> shows the number of rules by languages for MWT spotting and for term variant grouping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Ranking by termhood</head><p>Term candidates are ranked according to their ter- mhood that is measured with weirdness ratio (WR). WR is the quotient of the relative frequency in both the domain specific corpus C and a general lan- guage corpus G.</p><formula xml:id="formula_1">W R(t, C) = f norm (t, C) f norm (t, G) (1)</formula><p>Where f norm stands for the normalized fre- quency of a term in a given corpus, ie. the average number of its occurrences every 1000 words, and G is a general language corpus.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">General language corpus</head><p>The general language corpora used for computing WR are part of the compilation of newspapers pro- vided by <ref type="bibr">CLEF 2004</ref><ref type="bibr" target="#b9">(Jones et al., 2005</ref>). These corpora cover numerous and miscellaneous topics, which are useful to obtain a corpus representative of the general language. The corpora of the gen- eral language that we use to compute the frequen- cies of term candidates are:  <ref type="figure" target="#fig_4">Figure 1</ref> gives WR distribution on the English part of the domain-specific monolingual comparable corpora for Wind Energy 4 <ref type="bibr">[EOL]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">WR behaviour</head><p>[EOL] is avail- able for seven languages and has a minimum size of 330K words by language. The x-axis of <ref type="figure" target="#fig_4">Fig- ure 1</ref> is set to WR base-10 logarithm, hence a value of 2 means that the term candidate is a 100 times more frequent in the specific corpus C than in G. We distinguish two sets of terms on <ref type="figure" target="#fig_4">Figure 1</ref>. The first one, starting around 0 until log(wr) 2, contains the terms that are not domain specific since they occur in both the specialised and the general language corpora. The second set, from the peak at log(wr) 2 to the upper bound, con- tains both the terms that appear much more fre- quently in C than in G and the terms that never occur in G. Actually, the first peak at log(wr) 2 refers to terms that occur once in C and never in G, the second lower peak refers to terms that occur twice in C and never in G, and so on.</p><p>We did not provide the distributions for other <ref type="bibr">[EOL]</ref> languages nor for other corpora, because their WR distributions are similar. For all config- urations, the first peak always appears at WR 2 and the upper bound at WR 5. As a result of the analysis of WR distribution, we set 2 as default value of log(wr) threshold for accepting candi- dates as terms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Performances</head><p>TermSuite operates on English <ref type="bibr">[EOL]</ref> in 11 seconds with the technical configuration: Ubuntu 14.04, 16Go RAM, Intel(R) Core(TM) i7-4800MQ (4x2,2.7Ghz). We detail the execution times of each main component with the use of two part-of-speech taggers TreeTagger 5 (TT) and Mate 6 : Scalability Time complexity is linear. The pro- cessing of Agencia EFE corpus (cf. Section 6.1), the biggest tested so far (171 million words), takes 101 minutes to process. This performance proves a very satisfactory vertical scalability in the con- text of smaller domain-specific corpora. No kind of parallelism has been implemented so far, not even Java multi-threading, which is the best oppor- tunity of optimization if an improvement of perfor- mances is required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Release</head><p>TermSuite is a Java (7+) program. It can be used in three ways: the Java API, the command line API, or the graphical user interface as shown on <ref type="figure" target="#fig_5">Figure 2</ref>. Its only third-party dependency is TreeTagger, which needs to be installed sep- arately and referenced by TermSuite configura- tion.</p><p>TermSuite is under licence Apache 2.0. The source code and all its components and linguis- tic resources are released on Github 7 . The lat- est released versions, currently 2.1, are available on Maven Central 8 . All links, documenta- tion, resources, and guides about TermSuite are available on its official website: </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Matcher predefinition For the sake of both readability and reusability, UIMA Tokens Regex allows the user to predefine matchers. Thus, Rule an can be expressed concisely as A+ N using the matchers N and A: matcher N: [category=="noun"]; matcher Vpp: [V &amp; mood=="participle" &amp; tense=="past"]; matcher A: [(Vpp | category=="adjective") &amp; lemma!="same" &amp; lemma!="other"]; matcher C: /ˆ(and|or)$/; matcher D: [category=="determiner" &amp; subCategory != "possessive"]; matcher P: [category=="adposition" &amp; subCategory=="preposition"]; term "an": A+ N ; term "npn": N P D? N ; term "acan": ˜D A C A N ;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Distribution of WR base-10 logarithm over all terms extracted by TermSuite on English [EOL].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: TermSuite graphical user interface</figDesc></figure>

			<note place="foot" n="1"> http://termostat.ling.umontreal.ca/</note>

			<note place="foot" n="2"> http://github.com/JuleStar/ uima-tokens-regex/ define rules over a sequence of UIMA annotations, ie. over tokens of the corpus, each rule being in the form of a regular expression. Compared to RUTA (Kluegl et al., 2016), UIMA Tokens Regex operates only on annotations that appear sequentially, which is the case for word annotations. The occurrence recognition engine has been thus implemented as a finite-state machine with linear complexity.</note>

			<note place="foot" n="3"> http://antlr.org/</note>

			<note place="foot" n="4"> http://www.lina.univ-nantes.fr/taln/ maven/wind-energy.tgz</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>TermSuite development is supported by IS-TEX, French Excellence Initiative of Scientific</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Yaml ain&apos;t markup language (yaml TM ) version 1.1. yaml. org</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oren</forename><surname>Ben-Kiki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Clark</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Ingerson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
<note type="report_type">Tech. Rep</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic term detection: A review of current systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Teresa</forename><surname>Cabré</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rosa</forename><forename type="middle">Estopà</forename><surname>Bagot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jordi Vivaldi</forename><surname>Platresi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Recent Advances in Computational Terminology</title>
		<editor>D. Bourigault, C. Jacquemin, and M.-C. L&apos;Homme</editor>
		<imprint>
			<publisher>John Benjamins</publisher>
			<date type="published" when="2001" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="53" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">TokensRegex: Defining cascaded regular expressions over tokens</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Angel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Manning</surname></persName>
		</author>
		<idno>CSTR 2014-02</idno>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Stanford University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Béatrice</forename><surname>Daille</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helena</forename><surname>Blancafort</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Knowledge-poor and knowledge-rich approaches for multilingual terminology extraction</title>
	</analytic>
	<monogr>
		<title level="m">Proceedings, 13th International Conference on Intelligent Text Processing and Computational Linguistics (CICLing)</title>
		<meeting>13th International Conference on Intelligent Text Processing and Computational Linguistics (CICLing)<address><addrLine>Samos, Greece</addrLine></address></meeting>
		<imprint>
			<biblScope unit="page">14</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Qualitative terminology extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Béatrice Daille</surname></persName>
		</author>
		<editor>D. Bourigault, C. Jacquemin, and M.-C</editor>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
			</analytic>
	<monogr>
		<title level="m">Recent Advances in Computational Terminology</title>
		<imprint>
			<publisher>John Benjamins</publisher>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="149" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">UIMA: an architectural approach to unstructured information processing in the corporate research environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Ferrucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Lally</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Natural Language Engineering</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="327" to="348" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Spotting and Discovering Terms through Natural Language Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Jacquemin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Revised Selected Papers, chapter Dublin City University at CLEF 2004: Experiments in Monolingual, Bilingual and Multilingual Retrieval</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Gareth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anna</forename><surname>Judge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Khasin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Speech and Images: 5th Workshop of the CrossLanguage Evaluation Forum</title>
		<meeting><address><addrLine>Bath, UK; Berlin Heidelberg; Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004-09-15" />
			<biblScope unit="page" from="207" to="220" />
		</imprint>
	</monogr>
	<note>Multilingual Information Access for Text</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Methods of automatic term recognition: a review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyo</forename><surname>Kageura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bin</forename><surname>Umino</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Terminology</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="259" to="289" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">UIMA ruta: Rapid development of rule-based information extraction applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Kluegl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Toepfer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip-Daniel</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Fette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Puppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Natural Language Engineering</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="40" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Splitting of Compound Terms in non-Prototypical Compounding Languages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Loginova</forename><surname>Elizaveta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Béatrice</forename><surname>Clouet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Daille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Computational Approaches to Compound Analysis</title>
		<meeting><address><addrLine>Dublin, Ireland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-08" />
			<biblScope unit="page" from="11" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Terminology extraction: An analysis of linguistic and statistical approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maria</forename><forename type="middle">Teresa</forename><surname>Pazienza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Pennacchiotti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabio</forename><forename type="middle">Massimo</forename><surname>Zanzotto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the NEMIS 2004 Final Conference</title>
		<editor>S. Sirmakessis</editor>
		<meeting>the NEMIS 2004 Final Conference<address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">185</biblScope>
			<biblScope unit="page" from="225" to="279" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">TTC TermSuiteA UIMA Application for Multilingual Terminology Extraction from Comparable Corpora</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rocheteau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Daille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Joint Conference on Natural Language Processing (IJCNLP 2011, Thailand, November. Asian Federation of ACL</title>
		<meeting>the 5th International Joint Conference on Natural Language Processing (IJCNLP 2011, Thailand, November. Asian Federation of ACL</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
