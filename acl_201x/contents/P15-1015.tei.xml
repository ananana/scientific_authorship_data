<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T10:52+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Learning Dynamic Feature Selection for Fast Sequential Prediction</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>July 26-31, 2015. 2015</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emma</forename><surname>Strubell</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Information and Computer Sciences</orgName>
								<orgName type="institution">University of Massachusetts Amherst Amherst</orgName>
								<address>
									<postCode>01003</postCode>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luke</forename><surname>Vilnis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Information and Computer Sciences</orgName>
								<orgName type="institution">University of Massachusetts Amherst Amherst</orgName>
								<address>
									<postCode>01003</postCode>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kate</forename><surname>Silverstein</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Information and Computer Sciences</orgName>
								<orgName type="institution">University of Massachusetts Amherst Amherst</orgName>
								<address>
									<postCode>01003</postCode>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Mccallum</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Information and Computer Sciences</orgName>
								<orgName type="institution">University of Massachusetts Amherst Amherst</orgName>
								<address>
									<postCode>01003</postCode>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Learning Dynamic Feature Selection for Fast Sequential Prediction</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing</title>
						<meeting>the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing <address><addrLine>Beijing, China</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="146" to="155"/>
							<date type="published">July 26-31, 2015. 2015</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present paired learning and inference algorithms for significantly reducing computation and increasing speed of the vector dot products in the classifiers that are at the heart of many NLP components. This is accomplished by partitioning the features into a sequence of templates which are ordered such that high confidence can often be reached using only a small fraction of all features. Parameter estimation is arranged to maximize accuracy and early confidence in this sequence. Our approach is simpler and better suited to NLP than other related cascade methods. We present experiments in left-to-right part-of-speech tagging, named entity recognition, and transition-based dependency parsing. On the typical benchmarking datasets we can preserve POS tagging accuracy above 97% and parsing LAS above 88.5% both with over a five-fold reduction in run-time, and NER F1 above 88 with more than 2x increase in speed.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Many NLP tasks such as part-of-speech tagging, parsing and named entity recognition have become sufficiently accurate that they are no longer solely an object of research, but are also widely deployed in production systems. These systems can be run on billions of documents, making the efficiency of inference a significant concern-impacting not only wall-clock running time but also computer hardware budgets and the carbon footprint of data centers.</p><p>This paper describes a paired learning and infer- ence approach for significantly reducing computa- tion and increasing speed while preserving accu- racy in the linear classifiers typically used in many NLP tasks. The heart of the prediction computa- tion in these models is a dot-product between a dense parameter vector and a sparse feature vec- tor. The bottleneck in these models is then often a combination of feature extraction and numeri- cal operations, each of which scale linearly in the size of the feature vector. Feature extraction can be even more expensive than the dot products, in- volving, for example, walking sub-graphs, lexicon lookup, string concatenation and string hashing. We note, however, that in many cases not all of these features are necessary for accurate predic- tion. For example, in part-of-speech tagging if we see the word "the," there is no need to perform a large dot product or many string operations; we can accurately label the word a DETERMINER us- ing the word identity feature alone. In other cases two features are sufficient: when we see the word "hits" preceded by a CARDINAL (e.g. "two hits") we can be confident that it is a NOUN.</p><p>We present a simple yet novel approach to im- prove processing speed by dynamically determin- ing on a per-instance basis how many features are necessary for a high-confidence prediction. Our features are divided into a set of feature templates, such as current-token or previous-tag in the case of POS tagging. At training time, we determine an ordering on the templates such that we can approx- imate model scores at test time by incrementally calculating the dot product in template ordering. We then use a running confidence estimate for the label prediction to determine how many terms of the sum to compute for a given instance, and pre- dict once confidence reaches a certain threshold.</p><p>In similar work, cascades of increasingly com- plex and high-recall models have been used for both structured and unstructured prediction. <ref type="bibr" target="#b26">Viola and Jones (2001)</ref> use a cascade of boosted mod- els to perform face detection. <ref type="bibr" target="#b27">Weiss and Taskar (2010)</ref> add increasingly higher-order dependen- cies to a graphical model while filtering the out-put domain to maintain tractable inference. While most traditional cascades pass instances down to layers with increasingly higher recall, we use a single model and accumulate the scores from each additional template until a label is predicted with sufficient confidence, in a stagewise approxima- tion of the full model score. Our technique applies to any linear classifier-based model over feature templates without changing the model structure or decreasing prediction speed.</p><p>Most similarly to our work, <ref type="bibr" target="#b28">Weiss and Taskar (2013)</ref> improve performance for several structured vision tasks by dynamically selecting features at runtime. However, they use a reinforcement learn- ing approach whose computational tradeoffs are better suited to vision problems with expensive features. Obtaining a speedup on tasks with com- paratively cheap features, such as part-of-speech tagging or transition-based parsing, requires an approach with less overhead. In fact, the most at- tractive aspect of our approach is that it speeds up methods that are already among the fastest in NLP.</p><p>We apply our method to left-to-right part-of- speech tagging in which we achieve accuracy above 97% on the Penn Treebank WSJ corpus while running more than five times faster than our 97.2% baseline. We also achieve a five-fold in- crease in transition-based dependency parsing on the WSJ corpus while achieving an LAS just 1.5% lower than our 90.3% baseline. Named entity recognition also shows significant speed increases. We further demonstrate that our method can be tuned for 2.5 3.5x multiplicative speedups with nearly no loss in accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Classification and Structured Prediction</head><p>Our algorithm speeds up prediction for multiclass classification problems where the label set can be tractably enumerated and scored, and the per-class scores of input features decompose as a sum over multiple feature templates. Frequently, classifica- tion problems in NLP are solved through the use of linear classifiers, which compute scores for input- label pairs using a dot product. These meet our ad- ditive scoring criteria, and our acceleration meth- ods are directly applicable. However, in this work we are interested in speeding up structured prediction problems, specifically part-of-speech (POS) tagging and de- pendency parsing. We apply our classification algorithms to these problems by reducing them to sequential prediction <ref type="bibr" target="#b4">(Daumé III et al., 2009)</ref>. For POS tagging, we describe a sentence's part of speech annotation by the left-to-right sequence of tagging decisions for individual tokens <ref type="bibr" target="#b8">(Giménez and M` arquez, 2004</ref>). Similarly, we implement our parser with a classifier that generates a sequence of shift-reduce parsing transitions <ref type="bibr" target="#b18">(Nivre, 2009)</ref>.</p><p>The use of sequential prediction to solve these problems and others has a long history in prac- tice as well as theory. Searn <ref type="bibr" target="#b4">(Daumé III et al., 2009</ref>) and DAgger (Ross et al., 2011) are two pop- ular principled frameworks for reducing sequen- tial prediction to classification by learning a clas- sifier on additional synthetic training data. How- ever, as we do in our experiments, practitioners of- ten see good results by training on the gold stan- dard labels with an off-the-shelf classification al- gorithm, as though classifying IID data <ref type="bibr" target="#b0">(Bengtson and Roth, 2008;</ref><ref type="bibr" target="#b3">Choi and Palmer, 2012)</ref>.</p><p>Classifier-based approaches to structured pre- diction are faster than dynamic programming since they consider only a subset of candidate out- put structures in a greedy manner. For exam- ple, the Stanford CoreNLP classifier-based part- of-speech tagger provides a 6.5x speed advantage over their dynamic programming-based model, with little reduction in accuracy. Because our methods are designed for the greedy sequential prediction regime, we can provide further speed increases to the fastest inference methods in NLP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Linear models</head><p>Our base classifier for sequential prediction tasks will be a linear model. Given an input x 2 X , a set of labels Y, a feature map (x, y), and a weight vector w, a linear model predicts the highest- scoring label</p><formula xml:id="formula_0">y ⇤ = arg max y2Y w · (x, y).<label>(1)</label></formula><p>The parameter w is usually learned by minimizing a regularized (R) sum of loss functions (`) over the training examples indexed by i</p><formula xml:id="formula_1">w ⇤ = arg min w X i `(x i , y i , w) + R(w).</formula><p>In this paper, we partition the features into a set of feature templates, so that the weights, feature function, and dot product factor as</p><formula xml:id="formula_2">w · (x, y) = X j w j · j (x, y)<label>(2)</label></formula><p>for some set of feature templates { j (x, y)}.</p><p>Our goal is to approximate the dot products in (1) sufficiently for purposes of prediction, while using as few terms of the sum in (2) as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Method</head><p>We accomplish this goal by developing paired learning and inference procedures for feature- templated classifiers that optimize both accuracy and inference speed, using a process of dynamic feature selection. Since many decisions are easy to make in the presence of strongly predictive fea- tures, we would like our model to use fewer tem- plates when it is more confident. For a fixed, learned ordering of feature templates, we build up a vector of class scores incrementally over each prefix of the sequence of templates, which we call the prefix scores. Once we reach a stopping crite- rion based on class confidence (margin), we stop computing prefix scores, and predict the current highest scoring class. Our aim is to train each pre- fix to be as good a classifier as possible without the following templates, minimizing the number of templates needed for accurate predictions.</p><p>Given this method for performing fast inference on an ordered set of feature templates, it remains to choose the ordering. In Section 4.5, we de- velop several methods for picking template order- ings, based on ideas from group sparsity <ref type="bibr" target="#b31">(Yuan and Lin, 2006;</ref><ref type="bibr" target="#b22">Swirszcz et al., 2009)</ref>, and other tech- niques for feature subset-selection <ref type="bibr" target="#b14">(Kohavi and John, 1997</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Definitions</head><p>Given a model that computes scores additively over template-specific scoring functions as in <ref type="formula" target="#formula_2">(2)</ref>, parameters w, and an observation x 2 X, we can define the i'th prefix score for label y 2 Y as:</p><formula xml:id="formula_3">P i,y (x, w) = i X j=1 w j · j (x, y),</formula><p>or P i,y when the choice of observations and weights is clear from context. Abusing notation we also refer to the vector containing all i'th prefix scores for observation x associated to each label in Y as P i (x, w), or P i when this is unambiguous.</p><p>Given a parameter m &gt; 0, called the margin, we define a function h on prefix scores:</p><formula xml:id="formula_4">h(P i , y) = max{0, max y 0 6 =y P i,y 0 P i,y + m} Algorithm 1 Inference Input: template parameters {w i } k i=1</formula><p>, margin m and optional (for train time) true label y</p><formula xml:id="formula_5">Initialize: i = 1 while l &gt; 0 ^ i  k do l = max y 0 h(P i , y 0 ) (test) or h(P i , y) (train) i i + 1 end while return {P j } i j=1 (train) or max y 0 P i,y 0 (test) Algorithm 2 Parameter Learning Input: examples {(x i , y i )} N i , margin m Initialize: parameters w 0 = 0, i = 1 while i  N do prefixes Infer(x i , y i , w i , m) g i ComputeGradient(prefixes) w i+1</formula><p>UpdateParameters(w i , g i ) i</p><p>i + 1 end while return w N This is the familiar structured hinge loss func- tion as in structured support vector machines ( <ref type="bibr" target="#b25">Tsochantaridis et al., 2004</ref>), which has a mini- mum at 0 if and only if class y is ranked ahead of all other classes by at least m.</p><p>Using this notation, the condition that some la- bel y be ranked first by a margin can be writ- ten as h(P i , y) = 0, and the condition that any class be ranked first by a margin can be written as max y 0 h(P i , y 0 ) = 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Inference</head><p>As described in Algorithm 1, at test time we com- pute prefixes until some label is ranked ahead of all other labels with a margin m, then predict with that label. At train time, we predict until the cor- rect label is ranked ahead with margin m, and re- turn the whole set of prefixes for use by the learn- ing algorithm. If no prefix scores have a margin, then we predict with the final prefix score involv- ing all the feature templates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Learning</head><p>We split learning into two subproblems: first, given an ordered sequence of feature templates and our inference procedure, we wish to learn pa- rameters that optimize accuracy while using as few of those templates as possible. Second, given a method for training feature templated classifiers, we want to learn an ordering of templates that op- timizes accuracy.</p><p>We wish to optimize several different objec- tives during learning: template parameters should have strong predictive power on their own, but also work well when combined with the scores from later templates. Additionally, we want to encour- age well-calibrated confidence scores that allow us to stop prediction early without significant reduc- tion in generalization ability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Learning the parameters</head><p>To learn parameters that encourage the use of few feature templates, we look at the model as out- putting not a single prediction but a sequence of prefix predictions {P i }. For each training ex- ample, each feature template receives a number of hinge-loss gradients equal to its distance from the index where the margin requirement is finally reached. This is equivalent to treating each prefix as its own model for which we have a hinge loss function, and learning all models simultaneously. Our high-level approach is described in Algorithm 2.</p><p>Concretely, for k feature templates we opti- mize the following structured max-margin objec- tive (with the dependence of P 's on w written ex- plicitly where helpful):</p><formula xml:id="formula_6">w ⇤ = arg min w X (x,y) `(x, y, w) `(x, y, w) = i ⇤ y X i=1 h(P i (x, w), y) i ⇤ y = min i2{1..k} i s.t. h(P i , y) = 0</formula><p>The per-example gradient of this objective for weights w j corresponding to feature template j then corresponds to</p><formula xml:id="formula_7">@` @w j = i ⇤ y X i=j j (x, y loss (P i , y)) j (x, y).</formula><p>where we define y loss (P i , y) = arg max</p><formula xml:id="formula_8">y 0 P i,y 0 m · I(y 0 = y),</formula><p>where I is an indicator function of the label y, used to define loss-augmented inference. We add an`2an`an`2 regularization term to the objec- tive, and tune the margin m and the regularization strength to tradeoff between speed and accuracy. In our experiments, we used a development set to choose a regularizer and margin that reduced test- time speed as much as possible without decreasing accuracy. We then varied the margin for that same model at test time to achieve larger speed gains at the cost of accuracy. In all experiments, the mar- gin with which the model was trained corresponds to the largest margin reported, i.e. that with the highest accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Learning the template ordering</head><p>We examine three approaches to learning the tem- plate ordering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1">Group Lasso and Group Orthogonal Matching Pursuit</head><p>The Group Lasso regularizer ( <ref type="bibr" target="#b31">Yuan and Lin, 2006</ref>) penalizes the sum of`2of`of`2 -norms of weights of fea- ture templates (different from what is commonly called "` 2 " regularization, penalizing squared`2squared`squared`2 norms),</p><formula xml:id="formula_9">P i c i kw i k 2 ,</formula><p>where c i is a weight for each template. This regularizer encourages entire groups of weights to be set to 0, whose templates can then be discarded from the model. By vary- ing the strength of the regularizer, we can learn an ordering of the importance of each template for a given model. The included groups for a given reg- ularization strength are nearly always subsets of one another (technical conditions for this to be true are given in <ref type="bibr" target="#b10">Hastie et al. (2007)</ref>). The sequence of solutions for varied regularization strength is called the regularization path, and by slight abuse of terminology we use this to refer to the induced template ordering.</p><p>An alternative and related approach to learn- ing template orderings is based on the Group Or- thogonal Matching Pursuit (GOMP) algorithm for generalized linear models ( <ref type="bibr" target="#b22">Swirszcz et al., 2009;</ref><ref type="bibr" target="#b15">Lozano et al., 2011</ref>), with a few modifications for the setting of high-dimensional, sparse NLP data (described in Appendix B). Orthogonal matching pursuit algorithms are a set of stagewise feature selection techniques similar to forward stagewise regression ( <ref type="bibr" target="#b10">Hastie et al., 2007</ref>) and LARS ( <ref type="bibr" target="#b7">Efron et al., 2004</ref>). At each stage, GOMP effectively uses each feature template to perform a linear re- gression to fit the gradient of the loss function. This attempts to find the correlation of each fea- ture subset with the residual of the model. It then adds the feature template that best fits this gradi- ent, and retrains the model. The main weakness of this method is that it fits the gradient of the training error which can rapidly overfit for sparse, high- dimensional data. Ultimately, we would prefer to use a development set for feature selection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2">Wrapper Method</head><p>The wrapper method <ref type="bibr" target="#b14">(Kohavi and John, 1997</ref>) is a meta-algorithm for feature selection, usually based on a validation set. We employ it in a stage- wise approach to learning a sequence of templates. Given an ordering of the initial sub-sequence and a learning procedure, we add each remaining tem- plate to our ordering and estimate parameters, se- lecting as the next template the one that gives the highest increase in development set performance. We begin the procedure with no templates, and re- peat the procedure until we have a total ordering over the set of feature templates. When learning the ordering we use the same hyperparameters as will be used during final training.</p><p>While simpler than the Lasso and Matching Pursuit approaches, we empirically found this ap- proach to outperform the others, due to the neces- sity of using a development set to select features for our high-dimensional application areas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related Work</head><p>Our work is primarily inspired by previous re- search on cascades of classifiers; however, it dif- fers significantly by approximating the score of a single linear model-scoring as few of its features as possible to obtain sufficient confidence.</p><p>We pose and address the question of whether a single, interacting set of parameters can be learned such that they efficiently both (1) provide high ac- curacy and (2) good confidence estimates through- out their use in the lengthening prefixes of the feature template sequence. (These two require- ments are both incorporated into our novel param- eter estimation algorithm.) In contrast, other work ( <ref type="bibr" target="#b28">Weiss and Taskar, 2013;</ref><ref type="bibr" target="#b12">He et al., 2013</ref>) learns a separate classifier to determine when to add fea- tures. Such heavier-weight approaches are unsuit- able for our setting, where the core classifier's fea- tures and scoring are already so cheap that adding complex decision-making would cause too much computational overhead.</p><p>Other previous work on cascades uses a se- ries of increasingly complex models, such as the Viola-Jones face detection cascade of classifiers <ref type="bibr">(2001)</ref>, which applies boosted trees trained on subsets of features in increasing order of complex- ity as needed, aiming to reject many sub-image windows early in processing. We allow scores from each layer to directly affect the final predic- tion, avoiding duplicate incorporation of evidence.</p><p>Our work is also related to the field of learn- ing and inference under test-time budget con- straints ( <ref type="bibr" target="#b9">Grubb and Bagnell, 2012;</ref><ref type="bibr" target="#b24">Trapeznikov and Saligrama, 2013)</ref>. However, common ap- proaches to this problem also employ auxiliary models to rank which feature to add next, and are generally suited for problems where features are expensive to compute (e.g vision) and the ex- tra computation of an auxiliary pruning-decision model is offset by substantial reduction in fea- ture computations <ref type="bibr" target="#b28">(Weiss and Taskar, 2013)</ref>. Our method uses confidence scores directly from the model, and so requires no additional computation, making it suitable for speeding up classifier-based NLP methods that are already very fast and have relatively cheap features.</p><p>Some cascaded approaches strive at each stage to prune the number of possible output structures under consideration, whereas in our case we fo- cus on pruning the input features. For example, <ref type="bibr" target="#b30">Xu et al. (2013)</ref> learn a tree of classifiers that sub- divides the set of classes to minimize average test- time cost. <ref type="bibr" target="#b1">Chen et al. (2012)</ref> similarly use a linear cascade instead of a tree. <ref type="bibr" target="#b27">Weiss and Taskar (2010)</ref> prune output labels in the context of structured prediction through a cascade of increasingly com- plex models, and <ref type="bibr" target="#b21">Rush and Petrov (2012)</ref> success- fully apply these structured prediction cascades to the task of graph-based dependency parsing.</p><p>In the context of NLP, He et al. (2013) describe a method for dynamic feature template selection at test time in graph-based dependency parsing. Their technique is particular to the parsing task- making a binary decision about whether to lock in edges in the dependency graph at each stage, and enforcing parsing-specific, hard-coded constraints on valid subsequent edges. Furthermore, as de- scribed above, they employ an auxiliary model to select features. <ref type="bibr" target="#b11">He and Eisner (2012)</ref> share our goal to speed test time prediction by dynamically selecting fea- tures, but they also learn an additional model on top of a fixed base model, rather than using the training objective of the model itself.</p><p>While our comparisons above focus on other methods of dynamic feature selection, there also exists related work in the field of general (static) feature selection. The most relevant results come from the applications of group sparsity, such as the work of <ref type="bibr" target="#b17">Martins et al. (2011)</ref> in Group Lasso for NLP problems. The Group Lasso regularizer <ref type="bibr" target="#b31">(Yuan and Lin, 2006</ref>) sparsifies groups of feature weights (e.g. feature templates), and has been used to speed up test-time prediction by remov- ing entire templates from the model. The key dif- ference between this work and ours is that we se- lect our templates based on the test-time difficulty of the inference problem, while the Group Lasso must do so at train time. In Appendix A, we com- pare against Group Lasso and show improvements in accuracy and speed.</p><p>Note that non-grouped approaches to selecting sparse feature subsets, such as boosting and`1and`and`1 reg- ularization, do not achieve our goal of fast test- time prediction in NLP models, as they would not zero-out entire templates, and still require the computation of a feature for every template for ev- ery test instance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Experimental Results</head><p>We present experiments on three NLP tasks for which greedy sequence labeling has been a successful solution: part-of-speech tagging, transition-based dependency parsing and named entity recognition. In all cases our method achieves multiplicative speedups at test time with little loss in accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Part-of-speech tagging</head><p>We conduct our experiments on classifier-based greedy part-of-speech tagging. Our baseline tag- ger uses the same features described in <ref type="bibr" target="#b3">Choi and Palmer (2012)</ref>. We evaluate our models on the Penn Treebank WSJ corpus <ref type="bibr" target="#b16">(Marcus et al., 1993)</ref>, employing the typical split of sections used for part-of-speech tagging: 0-18 train, 19-21 devel- opment, 22-24 test. The parameters of our mod- els are learned using AdaGrad (Duchi et al., 2011) with`2with`with`2 regularization via regularized dual averag- ing <ref type="bibr" target="#b29">(Xiao, 2009)</ref>, and we used random search on the development set to select hyperparameters.</p><p>This baseline model (baseline) tags at a rate of approximately 23,000 tokens per second on a 2010 2.1GHz AMD Opteron machine with ac- curacy comparable to similar taggers ( <ref type="bibr" target="#b8">Giménez and M` arquez, 2004;</ref><ref type="bibr" target="#b3">Choi and Palmer, 2012;</ref><ref type="bibr" target="#b23">Toutanova et al., 2003</ref>  <ref type="table">Table 1</ref>: Comparison of our models using differ- ent margins m, with speeds measured relative to the baseline. We train a model as accurate as the baseline while tagging 3.4x tokens/sec, and in an- other model maintain &gt; 97% accuracy while tag- ging 5.2x, and &gt; 96% accuracy with a speedup of 10.3x. the greedy Stanford CoreNLP left3words part-of- speech tagger also tags at approximately 23,000 tokens per second. Significantly higher absolute speeds for all methods can be attained on more modern machines.</p><note type="other">7.02x Fixed 96.88 88.81 10 3.82x Dynamic/15 96.09 83.12 1.92 10.36x Dynamic/35 97.02 88.26 4.33 5.22x Dynamic/45 97.16 88.84 5.87 3.97x Dynamic/50 97.21 88.95 6.89 3.41x</note><p>We include additional baselines that divide the features into templates, but train the templates' pa- rameters more simply than our algorithm. The stagewise baseline learns the model parameters for each of the templates in order, starting with only one template-once each template has been trained for a fixed number of iterations, that tem- plate's parameters are fixed and we add the next one. We also create a separately-trained baseline model for each fixed prefix of the feature templates (fixed). This shows that our speedups are not sim- ply due to superfluous features in the later tem- plates.</p><p>Our main results are shown in <ref type="table">Table 1</ref>. We in- crease the speed of our baseline POS tagger by a factor of 5.2x without falling below 97% test ac- curacy. By tuning our training method to more aggressively prune templates, we achieve speed- ups of over 10x while providing accuracy higher than 96%. It is worth noting that the results for our method (dynamic) are all obtained from a single trained model (with hyperparameters opti- mized for m = 50, which we observed gave a good speedup with nearly no lossin accuracy on the development set), the only difference being <ref type="figure">Figure 1</ref>: Left-hand plot depicts test accuracy as a function of the average number of templates used to predict. Right-hand plot shows speedup as a function of accuracy. Our model consistently achieves higher accuracy while using fewer templates resulting in the best ratio of speed to accuracy.</p><p>that we varied the margin at test time. Superior results for m 6 = 50 could likely be obtained by op- timizing hyperparameters for the desired margin.</p><p>Results show our method (dynamic) learns to dynamically select the number of templates, often using only a small fraction. The majority of test tokens can be tagged using only the first few tem- plates: just over 40% use one template, and 75% require at most four templates, while maintaining 97.17% accuracy. On average 6.71 out of 46 tem- plates are used, though a small set of complicated instances never surpass the margin and use all 46 templates. The right hand plot of <ref type="figure">Figure 1</ref> shows speedup vs. accuracy for various settings of the confidence margin m.</p><p>The left plot in <ref type="figure">Figure 1</ref> depicts accuracy as a function of the number of templates used at test time. We present results for both varying the number of templates directly (dashed) and margin (solid). The baseline model trained on all tem- plates performs very poorly when using margin- based inference, since its training objective does not learn to predict with only prefixes. When pre- dicting using a fixed subset of templates, we use a different baseline model for each one of the 46 to- tal template prefixes, learned with only those fea- tures; we then compare the test accuracy of our dynamic model using template prefix i to the base- line model trained on the fixed prefix i. Our model performs just as well as these separately trained models, demonstrating that our objective learns weights that allow each prefix to act as its own high-quality classifier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Learning the template ordering</head><p>As described in Section 4.5, we experimented on part-of-speech tagging with three different algo- rithms for learning an ordering of feature tem- plates: Group Lasso, Group Orthogonal Matching Pursuit (GOMP), and the wrapper method. For the case of Group Lasso, this corresponds to the experimental setup used when evaluating Group Lasso for NLP in <ref type="bibr" target="#b17">Martins et al. (2011)</ref>. As detailed in the part-of-speech tagging experiments of Ap- pendix A, we found the wrapper method to work best in our dynamic prediction setting. Therefore, we use it in our remaining experiments in pars- ing and named entity recognition. Essentially, the Group Lasso picks small templates too early in the ordering by penalizing template norms, and GOMP picks large templates too early by overfit- ting the train error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Transition-based dependency parsing</head><p>We base our parsing experiments on the greedy, non-projective transition-based dependency parser described in <ref type="bibr" target="#b2">Choi and Palmer (2011)</ref>. Our model uses a total of 60 feature templates based mainly on the word form, POS tag, lemma and assigned head label of current and previous input and stack tokens, and parses about 300 sentences/second on a modest 2.1GHz AMD Opteron machine.</p><p>We train our parser on the English Penn Tree- Bank, learning the parameters using AdaGrad and the parsing split, training on sections 2-21, testing on section 23 and using section 22 for develop- ment and the Stanford dependency framework (de <ref type="figure">Figure 2</ref>: Parsing speedup as a function of accu- racy. Our model achieves the highest accuracy while using the fewest feature templates. <ref type="bibr" target="#b5">Marneffe and Manning, 2008)</ref>. POS tags were au- tomatically generated via 10-way jackknifing us- ing the baseline POS model described in the pre- vious section, trained with AdaGrad using`2using`using`2 reg- ularization, with parameters tuned on the develop- ment set to achieve 97.22 accuracy on WSJ sec- tions 22-24. Lemmas were automatically gener- ated using the ClearNLP morphological analyzer. We measure accuracy using labeled and unlabeled attachment scores excluding punctuation, achiev- ing a labeled score of 90.31 and unlabeled score of 91.83, which are comparable to similar greedy parsers ( <ref type="bibr" target="#b2">Choi and Palmer, 2011;</ref><ref type="bibr" target="#b13">Honnibal and Goldberg, 2013)</ref>.</p><p>Our experimental setup is the same as for part- of-speech tagging. We compare our model (dy- namic) to both a single baseline model trained on all features, and a set of 60 models each trained on a prefix of feature templates. Our experiments vary the margin used during prediction (solid) as well as the number of templates used (dashed).</p><p>As in part-of-speech tagging, we observe sig- nificant test-time speedups when applying our method of dynamic feature selection to depen- dency parsing. With a loss of only 0.04 labeled at- tachment score (LAS), our model produces parses 2.7 times faster than the baseline. As listed in <ref type="table">Ta- ble 2</ref>, with a more aggressive margin our model can parse more than 3 times faster while remain- ing above 90% LAS, and more than 5 times faster while maintaining accuracy above 88.5%.</p><p>In <ref type="figure">Figure 2</ref> we see not only that our dynamic model consistently achieves higher accuracy while  <ref type="table">Table 2</ref>: Comparison of our baseline and tem- plated models using varying margins m and num- bers of templates. using fewer templates, but also that our model (dy- namic, dashed) performs exactly as well as sep- arate models trained on each prefix of templates (baseline, dashed), demonstrating again that our training objective is successful in learning a single model that can predict as well as possible using any prefix of feature templates while successfully selecting which of these prefixes to use on a per- example basis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Named entity recognition</head><p>We implement a greedy left-to-right named entity recognizer based on <ref type="bibr" target="#b19">Ratinov and Roth (2009)</ref> us- ing a total of 46 feature templates, including sur- face features such as lemma and capitalization, gazetteer look-ups, and each token's extended pre- diction history, as described in <ref type="bibr" target="#b19">(Ratinov and Roth, 2009)</ref>. Training, tuning, and evaluation are per- formed on the CoNLL 2003 English data set with the BILOU encoding to denote label spans.</p><p>Our baseline model achieves F1 scores of 88.35 and 93.37 on the test and development sets, re- spectively, and tags at a rate of approximately 5300 tokens per second on the hardware described in the experiments above. We achieve a 2.3x speedup while maintaining F1 score above 88 on the test set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions and Future Work</head><p>By learning to dynamically select the most predic- tive features at test time, our algorithm provides significant speed improvements to classifier-based structured prediction algorithms, which them- selves already comprise the fastest methods in NLP. Further, these speed gains come at very lit-  tle extra implementation cost and can easily be combined with existing state-of-the-art systems. Future work will remove the fixed ordering for feature templates, and dynamically add additional features based on the current scores of different la- bels.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 3 :</head><label>3</label><figDesc></figDesc><table>Comparison of our baseline and tem-
plated NER models using varying margin m and 
number of templates. 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Acknowledgements</head><p>This work was supported in part by the Center for Intelligent Information Retrieval, in part by DARPA under agreement number FA8750-13-2-0020, and in part by NSF grant #CNS-0958392. The U.S. Government is authorized to reproduce and distribute reprint for Governmental purposes notwithstanding any copyright annotation thereon. Any opinions, findings and conclusions or recom-mendations expressed in this material are those of the authors and do not necessarily reflect those of the sponsor.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Understanding the value of features for coreference resolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Bengtson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="294" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Classifier cascade for minimizing feature evaluation cost</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minmin</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">&amp;quot;</forename><surname>Zhixiang &amp;quot;eddie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Weinberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dor</forename><surname>Chappele</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kedem</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Getting the Most out of Transition-based Dependency Parsing. Association for Computational Linguistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jinho</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martha</forename><surname>Palmer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="687" to="692" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fast and robust part-of-speech tagging using dynamic model selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jinho</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martha</forename><surname>Palmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Association for Computational Linguistics</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Search-based structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hal</forename><surname>Daumé</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iii</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Langford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Marcu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="297" to="325" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The stanford typed dependencies representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marie-Catherine</forename><surname>De Marneffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">COLING 2008 Workshop on Crossframework and Cross-domain Parser Evaluation</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptive Subgradient Methods for Online Learning and Stochastic Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Duchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Elad</forename><surname>Hazan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoram</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="2121" to="2159" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Least angle regression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bradley</forename><surname>Efron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trevor</forename><surname>Hastie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iain</forename><surname>Johnstone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Tibshirani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Annals of Statistics</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="407" to="499" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Svmtool: A general pos tagger generator based on support vector machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jesús</forename><surname>Giménez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lluís</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th LREC</title>
		<meeting>the 4th LREC<address><addrLine>Lisbon, Portugal</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">SpeedBoost: Anytime Prediction with Uniform Near-Optimality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Grubb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Andrew</forename><surname>Bagnell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Forward stagewise regression and the monotone lasso</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trevor</forename><surname>Hastie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Tibshirani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guenther</forename><surname>Walther</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronic Journal of Statistics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="29" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Cost-sensitive dynamic feature selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">He</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Eisner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML Workshop on Inferning: Interactions between Inference and Learning</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Dynamic feature selection for dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">He</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hal</forename><surname>Daumé</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iii</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Eisner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">A Non-Monotonic Arc-Eager Transition System for Dependency Parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Honnibal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
			<publisher>CoNLL</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Wrappers for feature subset selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename><surname>Kohavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George H John</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="273" to="324" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Group orthogonal matching pursuit for logistic regression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Aurélie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grzegorz</forename><surname>Lozano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Naoki</forename><surname>Swirszcz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Abe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Artificial Intelligence and Statistics</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="452" to="460" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Building a Large Annotated Corpus of English: The Penn Treebank</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mitchell</forename><forename type="middle">P</forename><surname>Marcus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beatrice</forename><surname>Santorini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mary</forename><forename type="middle">Ann</forename><surname>Marcinkiewicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="313" to="330" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Structured sparsity in structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">André</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noah</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pedro</forename><surname>Aguiar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mário</forename><surname>Figueiredo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1500" to="1511" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Non-projective dependency parsing in expected linear time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP</title>
		<meeting>the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="351" to="359" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Design challenges and misconceptions in named entity recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lev</forename><surname>Ratinov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirteenth Conference on Computational Natural Language Learning</title>
		<meeting>the Thirteenth Conference on Computational Natural Language Learning</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="147" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A reduction of imitation learning and structured prediction to no-regret online learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stéphane</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><forename type="middle">J</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Drew</forename><surname>Bagnell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR Proceedings</title>
		<editor>Geoffrey J. Gordon, David B. Dunson, and Miroslav Dudík</editor>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="627" to="635" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Vine pruning for efficient multi-pass dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexander</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slav</forename><surname>Rush</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Petrov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="498" to="507" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Grouped orthogonal matching pursuit for variable selection and prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grzegorz</forename><surname>Swirszcz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Naoki</forename><surname>Abe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aurelie</forename><forename type="middle">C</forename><surname>Lozano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1150" to="1158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Feature-rich part-ofspeech tagging with a cyclic dependency network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kristina</forename><surname>Toutanova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Christopher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoram</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HLT-NAACL</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Supervised sequential classification under budget constraints</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kirill</forename><surname>Trapeznikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Venkatesh</forename><surname>Saligrama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Support vector machine learning for interdependent and structured output spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ioannis</forename><surname>Tsochantaridis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Hofmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thorsten</forename><surname>Joachims</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yasemin</forename><surname>Altun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-first International Conference on Machine Learning</title>
		<meeting>the Twenty-first International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page">104</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Rapid object detection using a boosted cascade of simple features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Viola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 IEEE Computer Society Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the 2001 IEEE Computer Society Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">511</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Structured prediction cascades</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Taskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Learning adaptive value of information for structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Taskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Dual Averaging Method for Regularized Stochastic Learning and Online Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lin</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Cost-sensitive tree of classifiers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matt</forename><forename type="middle">J</forename><surname>Zhixiang &amp;quot;eddie&amp;quot; Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kusner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minmin</forename><surname>Weinberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Model selection and estimation in regression with grouped variables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yi</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Journal of the Royal Statistical Society: Series B (Statistical Methodology)</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="49" to="67" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
