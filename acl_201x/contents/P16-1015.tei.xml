<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T10:10+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Generalized Transition-based Dependency Parsing via Control Parameters</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>August 7-12, 2016. 2016</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Bohnet</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Google Inc</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Google Inc</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emily</forename><surname>Pitler</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Google Inc</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ji</forename><surname>Ma</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Google Inc</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Generalized Transition-based Dependency Parsing via Control Parameters</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics</title>
						<meeting>the 54th Annual Meeting of the Association for Computational Linguistics <address><addrLine>Berlin, Germany</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="150" to="160"/>
							<date type="published">August 7-12, 2016. 2016</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In this paper, we present a generalized transition-based parsing framework where parsers are instantiated in terms of a set of control parameters that constrain transitions between parser states. This generalization provides a unified framework to describe and compare various transition-based parsing approaches from both a theoretical and empirical perspective. This includes well-known transition systems, but also previously unstudied systems.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Transition-based dependency parsing is perhaps the most successful parsing framework in use to- day <ref type="bibr" target="#b24">(Nivre, 2008)</ref>. This is due to the fact that it can process sentences in linear time <ref type="bibr" target="#b23">(Nivre, 2003)</ref>; is highly accurate ( <ref type="bibr" target="#b34">Zhang and Nivre, 2011;</ref><ref type="bibr" target="#b5">Bohnet and Nivre, 2012;</ref>; and has el- egant mechanisms for parsing non-projective sen- tences <ref type="bibr" target="#b25">(Nivre, 2009)</ref>. As a result, there have been numerous studies into different transition systems, each with varying properties and complexities <ref type="bibr" target="#b23">(Nivre, 2003;</ref><ref type="bibr" target="#b2">Attardi, 2006;</ref><ref type="bibr" target="#b24">Nivre, 2008;</ref><ref type="bibr" target="#b25">Nivre, 2009;</ref><ref type="bibr" target="#b13">Gómez-Rodríguez and Nivre, 2010;</ref><ref type="bibr" target="#b7">Choi and Palmer, 2011;</ref><ref type="bibr" target="#b26">Pitler and McDonald, 2015)</ref>.</p><p>While connections between these transition sys- tems have been noted, there has been little work on developing frameworks that generalize the phe- nomena parsed by these diverse systems. Such a framework would be beneficial for many reasons: It would provide a language from which we can theoretically compare known transition systems; it can give rise to new systems that could have fa- vorable empirical properties; and an implementa- tion of the generalization allows for comprehen- sive empirical studies.</p><p>In this work we provide such a generalized transition-based parsing framework. Our frame- work can be cast as transition-based parsing as it contains both parser states as well as transitions between these states that construct dependency trees. As in traditional transition-based parsing, the state maintains two data structures: a set of un- processed tokens (normally called the buffer); and a set of operative tokens (often called the stack). Key to our generalization is the notion of active tokens, which is the set of tokens in which new arcs can be created and/or removed from consid- eration. A parser instantiation is defined by a set of control parameters, which dictate: the types of transitions that are permitted and their properties; the capacity of the active token set; and the maxi- mum arc distance. We show that a number of different transi- tion systems can be described via this frame- work. Critically the two most common systems are covered -arc-eager and arc-standard <ref type="bibr" target="#b24">(Nivre, 2008)</ref>. But also Attardi's non-projective <ref type="bibr" target="#b2">(Attardi, 2006</ref>), Kuhlmann's hybrid system ( <ref type="bibr" target="#b19">Kuhlmann et al., 2011</ref>), the directed acyclic graph (DAG) parser of <ref type="bibr" target="#b28">Sagae and Tsujii (2008)</ref>, and likely others. More interestingly, the easy-first framework of <ref type="bibr" target="#b12">Goldberg and Elhadad (2010)</ref> can be described as an arc-standard system with an unbounded active token capacity.</p><p>We present a number of experiments with an implementation of our generalized framework. One major advantage of our generalization (and its implementation) is that it allows for easy ex- ploration of novel systems not previously studied. In Section 5 we discuss some possibilities and pro- vide experiments for these in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Transition-based dependency parsing can be char- acterized as any parsing system that maintains a state as well as a finite set of operations that move the system from one state to another <ref type="bibr" target="#b24">(Nivre, 2008)</ref>. In terms of modern statistical models that domi- nate the discourse today, the starting point is likely the work of <ref type="bibr" target="#b18">Kudo and Matsumoto (2000)</ref> and <ref type="bibr" target="#b31">Yamada and Matsumoto (2003)</ref>, who adopted the idea of cascaded chunking from Abney (1991) in a greedy dependency parsing framework.</p><p>From this early work, transition-based pars- ing quickly grew in scope with the formalization of the arc-eager versus arc-standard paradigms <ref type="bibr" target="#b23">(Nivre, 2003;</ref><ref type="bibr" target="#b24">Nivre, 2008)</ref>, the latter largely being based on well-known shift-reduce principles in the phrase-structure literature <ref type="bibr" target="#b27">(Ratnaparkhi, 1999)</ref>. The speed and empirical accuracy of these sys- tems -as evident in the widely used MaltParser software ( <ref type="bibr" target="#b21">Nivre et al., 2006a</ref>) -led to the study of a number of different transition systems.</p><p>Many of these new transition systems attempted to handle phenomena not covered by arc-eager or arc-standard transition systems, which inher- ently could only produce projective dependency trees. The work of <ref type="bibr" target="#b2">Attardi (2006)</ref>, <ref type="bibr" target="#b25">Nivre (2009)</ref>, <ref type="bibr" target="#b13">Gómez-Rodríguez and Nivre (2010)</ref>, <ref type="bibr" target="#b7">Choi and</ref><ref type="bibr" target="#b7">Palmer (2011), and</ref><ref type="bibr" target="#b26">Pitler and</ref><ref type="bibr" target="#b26">McDonald (2015)</ref> derived transition systems that could parse non- projective trees. Each of these systems traded-off complexity for empirical coverage. Additionally, <ref type="bibr" target="#b28">Sagae and Tsujii (2008)</ref> developed transition sys- tems that could parse DAGs by augmentating the arc-standard and the arc-eager system. Bohnet and Nivre (2012) derived a system that could produce both labeled dependency trees as well as part-of- speech tags in a joint transition system. Taking this idea further <ref type="bibr" target="#b16">Hatori et al. (2012)</ref> defined a tran- sition system that performed joint segmentation, tagging and parsing.</p><p>In terms of empirical accuracy, from the early success of Nivre and colleagues <ref type="bibr" target="#b22">(Nivre et al., 2006b;</ref><ref type="bibr" target="#b15">Hall et al., 2007;</ref><ref type="bibr" target="#b24">Nivre, 2008)</ref>, there has been an succession of improvements in training and decoding, including structured training with beam search <ref type="bibr" target="#b32">(Zhang and Clark, 2008;</ref><ref type="bibr" target="#b34">Zhang and Nivre, 2011</ref>), incorporating graph-based rescoring features <ref type="bibr" target="#b4">(Bohnet and Kuhn, 2012)</ref>, the aformen- tioned work on joint parsing and tagging <ref type="bibr" target="#b5">(Bohnet and Nivre, 2012)</ref>, and more recently the adoption of neural networks and feature embeddings <ref type="bibr" target="#b6">(Chen and Manning, 2014;</ref><ref type="bibr" target="#b11">Dyer et al., 2015;</ref>.</p><p>In terms of abstract generalizations of transi- tion systems, the most relevant work is that of <ref type="bibr" target="#b14">Gómez-Rodríguez and Nivre (2013)</ref> -which we abbreviate GR&amp;N13. In that work, a generalized framework is defined by first defining a set of base transitions, and then showing that many transition- based systems can be constructed via composition of these base transitions. Like our framework, this covers common systems such as arc-eager and arc- standard, as well as easy-first parsing. In partic- ular, arc construction in easy-first parsing can be seen as an action composed of a number of shifts, an arc action, and a number of un-shift actions. The primary conceptual difference between that work and the present study is the distinction be- tween complex actions versus control parameters. In terms of theoretical coverage, the frameworks are not equivalent. For instance, our generaliza- tion covers the system of Attardi <ref type="formula">(2006)</ref>, whereas GR&amp;N13 cover transition systems where multiple arcs can be created in tandem. In Section 7 we compare the two generalizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Generalized Transition-based Parsing</head><p>A transition system must define a parser state as well as a set of transitions that move the system from one state to the next. Correct sequences of transitions create valid parse trees. A parser state is typically a tuple of data structures and variables that represent the dependency tree con- structed thus far and, implicitly, possible valid transitions to the next state.</p><p>In order to generalize across the parser states of transition-based parsing systems, we preserve their common parts and make the specific parts configurable. In order to generalize across the transitions, we divide the transitions into their ba- sic operations. Each specific transition is then de- fined by composition of these basic operations. By defining the properties of the data structures and the composition of the basic operations, different transition systems can be defined and configured within one single unified system. As a conse- quence, we obtain a generalized parser that is ca- pable of executing a wide range of different tran- sition systems by setting a number of control pa- rameters without changing the specific implemen- tation of the generalized parser.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Basic Notation</head><p>In the following, we use a directed unlabeled de- pendency tree T = V, A for a sentence x = This is an example with two arcs  </p><formula xml:id="formula_0">w 1 , ..., w n , where V x = {1, ..., n} and V r x = V x ∪ {r}, A x ⊂ V r x × V x .</formula><p>r is a placeholder for the root node and set either to 0 (root to the left of the sentence) or n + 1 (root to the right). The definition is mostly equivalent to that of <ref type="bibr">Kübler et al. (2009)</ref> but deviates in the potential handling of the root on the right ( <ref type="bibr" target="#b3">Ballesteros and Nivre, 2013)</ref>.</p><p>The set of nodes V x index the words of a sen- tence x and V r x includes in addition the artificial root node r. Let A be the arc set, i.e., (i, j) ∈ A iff there is a dependency from i to j. We use as alternative notation (i → j). This is the arc set the algorithm will create.</p><p>For ease of exposition, we will only address un- labeled parsing. However, for our experiments we do implement a labeled parsing variant using the standard convention of composing arc transitions with corresponding arc labels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Generalized Parser State</head><p>Let U be an unordered set of buffered unprocessed tokens. This set is identical to the buffer from transition-based parsing. Following standard no- tation, we will use i|U to indicate that i is the left- most element of the set.</p><p>Let O be an ordered set of operative tokens. Specifically, O is the set of tokens that 1) have been moved out of U , and 2) are not themselves reduced. The set O is similar in nature to the tra- ditional stack of transition-based parsing, but is not restricted to stack operations. As in transition-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Transitions</head><p>"Adds an arc from j to i, both ∈ ACTIVE(O)."</p><formula xml:id="formula_1">← i,j (O, U, A) ⇒ (O, U, A ∪ (j → i)) "Adds an arc from i to j, both ∈ ACTIVE(O)." → i,j (O, U, A) ⇒ (O, U, A ∪ (i → j)) "Removes token i ∈ ACTIVE(O) from O." − i (O...i..., U, A) ⇒ (O, U, A)</formula><p>"Moves the top token from U to the top of O."</p><formula xml:id="formula_2">+ (O, i|U, A) ⇒ (O|i, U, A)</formula><p>Figure 2: Base generalized transitions over parser states.</p><p>based parsing we will use the notation O|i to indi- cate that i is the rightmost element of the set; O[n] is the n-th rightmost element of the set. <ref type="figure" target="#fig_1">Figure 1</ref> shows the set of tokens in O within shaded boxes and U within unshaded boxes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Generalized Transitions</head><p>The above discussion describes what a general- ized transition-based parser state looks like; it does not describe any transitions between these states, which is the core of transition-based parsing. In this section we present a set of basic transitions, which themselves can be composed to make more complex transitions (similar to <ref type="bibr" target="#b14">Gómez-Rodríguez and Nivre (2013)</ref>). Let T = {← i,j , → i,j , − i , +} be the set of ba- sic transitions <ref type="figure" target="#fig_2">(Figure 2</ref>), which have analogues to standard transition-based parsing. These transi- tions come with the standard preconditions, i.e., a root cannot be a modifier; each token can modify at most one word 1 ; a token can only be reduced if it has a head; and a shift can only happen if the un- operative buffer is non-empty. We will often refer to these as LEFT-ARC (← i,j ), RIGHT-ARC (→ i,j ), REDUCE (− i ), and SHIFT (+). We additionally re- fer to LEFT-ARC and RIGHT-ARC together as arc- creation actions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Control Parameters</head><p>Instantiations of a transition system are defined via control parameters. We defined two sets of such parameters. The first, we call global parameters, dictates system wide behaviour. The second, we call transition parameters, dictates a specific be- haviour for each transition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Global Control Parameters</head><p>We have two parameters for the broader behaviour of the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Active token capacity K.</head><p>The active set of tokens ACTIVE(O) that can be op- erated on by the transitions is the set {O[min(|O|, K)], ..., O[1]}. K additionally determines the size of O at the start of pars- ing. E.g., if K = 2, then we populate O with the first two tokens. This is equivalent to making SHIFT deterministic while |O| &lt; K. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Transition Control Paramters</head><p>Let M(T ) be a multiset of transitions, such that if t ∈ M(T ), then t ∈ T . Note that M(T ) is a multiset, and thus can have multiple transitions of the same type. For each t ∈ M(T ), our general- ization requires the following control parameters to be set (default in bold):</p><formula xml:id="formula_3">1. Bottom-up: B ∈ {[t]rue, [f ]alse}.</formula><p>Whether creating an arc also reduces it. Specifically we will have two parameters, B L and B R , which specify whether LEFT/RIGHT-ARC ac- tions are bottom up. We use the notation and say B = true to mean B L = B R = true. For example B L = true indicates that ← i,j is immediately followed by a reduce − i .</p><formula xml:id="formula_4">2. Arc-Shift: S ∈ {[t]rue, [f ]alse}.</formula><p>Whether creating an arc also results in SHIFT. Specif- ically we will have two parameters, S L and S R , which specify whether LEFT/RIGHT- ARC actions are joined with a SHIFT. We use the notation and say S = true to mean S L = S R = true. For example S L = true indicates that ← i,j is immediately followed by +.</p><p>3. Periphery:</p><formula xml:id="formula_5">P ∈ {[l]ef t, [r]ight, na}.</formula><p>If a transition must operate on the left or right pe- riphery of the active token set ACTIVE(O). For arc-creation transitions, this means that at least one of the head or modifier is on the specified periphery. If the value is na, that means that the action is not constrained to be on the periphery. Note, that when K ≤ 2, all arc-creation actions by default are on the pe- riphery.</p><p>Each of these control parameters has a default value, which will be assumed if unspecified. Note that the relevance of these parameters is transition dependent. E.g., a SHIFT requires no such control parameters and a REDUCE needs neither B nor S.</p><p>These control parameters allow limited com- positionality of the basic transitions in <ref type="figure" target="#fig_2">Figure 2</ref>. Unlike <ref type="bibr" target="#b14">Gómez-Rodríguez and Nivre (2013)</ref>, each transition includes at most one SHIFT, at most one REDUCE, and at most one LEFT-ARC or RIGHT- ARC. I.e., the most compositional transition is a LEFT/RIGHT-ARC with a REDUCE and/or a SHIFT. Even with this restriction, all of the transition systems covered by <ref type="bibr" target="#b14">Gómez-Rodríguez and Nivre (2013)</ref> can still be expressed in our generalization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Generalized Transition System</head><p>To summarize, a generalized transition is defined as follows:</p><p>1. A parser state: Γ = O, U, A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">A set of basic transitions:</head><formula xml:id="formula_6">T = {← i,j , → i,j , − i , +}.</formula><p>And each transition system instantiation must fur- ther define:</p><p>1. Values for global control parameters: K and D.</p><p>2. A multiset of valid transitions M(T ), where ∀t ∈ M(T ), then t ∈ T .</p><p>3. For each t ∈ M(T ) values for B, S, and P .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Transition System Instantiations</head><p>The instantiation of the transition system consists of setting the capacity K and distance D as well as the transition control parameters. In order to make the comparison clearer, we will define typical tran- sition systems using the notation of <ref type="bibr" target="#b19">Kuhlmann et al. (2011)</ref>. Here, a parser state is a triple (σ, β, A), where σ|i is a stack with top element i, j|β is a buffer whose next element is j, and A the set of created arcs. To make notation cleaner, we will drop indexes whenever the context makes it clear. E.g., if the active token capacity is 2 (K = 2), then necessarily for ← i,j , i = 2 and j = 1 and we can write ←. When K &gt; 2 or D &gt; 1, a base arc-creation action can be instantiated into multi- ple transitions that only differ by the indexes. E.g., when K = 3 and D = 2, ← with P = na can have three instantiations: ← 3,2 , ← 2,1 and ← 3,1 . To keep exposition compact, in such cir- cumstances we use to denote the set of index- pairs allowed by the given K, D and P values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Arc-standard</head><p>Arc-standard parsing is a form of shift-reduce parsing where arc-creations actions happen be- tween the top two elements on the stack:</p><p>LEFT-ARC:</p><formula xml:id="formula_7">(σ|i|j, β, A) ⇒ (σ|j, β, A ∪ (j → i)) RIGHT-ARC: (σ|i|j, β, A) ⇒ (σ|i, β, A ∪ (i → j))</formula><p>SHIFT:</p><p>(σ, i|β, A) ⇒ (σ|i, β, A) This is easily handled in our generalization by hav- ing only two active tokens. ← and → actions with default parameter values are used to simulate LEFT-ARC and RIGHT-ARC respectively, and + is used to shift tokens from U to O.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_8">LEFT-ARC ← {default} RIGHT-ARC → {default} SHIFT + capacity K 2 arc distance D 1</formula><p>Note that when K = 2, arc-creations are by defi- nition always on the periphery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Arc-eager</head><p>Arc-eager transition systems have been de- scribed in various ways. <ref type="bibr" target="#b19">Kuhlmann et al. (2011)</ref> defines it as operations between tokens at the top of the stack and front of the buffer.</p><p>LEFT-ARC:</p><formula xml:id="formula_9">(σ|i, j|β, A) ⇒ (σ, j|β, A ∪ (j → i)) RIGHT-ARC: (σ|i, j|β, A) ⇒ (σ|i|j, β, A ∪ (i → j)) REDUCE:</formula><p>(σ|i, β, A) ⇒ (σ, β, A)</p><p>SHIFT:</p><p>(σ, i|β, A) ⇒ (σ|i, β, A) In our generalization, we can simulate this by hav- ing two active tokens on the operative set, repre- senting the top of the stack and front of the buffer. SHIFT and LEFT-ARC are handled in the same way as in the arc-standard system. The RIGHT-ARC ac- tion is simulated by → with modified parameters to account for the fact that the action keeps the modifier in O and also shifts a token from U to O. The REDUCE action is handled by − with the periphery set to left so as to remove the second rightmost token from O.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_10">LEFT-ARC ← {default} RIGHT-ARC → {B = f, S = t} REDUCE − {P = l} SHIFT + K 2 D 1</formula><p>Note that the artificial root must be on the right of the sentence to permit the reduce to operate at the left periphery of the active token set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Easy-first</head><p>For easy-first parsing <ref type="bibr" target="#b12">(Goldberg and Elhadad, 2010)</ref>, the number of active tokens is infinite or, more precisely, equals to the number of tokens in the input sentence, and arc-creation actions can happen between any two adjacent tokens.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_11">LEFT-ARC ← {default} RIGHT-ARC → {default} K ∞ D 1</formula><p>Note here denotes the set of indexes {(i, j)|i ≤ |O|, j ≥ 1, i = j + 1}. Thus, at each time step there are 2 * |O| actions that need to be considered. Additionally, reduce is always composed with arc- creation and since K = ∞, then there is never a SHIFT operation as O is immediately populated with all tokens on the start of parsing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Kuhlmann et al. (2011)</head><p>Kuhlmann et al. present a 'hybrid' transition sys- tem where the RIGHT-ARC action is arc-standard in nature, but LEFT-ARC actions is arc-eager in na- ture, which is equivalent to the system of <ref type="bibr" target="#b31">Yamada and Matsumoto (2003)</ref>. We can get the same ef- fect as their system by allowing three active to- kens, representing the top two tokens of the stack and the front of the buffer. Transitions can be han- dled similarly as the arc-standard system where only the periphery parameter need to be changed accordingly. This change also requires the root to be on the right of the sentence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_12">LEFT-ARC ← {P = r} RIGHT-ARC → {P = l} SHIFT + K 3 D 1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Sagae and Tsujii (2008)</head><p>Sagae and Tsuji present a model for projective DAG parsing by modifying the LEFT-ARC and RIGHT-ARC transitions of the arc-eager system. In their system, the LEFT-ARC transition does not remove the dependent, and RIGHT-ARC transition does not shift any token from the input to the stack.</p><p>LEFT-ARC:</p><formula xml:id="formula_13">(σ|i, j|β, A) ⇒ (σ|i, j|β, A ∪ (j → i)) RIGHT-ARC: (σ|i, j|β, A) ⇒ (σ|i, j|β, A ∪ (i → j)) REDUCE:</formula><p>(σ|i, β, A) ⇒ (σ, β, A)</p><p>SHIFT:</p><p>(σ, i|β, A) ⇒ (σ|i, β, A) This can be easily simulated by modifying arc- eager system mentioned in Sec. 4.2 such that both the LEFT-ARC and RIGHT-ARC transition keep the stack/buffer untouched.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_14">LEFT-ARC ← {B = f } RIGHT-ARC → {B = f } REDUCE − {P = l} SHIFT + K 2 D 1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Attardi (2006)</head><p>Now we show how our framework can extend to non-projective systems. This is primarily con- trolled by the arc-distance parameter D.</p><p>The base of the Attardi non-projective transition system is the arc-standard system. Attardi mod- ifies RIGHT/LEFT-ARC actions that operate over larger contexts in the stack. For simplicity of ex- position below we model the variant of the Attardi system described in <ref type="bibr" target="#b8">Cohen et al. (2011)</ref>.</p><formula xml:id="formula_15">RIGHT-ARCN: (σ|i 1+N | . . . |i 2 |i 1 , β, A) ⇒ (σ|i N | . . . |i 2 |i 1 , β, A ∪ (i 1 → i 1+N ))</formula><p>LEFT-ARCN:</p><formula xml:id="formula_16">(σ|i 1+N | . . . |i 2 |i 1 , β, A) ⇒ (σ|i 1+N | . . . |i 2 , β, A ∪ (i 1+N → i 1 )) SHIFT:</formula><p>(σ, i|β, A) ⇒ (σ|i, β, A) Conceptually the Attardi system can be gener- alized to any value of N 2 , and Attardi specif- ically allows N=1,2,3. Actions that create arcs between non-adjacent tokens permit limited non- projectivity.</p><p>Thus, for Attardi, we set the number of active tokens to N +1, to simulate the top N +1 tokens of the stack, and set the max distance D to N to indicate that tokens up to N positions below the top of the stack can add arcs with the top of the stack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_17">LEFT-ARC ← {P = r} RIGHT-ARC → {P = r} K N + 1 D N (3 for Attardi (2006))</formula><p>The critical parameter for each arc action is that P = r. This means that the right pe- ripheral active token always must participate in the action, as does the right-most token of the stack for the original Attardi. Here denotes {(i, j)|j = 1, i − j ≤ D}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Novel Transition Systems</head><p>Any valid setting of the control parameters could theoretically define a new transition system, how- ever not all such combinations will be empirically reasonable. We outline two potential novel transi- tion systems suggested by our framework, which we will experiment with in Section 6. This is a key advantage of our framework (and implemen- tation) -it provides an easy experimental solution to explore novel transition systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Bounded Capacity Easy-first</head><p>Easy-first and arc-standard are similar since they are both bottom-up and both create arcs between adjacent nodes. The main difference lies in the ca- pacity K, which is 2 for arc-standard and ∞ for easy-first. In addition, the shift action is needed by the arc-standard system. Each system has some advantages: arc-standard is faster, and somewhat easier to train, while easy-first can be more accu- rate (under identical learning settings). Seen this way, it is natural to ask: what happens if the ac- tive token range K is set to k, with 2 &lt; k &lt; ∞?</p><p>We explore various values in the region between arc-standard and easy-first in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M(T )</head><p>base parameter values</p><formula xml:id="formula_18">LEFT-ARC ← {default} RIGHT-ARC → {default} SHIFT + K k D 1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Non-projective Easy-first</head><p>A simple observation is that by allowing D &gt; 1 makes any transition system naturally non- One example would be a non- projective variant of easy-first parsing:</p><formula xml:id="formula_19">M(T )</formula><p>base parameter values</p><formula xml:id="formula_20">LEFT-ARC ← {def ault} RIGHT-ARC → {def ault} K ∞ D any value of N</formula><p>Here N denotes the maximum arc-creation dis- tance.</p><p>We also note that one could potentially vary both K and D simultaneously, giving a non- projective limited capacity easy-first system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Implementation and Experiments</head><p>Our implementation uses a linear model y i ∈y w· f(x, y 1 , . . . , y i ) to assign a score to a sequence y = y 1 , y 2 , . . . y m of parser transitions, given sentence x. Model parameters are trained using the struc- tured perceptron with "early update" ( <ref type="bibr" target="#b9">Collins and Roark, 2004</ref>) and features follow that of <ref type="bibr" target="#b34">Zhang and Nivre (2011)</ref>.</p><p>For the arc-standard and arc-eager transition systems, we use the static oracle to derive a single gold sequence for a given sentence and its gold tree. For systems where there is no such static oracle, for example the easy-first system, we use the method proposed by <ref type="bibr" target="#b20">Ma et al. (2013)</ref> to se- lect a gold sequence such that, for each update, the condition w · f(x, ˆ y k ) &lt; w · f(x, y k ) always holds, which is required for perceptron conver- gence. Herê y k denotes the length k prefix of a correct sequence and y k denotes the highest scor- ing sequence in the beam.</p><p>We carry out the experiments on the Wall Street Journal using the standard splits for the training set (section 2-21), development set (section 22) and test set (section 23). We converted the con- stituency trees to Stanford dependencies version 3.3.0 (de <ref type="bibr" target="#b10">Marneffe et al., 2006</ref>). We used a CRF- based Part-of-Speech tagger to generate 5-fold jack-knifed Part-of-Speech tag annotation of the training set and used predicted tags on the devel- opment and test set. The tagger reaches accuracy scores similar to the Stanford tagger ( <ref type="bibr" target="#b29">Toutanova et al., 2003</ref>) with 97.44% on the test set. The unla- beled and labeled accuracy scores exclude punctu- ation marks.</p><p>Obviously, there are many interesting instantia- tions for the generalized transition system. In par- ticular, it would be interesting to investigate pars- ing performance of systems with different active token size and arc-distance. Before we investigate these system in the next subsections, we present the performance on standard systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Common Systems</head><p>The results for arc-standard, arc-eager and easy- first (bottom of <ref type="table">Table 1)</ref> show how standard sys- tems perform within our framework. Easy-first's labeled attachment score (LAS) is 0.46 higher than the LAS of arc-eager when using the same feature set. These results are competitive with the state- of-the-art linear parsers, but below recent work on neural network parsers. A future line of work is to adopt such training into our generalization.  <ref type="table">Table 1</ref>: State-of-the-art comparison. denotes our own re-implementation. The systems in the first block on the top use neural networks. <ref type="table">Table 1</ref> shows that easy-first is more accurate than arc-standard. However, it is also more computa- tionally expensive. By varying the number of ac- tive tokens, we can investigate whether there is a sweet spot in the accuracy vs. speed trade-off. <ref type="figure" target="#fig_4">Figure 3</ref> shows labeled/unlabeled accuracy scores on the development set for active token sizes ranging from 2 to 32, all with beam size 1. Different from the original easy-first system where all tokens are initialized as active tokens, in the bounded capacity system, a token can be ac- tive only after it has been shifted from U to O. We observe that the accuracy score increases re- markably by over a point when active token ca- pacity gets increased from 2 to 3, and peaks at a active token capacity of 4. Generally, more active tokens allows the parser to delay "difficult" deci- sions to later steps and choose the "easy" ones at early steps. Such behavior has the effect of limit- ing the extent of error propagation. The result also suggests that a modification as simple as adding one more active token to the arc-standard system can yield significant improvement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>System</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Bounded Capacity Easy-first</head><p>With a larger active token capacity, we see a slight drop of accuracy. This is likely related to the parser having to predict when to perform a shift transition. In comparison, the vanilla easy- first parser does not need to model this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Non-projective Easy-first</head><p>For the experiments with non-projective easy-first, we use the Dutch and Danish CoNLL 2006 cor- pora. To assess the performance, we applied the evaluation rules of the 2006 shared task. In order to make the non-projective systems perform well, we added to all feature templates the arc-distance D. In these experiments, we included in the train- ing an artificial root node on the right since Dutch as well a few sentences of the Danish corpus have more than one root node.</p><p>In the experiments, we use the easy-first setting with infinite set of active tokens K and increase stepwise the arc-distance D. For training, we fil- ter out the sentences which contain non-projective arcs not parseable with the selected setting. Ta- ble 2 provides an overview of the performance with increasing arc-distance. At the bottom of the table, we added accuracy scores for the bounded capacity non-projective easy-first parser since we think these settings provide attractive trade-offs between accuracy and complexity.</p><p>The original easy-first performs O(n) feature extractions and has a runtime of O(n log(n)) as- suming a heap is used to extract the argmax at each step and feature extraction is done over local con- texts only <ref type="bibr" target="#b12">(Goldberg and Elhadad, 2010</ref>  <ref type="table">Table 2</ref>: Experiments with non-projective easy- first and bounded capacity easy-first with D the arc-distance, K the active token capacity (∞ = all tokens of a sentence), UAS and LAS are the un- labeled and labeled accuracy scores, CUR is the recall of crossing edges and NPS shows the per- centage of sentences covered in the training set where 100% means all non-projective (and projec- tive) sentences in the training can be parsed and are included in training.</p><p>O(n 2 ) feature extractions are required. <ref type="table">Table 2</ref> explored more practical settings: when K = ∞, D ≤ 7, the number of feature extractions is back to O(n) with a runtime of O(n log(n)), matching the original easy-first complexity. When both K and D are small constants as in the lower portion of <ref type="table">Table 2</ref>, the runtime is O(n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Comparison with GR&amp;N13</head><p>The work most similar to ours is that of Gómez- Rodríguez and Nivre (2013) (GR&amp;N13). They de- fine a divisible transition system with the principle to divide the transitions into elementary transitions and then to compose from these elementary transi- tions complex transitions. GR&amp;N13 identified the following five elementary transitions:</p><p>SHIFT:</p><formula xml:id="formula_21">(σ, i|β, A) ⇒ (σ|i, β, A) UNSHIFT: (σ|i, β, A) ⇒ (σ, i|β, A) REDUCE: (σ|i, β, A) ⇒ (σ, β, A) LEFT-ARC: (σ|i, j|β, A) ⇒ (σ|i, j|β, A ∪ (j → i)) RIGHT-ARC: (σ|i, j|β, A) ⇒ (σ|i, j|β, A ∪ (i → j))</formula><p>The notion of function composition is used to combine the elementary transitions to the complex ones. For instance, arc-standard would have three actions: SHIFT; RIGHT-ARC ⊕REDUCE; LEFT- ARC ⊕REDUCE.</p><p>The first difference we can note is the GR&amp;N13 cannot instantiate transition systems that produce non-projective trees. This is surely a superficial difference, as GR&amp;N13 could easily add transi- tions with larger arc-distance or even SWAP ac- tions <ref type="bibr" target="#b25">(Nivre, 2009)</ref>.</p><p>However, a less superficial difference is that our generalization uses control parameters to con- struct instantiations of transition systems, instead of solely via transition composition like GR&amp;N13. Through this, our generalization results in a min- imal departure from 'standard' representations of these systems. While this may seem like a nota- tional difference, this is particularly a benefit with respect to implementation, as previous techniques for classification and feature extraction can largely be reused.</p><p>For example, in GR&amp;N13, the definition of the easy-first transition system <ref type="bibr" target="#b12">(Goldberg and Elhadad, 2010</ref>) is complex, e.g., a RIGHT-ARC at position i requires a compositional transition of i SHIFT actions, a RIGHT-ARC, a SHIFT, a REDUCE, then i UNSHIFT actions. Note, that this means in any implementation of this generalization, the out- put space for a classifier will be very large. Fur- thermore, the feature space would ultimately need to take the entire sentence into consideration, con- sidering that all compositional actions are centered on the same state.</p><p>In our transition system, on the other hand, easy-first operates almost as it does in its native form, where n LEFT-ARC and n RIGHT-ARC ac- tions are ranked relative to each other. There are only two actions, each instantiated for every loca- tion in the state. Thus the output space and feature extraction are quite natural.</p><p>This leads to straight-forward implementations allowing for easy experimentation and discovery. Unlike GR&amp;N13, we present empirical results for both known transition systems as well as some novel systems (Section 6).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>We presented a generalized transition system that is capable of representing and executing a wide range of transition systems within one single im- plementation. These transition systems include systems such as arc-standard, arc-eager, easy-first.</p><p>Transitions can be freely composed of elemen- tary operations. The transition system shows per- fect alignment between the elementary operations on one hand and their preconditions and the oracle on the other hand. We adjust the transition system to work on a stack in a uniform way starting at a node on the stack and ending with the top node of the stack. The results produced by this system are more comparable as they can be executed with the same classifier and feature extraction system.</p><p>Finally, we would like to highlight two insights that the experiments provide. First, a few more ac- tive tokens than two can boost the accuracy level of an arc-standard transition system towards the level of an easy-first transition system. These pars- ing systems maintain very nicely the linear com- plexity of the arc-standard transition system while they provide a higher accuracy similar to those of easy-first. Second, non-projective trees can be parsed by allowing a larger arc-distance which is a simple way to allow for non-projective edges.</p><p>We think that the transition systems with more active tokens or the combination with edges that span over more words provide very attractive tran- sition systems for possible future parsers.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>(</head><label></label><figDesc>a) Arc-standard: is and example are eligible for arcs. This is an example with two arcs (b) Arc-eager: example and with are eligible for arcs. This is an example with two arcs (c) Easy-first: All unreduced tokens are active (bolded).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A partially processed dependency tree after having just added the arc (example, an) in the arc-standard, arc-eager, and easy-first systems. Tokens in the operative token set O are shaded orange, while tokens in the unordered buffer U are in an unshaded box. The bolded tokens are in ACTIVE(O) and eligible for arcs (Section 3.4).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>2 .</head><label>2</label><figDesc>Max arc distance D. I.e., arcs can only be cre- ated between two active tokens O[i] and O[j] if |i − j| ≤ D.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Labeled/unlabeled attachment scores with respect to the active capacity K.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>UAS LAS CUR NPS UAS LAS CUR NPS</head><label></label><figDesc></figDesc><table>). For the 
non-projective variant of easy-first with D = d, 
O(dn) feature extractions are required. Thus, for 
the unrestricted variant where K = D = ∞, 

Danish 
Dutch 
D K </table></figure>

			<note place="foot" n="1"> This precondition is not needed for DAG transition systems.</note>

			<note place="foot" n="2"> Attardi (2006) also introduces Extract/Insert actions to a temporary buffer that he argues generalizes to all values of N. We don&apos;t account for that specific generalization here.</note>

			<note place="foot" n="1"> ∞ 90.22 85.51 41.30 84.37 79.11 75.41 32.45 63.55 2 ∞ 90.28 85.85 59.78 96.91 84.73 81.01 70.59 92.44 3 ∞ 90.68 86.07 65.22 98.82 85.03 81.65 77.99 99.01 4 ∞ 90.58 85.53 69.57 99.69 85.99 82.73 76.85 99.89 5 ∞ 90.84 86.11 65.22 99.88 85.21 81.93 76.09 99.96 6 ∞ 90.78 86.31 68.48 99.94 84.57 81.13 75.90 100.0 7 ∞ 90.64 85.91 63.04 100.0 85.07 82.01 77.04 100.0 4 5 90.74 85.87 66.30 99.69 86.51 82.91 76.66 99.89 5 6 91.00 86.21 72.83 99.88 86.03 82.73 76.09 99.96</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We would like to thank the anonymous reviewers, Slav Petrov and Michael Collins for valuable com-ments on earlier versions of this manuscript.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Parsing by chunks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Abney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Principle-Based Parsing</title>
		<editor>Robert Berwick, Steven Abney, and Carol Tenny</editor>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="257" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Improved transition-based parsing and tagging with neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Alberti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Coppola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slav</forename><surname>Petrov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EMNLP</title>
		<meeting>EMNLP</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Experiments with a multilanguage non-projective dependency parser</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giuseppe</forename><surname>Attardi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL)</title>
		<meeting>the 10th Conference on Computational Natural Language Learning (CoNLL)</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="166" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Going to the roots of dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miguel</forename><surname>Ballesteros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="5" to="13" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The best of both worlds-a graph-based completion model for transition-based parsers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Bohnet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonas</forename><surname>Kuhn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th Conference of the European Chpater of the Association for Computational Linguistics (EACL)</title>
		<meeting>the 13th Conference of the European Chpater of the Association for Computational Linguistics (EACL)</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="77" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A transitionbased system for joint part-of-speech tagging and labeled non-projective dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Bohnet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLPCoNLL)</title>
		<meeting>the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLPCoNLL)</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1455" to="1465" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A fast and accurate dependency parser using neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Danqi</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Christopher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Empirical Methods in Natural Language Processing</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Getting the most out of transition-based dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Jinho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martha</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Palmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Exact inference for generative probabilistic non-projective dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Shay B Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Gómez-Rodríguez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Satta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP)</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing (EMNLP)</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1234" to="1245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Incremental parsing with the perceptron algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Roark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics (ACL)</title>
		<meeting>the 42nd Annual Meeting of the Association for Computational Linguistics (ACL)</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="112" to="119" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Generating typed dependency parses from phrase structure parses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marie-Catherine</forename><surname>De Marneffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Maccartney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Conference on Language Resources and Evaluation (LREC)</title>
		<meeting>the 5th International Conference on Language Resources and Evaluation (LREC)</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Transitionbased dependency parsing with stack long shortterm memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Dyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miguel</forename><surname>Ballesteros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename><surname>Ling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Austin</forename><surname>Matthews</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noah</forename><forename type="middle">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACL 2015</title>
		<meeting>ACL 2015</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="334" to="343" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An efficient algorithm for easy-first non-directional dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoav</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">Elhadad</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics (NAACL HLT)</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="742" to="750" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A transition-based parser for 2-planar dependency structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Gómez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-Rodríguez</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics (ACL)</title>
		<meeting>the 48th Annual Meeting of the Association for Computational Linguistics (ACL)</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1492" to="1501" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Divisible transition systems and multiplanar dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Gómez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-Rodríguez</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="799" to="845" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Single malt or blended? A study in multilingual parser optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johan</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Nilsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the CoNLL Shared Task of EMNLPCoNLL</title>
		<meeting>the CoNLL Shared Task of EMNLPCoNLL</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="933" to="939" />
		</imprint>
	</monogr>
	<note>Gülsen Eryi˘ git, Beáta Megyesi, Mattias Nilsson, and Markus Saers</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Incremental joint approach to word segmentation, pos tagging, and dependency parsing in chinese</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jun</forename><surname>Hatori</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takuya</forename><surname>Matsuzaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yusuke</forename><surname>Miyao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jun&amp;apos;ichi</forename><surname>Tsujii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics (ACL)</title>
		<meeting>the 50th Annual Meeting of the Association for Computational Linguistics (ACL)</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1045" to="1053" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Dependency Parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sandra</forename><surname>Kübler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Morgan and Claypool</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Japanese dependency structure analysis based on support vector machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taku</forename><surname>Kudo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuji</forename><surname>Matsumoto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint SIGDAT Conference on Empirical Methods in NLP and Very Large Corpora</title>
		<meeting>the Joint SIGDAT Conference on Empirical Methods in NLP and Very Large Corpora</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="18" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Dynamic programming algorithms for transition-based dependency parsers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Kuhlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Gómez-Rodríguez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Satta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics (ACL)</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics (ACL)</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="673" to="682" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Easy-first pos tagging and dependency parsing with beam search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ji</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jingbo</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tong</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nan</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 51st Annual Meeting of the Association for Computational Linguistics<address><addrLine>Sofia, Bulgaria</addrLine></address></meeting>
		<imprint>
			<publisher>Short Papers</publisher>
			<date type="published" when="2013-08" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="110" to="114" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Maltparser: A data-driven parser-generator for dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johan</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Nilsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Conference on Language Resources and Evaluation (LREC)</title>
		<meeting>the 5th International Conference on Language Resources and Evaluation (LREC)</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="2216" to="2219" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Labeled pseudo-projective dependency parsing with support vector machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johan</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Nilsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL)</title>
		<meeting>the 10th Conference on Computational Natural Language Learning (CoNLL)</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="221" to="225" />
		</imprint>
	</monogr>
	<note>Gülsen Eryi˘ git, and Svetoslav Marinov</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An efficient algorithm for projective dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Workshop on Parsing Technologies (IWPT)</title>
		<meeting>the 8th International Workshop on Parsing Technologies (IWPT)</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="149" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Algorithms for deterministic incremental dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="513" to="553" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Non-projective dependency parsing in expected linear time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP (ACLIJCNLP)</title>
		<meeting>the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP (ACLIJCNLP)</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="351" to="359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A lineartime transition system for crossing interval trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emily</forename><surname>Pitler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Human Language Technologies: The 2015 Annual Conference of the North American Chapter of the Association for Computational Linguistics (NAACL HLT)</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="662" to="671" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Learning to parse natural language with maximum entropy models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adwait</forename><surname>Ratnaparkhi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="151" to="175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Shift-reduce dependency DAG parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenji</forename><surname>Sagae</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jun&amp;apos;ichi</forename><surname>Tsujii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd International Conference on Computational Linguistics (COLING)</title>
		<meeting>the 22nd International Conference on Computational Linguistics (COLING)</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="753" to="760" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Feature-rich part-ofspeech tagging with a cyclic dependency network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kristina</forename><surname>Toutanova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoram</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology</title>
		<meeting>the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology<address><addrLine>Stroudsburg, PA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="173" to="180" />
		</imprint>
	</monogr>
	<note>NAACL &apos;03. Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Structured training for neural network transition-based parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Alberti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slav</forename><surname>Petrov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACL 2015</title>
		<meeting>ACL 2015</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="323" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Statistical dependency analysis with support vector machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hiroyasu</forename><surname>Yamada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuji</forename><surname>Matsumoto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Workshop on Parsing Technologies (IWPT)</title>
		<meeting>the 8th International Workshop on Parsing Technologies (IWPT)</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="195" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A tale of two parsers: Investigating and combining graph-based and transition-based dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP)</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing (EMNLP)</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="562" to="571" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Enforcing structural diversity in cube-pruned dependency parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hao</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 52nd Annual Meeting of the Association for Computational Linguistics<address><addrLine>Baltimore, Maryland</addrLine></address></meeting>
		<imprint>
			<publisher>Short Papers</publisher>
			<date type="published" when="2014-06" />
			<biblScope unit="page" from="656" to="661" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Transition-based parsing with rich non-local features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joakim</forename><surname>Nivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics (ACL)</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics (ACL)</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
