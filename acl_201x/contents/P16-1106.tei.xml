<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T11:07+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A short proof that O 2 is an MCFL</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>August 7-12, 2016. 2016</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark-Jan</forename><surname>Nederhof</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">University of St Andrews</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A short proof that O 2 is an MCFL</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics</title>
						<meeting>the 54th Annual Meeting of the Association for Computational Linguistics <address><addrLine>Berlin, Germany</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="1117" to="1126"/>
							<date type="published">August 7-12, 2016. 2016</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present a new proof that O 2 is a multiple context-free language. It contrasts with a recent proof by Salvati (2015) in its avoidance of concepts that seem specific to two-dimensional geometry, such as the complex exponential function. Our simple proof creates realistic prospects of widening the results to higher dimensions. This finding is of central importance to the relation between extreme free word order and classes of grammars used to describe the syntax of natural language.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The alphabet of the MIX language has three sym- bols, a, b and c. A string is in the language if and only if the number of a's, the number of b's, and the number of c's are all the same. A different way of defining the MIX language is as permu- tation closure of the regular language (abc) * , as noted by <ref type="bibr" target="#b0">Bach (1981)</ref>; see also <ref type="bibr" target="#b7">Pullum (1983)</ref>.</p><p>If a, b and c represent, say, a transitive verb and its subject and its object, then a string in MIX represents a sentence with any number of triples of these constituents, in a hypothetical lan- guage with extreme free word order. This is ad- mittedly rather unlike any actual natural language. <ref type="bibr" target="#b4">Joshi (1985)</ref> argued that because of this, grammat- ical formalisms for describing natural languages should not be capable of generating MIX. He also conjectured that MIX was beyond the generative capacity of one particular formalism, namely the tree adjoining grammars. Several decades passed before <ref type="bibr" target="#b6">Kanazawa and Salvati (2012)</ref> finally proved this conjecture.</p><p>MIX has been studied in the context of several other formalisms. <ref type="bibr" target="#b3">Joshi et al. (1991)</ref> showed that MIX is generated by a generalization of tree ad- joining grammars that decouples local domination for linear precedence. <ref type="bibr" target="#b1">Boullier (1999)</ref> showed that MIX is generated by a range concatenation gram- mar. Negative results were addressed by <ref type="bibr" target="#b10">Sorokin (2014)</ref> for well-nested multiple context-free gram- mars, and by <ref type="bibr" target="#b1">Capelletti and Tamburini (2009)</ref> for a class of categorial grammars. The MIX language is also of interest outside of computational linguis- tics, e.g. in computational group theory <ref type="bibr" target="#b2">(Gilman, 2005)</ref>.</p><p>A considerable advance in the understanding of the MIX language is due to <ref type="bibr" target="#b8">Salvati (2015)</ref>, who showed that MIX is generated by a multiple context-free grammar (MCFG). The main part of the proof shows that the language O 2 is generated by a MCFG. This language has four symbols, a, a, b and b. A string is in the language if and only if the number of a's equals the number of a's, and the number of b's equals the number of b's. MIX and O 2 are rationally equivalent, which means that if one is generated by a multiple context-free gram- mar, then so is the other.</p><p>The proof by <ref type="bibr" target="#b8">Salvati (2015)</ref> is remarkable, in that it is one of the few examples of geometry be- ing used to prove a statement about formal lan- guages. The proof has two related disadvantages however. The first is that a key element of the proof, that of the complex exponential function, is not immediately understood without background in geometry. The second is that this also seems to restrict the proof technique to two dimensions, and there is no obvious avenue to generalize the result to a variant of MIX with four or five sym- bols. We hope to remedy this by an alternative, self-contained proof that avoids the complex expo- nential function. The core idea is a straightforward normalization of paths in two dimensions, which allow simple arguments to lead to a proof by con- tradiction. We also sketch part of a possible proof in three dimensions.</p><formula xml:id="formula_0">S(abababba) R(ababab, ba) R(ab, ab) R(a, a) R(b, b) R(ab, ba) R(a, a) R(b, b) (1) (4) (2)<label>(3)</label></formula><p>(6) (9) (7) (9) <ref type="figure">Figure 1</ref>: Derivation in G. The numbers indicate the rules that were used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Initial problem</head><p>The MCFG G is defined as:</p><formula xml:id="formula_1">S(xy) ← R(x, y)<label>(1)</label></formula><formula xml:id="formula_2">R(xp, yq) ← R(x, y) R(p, q)<label>(2)</label></formula><formula xml:id="formula_3">R(xp, qy) ← R(x, y) R(p, q) (3) R(xpy, q) ← R(x, y) R(p, q)<label>(4)</label></formula><formula xml:id="formula_4">R(p, xqy) ← R(x, y) R(p, q) (5) R(a, a) ← (6) R(a, a) ← (7) R(b, b) ← (8) R(b, b) ← (9) R(ε, ε) ←<label>(10)</label></formula><p>For the meaning of MCFGs in general, see <ref type="bibr" target="#b9">Seki et al. (1991)</ref>; for a closely related formalism, see <ref type="bibr">Vijay-Shanker et al. (1987)</ref>; see <ref type="bibr" target="#b5">Kallmeyer (2010)</ref> for an overview of mildly context-sensitive gram- mar formalisms. The reader unfamiliar with this literature is en- couraged to interpret the rules of the grammar as logical implications, with S and R representing predicates. There is an implicit conjunction be- tween the two occurrences of R in the right-hand side of each of the rules (2) -(5). The symbols x, y, p, q are string-valued variables, with implicit universal quantification that has scope over both left-hand side and right-hand side of a rule. The rules (6) -(10) act as axioms. The symbols a, a, b, b are terminals, and ε denotes the empty string.</p><p>We can derive S(x) for certain strings x, and R(x, y) for certain strings x and y. <ref type="figure">Figure 1</ref> presents an example of a derivation. The language generated by G is the set L of strings x such that S(x) can be derived.</p><p>By induction on the depth of derivations, one can show that if R(x, y), for strings x and y, then xy ∈ O 2 . Thereby, if S(x) then x ∈ O 2 , which means L ⊆ O 2 . The task ahead is to prove that if xy ∈ O 2 , for some x and y, then R(x, y). From this, L = O 2 then follows.</p><p>Let |x| denote the length of string x. For an inductive proof that xy ∈ O 2 implies R(x, y), the base cases are as follows. If xy ∈ O 2 and |x| ≤ 1 and |y| ≤ 1, then trivially R(x, y) by rules (6) -(10).</p><p>Furthermore, if we can prove that xy ∈ O 2 , x = ε and y = ε together imply R(x, y), for |xy| = m, for some m, then we may also prove that x y ∈ O 2 on its own implies R(x , y ) for |x y | = m. To see this, consider m &gt; 0 and z ∈ O 2 with |z| = m, and write it as z = xy for some x = ε and y = ε. If by assumption R(x, y), then together with R(ε, ε) and rule <ref type="formula" target="#formula_3">(4)</ref> or <ref type="formula">(5)</ref> we may derive R(xy, ε) or R(ε, xy), respectively. In the light of this, the inductive step merely needs to show that if for some x and y:</p><p>• xy ∈ O 2 , |x| ≥ 1, |y| ≥ 1 and |xy| &gt; 2, and</p><p>• pq ∈ O 2 and |pq| &lt; |xy| imply R(p, q), for all p and q, then also R(x, y). One easy case is if x ∈ O 2 (and thereby y ∈ O 2 ) because then we can write x = x 1 x 2 for some x 1 = ε and x 2 = ε. The induc- tive hypothesis states that R(x 1 , x 2 ) and R(ε, y), which imply R(x, y) using rule (4). A second easy case is if x or y has a proper pre- fix or proper suffix that is in O 2 . For example, assume there are z 1 = ε and z 2 = ε such that x = z 1 z 2 and z 1 ∈ O 2 . Then we can use the inductive hypothesis on R(z 1 , ε) and R(z 2 , y), to- gether with rule (2).</p><p>At this time, the reader may wish to read <ref type="figure">Fig- ure 1</ref> from the root downward. First, abababba is divided into a pair of strings, namely ababab and ba. At each branching node in the derivation, a pair of strings is divided into four strings, which are grouped into two pairs of strings, using rules (2) -(5), read from left to right. Rules (2) and (3) divide each left-hand side argument into two parts. Rule (4) divides the first left-hand side ar- gument into three parts, and rule (5) divides the second left-hand side argument into three parts.</p><p>What remains to show is that if z 1 z 2 ∈ O 2 , z 1 / ∈ O 2 and |z 1 z 2 | &gt; 2, and no proper prefix or proper suffix of z 1 or of z 2 is in O 2 , then there is at least one rule that allows us to divide z 1 and z 2 into four strings altogether, say x, y, p, q, of which at least three are non-empty, such that xy ∈ O 2 . This will then permit use of the inductive hypothesis on R(x, y) and on R(p, q).</p><p>We can in fact restrict our attention to z 1 z 2 ∈ O 2 , |z 1 z 2 | &gt; 2, and no non-empty substring of z 1 or of z 2 is in O 2 , which can be justified as follows. Suppose we have z 1 and z 2 as in the previous paragraph, and suppose z 1 and z 2 result from z 1 and z 2 by exhaustively removing all non- empty substrings that are in O 2 ; note that still</p><formula xml:id="formula_5">|z 1 z 2 | &gt; 2.</formula><p>If we can use a rule to divide z 1 and z 2 into x , y , p , q , of which at least three are non- empty, such that x y ∈ O 2 , then the same rule can be used to divide z 1 and z 2 into x, y, p, q with the required properties, which can be found from x , y , p , q simply by reintroducing the removed substrings at corresponding positions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Geometrical view</head><p>We may interpret a string x geometrically in two dimensions, as a path consisting of a series of line segments of length 1, starting in some point (i, j). Every symbol in x, from beginning to end, rep- resents the next line segment in that path; an oc- currence of a represents a line segment from the previous point (i, j) to the next point (i + 1, j), a represents a line segment from (i, j) to (i − 1, j), b represents a line segment from (i, j) to (i, j + 1), and b represents a line segment from (i, j) to (i, j − 1). If x ∈ O 2 , then the path is closed, that is, the starting point and the ending point are the same. If we have two strings x and y such that xy ∈ O 2 and x / ∈ O 2 , then this translates to two paths, connecting two distinct points, which together form a closed path. This is illustrated in <ref type="figure" target="#fig_0">Figure 2</ref>.</p><p>In the following, we assume a fixed choice of some x and y such that xy ∈ O 2 , |xy| &gt; 2, and no non-empty substring of x or of y is in Let C be a path, which can be either Let C be a path as above and let points</p><formula xml:id="formula_6">A[k] or B[k] for some k. We write Q ∈ C to denote that Q is a point on C. Let Q = (i, j) ∈ C, not</formula><formula xml:id="formula_7">Q 1 , Q 2 ∈ C be such that d C (Q 1 ) ≤ d C (Q 2 ). We define the subpath D = sub C (Q 1 , Q 2 ) to be such that Q ∈ D if and only if Q ∈ C and d C (Q 1 ) ≤ Q ≤ d C (Q 2 ), and d D (Q) = d C (Q) − d C (Q 1 ) for every Q ∈ D.</formula><p>For two points Q 1 and Q 2 , the line segment between Q 1 and Q 2 is denoted by seg(Q 1 , Q 2 ).</p><p>The task formulated at the end of Section 2 is accomplished if we can show that at least one of the following must hold:</p><p>• the angle in P <ref type="bibr">[0]</ref> between the beginning of A <ref type="bibr">[0]</ref> and that of B[0] is 180 • ( <ref type="figure" target="#fig_2">Figure 3)</ref>;</p><formula xml:id="formula_8">• there is a point Q / ∈ {P [0], P [1]} such that Q ∈ A[0] and Q ∈ B[1] (Figure 4);</formula><p>• there is a point  We will do this through a contradiction that re- sults if we assume:</p><formula xml:id="formula_9">Q = P [1] such that Q ∈ A[0], Q ∈ A[1] and d A[0] (Q) &gt; d A[1] (Q) (Fig- ure 5); or • there is a point Q = P [0] such that Q ∈ B[0], Q ∈ B[1] and d B[1] (Q) &gt; d B[0] (Q) (analo- gous to Figure 5). a b a b b a a b a a b P [0] P [1] P [−1] 180 •</formula><formula xml:id="formula_10">(i) the angle in P [0] between the beginning of A[0] and that of B[0] is not 180 • ; (ii) A[0] ∩ B[1] = {P [0], P [1]}; (iii) there is no Q ∈ (A[0] ∩ A[1]) \ {P [1]} such that d A[0] (Q) &gt; d A[1] (Q); and (iv) there is no Q ∈ (B[0] ∩ B[1]) \ {P [0]} such that d B[1] (Q) &gt; d B[0] (Q).</formula><p>In the below, we will refer to these assumptions as the four constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Continuous view</head><p>Whereas paths A and B were initially formed out of line segments of length 1 between points (i, j) with integers i and j, the proof becomes consider- ably easier if we allow i and j to be real numbers. The benefit lies in being able to make changes to the paths that preserve the four constraints, to ob- tain a convenient normal form for A and B. If we can prove a contradiction on the normal form, we will have shown that no A and B can exist that satisfy the four constraints. Let C be a path, which can be either A[k ] or B <ref type="bibr">[k ]</ref>, for some k , and let Q ∈ C. We write from right C (Q, <ref type="bibr">[k]</ref>) to mean that path C is strictly to the right of <ref type="bibr">[k]</ref> just before reaching Q, or formally, there is some δ &gt; 0 such that each</p><formula xml:id="formula_11">Q ∈ C with d C (Q) − δ &lt; d C (Q ) &lt; d C (Q)</formula><p>lies strictly to the right of <ref type="bibr">[k]</ref>. The predicates from left, to right, to left are similarly defined.</p><p>Let</p><formula xml:id="formula_12">Q 1 , Q 2 ∈ C ∩ [k], for some k, such that d C (Q 1 ) ≤ d C (Q 2 ).</formula><p>We say that C has an excur- sion from the right between Q 1 and</p><formula xml:id="formula_13">Q 2 at [k] if from right C (Q 1 , [k]) and to right C (Q 2 , [k])</formula><p>. This is illustrated in <ref type="figure">Figure 6</ref>: the path is strictly to the right of <ref type="bibr">[k]</ref> just before reaching Q 1 . From there on it may (but need not) cross over to the left of <ref type="bibr">[k]</ref>. Just after it reaches Q 2 , it must again be strictly to the right of <ref type="bibr">[k]</ref>. The definition of excur- sion from the left is symmetric. Note that excur- sions may be nested; in <ref type="figure">Figure 6</ref>, sub C (Q 1 , Q 2 ) has an excursion at [k] from the left below Q 2 .</p><p>In <ref type="figure">Figure 6</ref>, the pair of points Q 1 and R 1 will be called a crossing of <ref type="bibr">[k]</ref> from right to left, charac- terized by <ref type="bibr">[k]</ref>) and sub C (Q 1 , R 1 ) being a line segment. The pair of points R 2 and Q 2 is a cross- ing of <ref type="bibr">[k]</ref> from left to right, where the length of seg(R 2 , Q 2 ) happens to be 0. In much of the fol- lowing we will simplify the discussion by assum- ing crossings consist of single points, as in the case of R 2 = Q 2 . However, existence of crossings con-</p><formula xml:id="formula_14">Q 1 , R 1 ∈ [k], from right C (Q 1 , [k]), to left C (R 1 ,</formula><formula xml:id="formula_15">[k − 1] [k] [k + 1] Q 1 R 1 R 2 =Q 2 P [k] P [k + 1] P [k + 2]</formula><p>Figure 6: Excursion from the right at <ref type="bibr">[k]</ref>. sisting of line segments of non-zero length, as in the case of Q 1 and R 1 , would not invalidate any of the arguments of the proof. Excursions are the core obstacle that needs to be overcome for our proof. We can truncate an excursion at <ref type="bibr">[k]</ref> by finding a suitable line m that is parallel to <ref type="bibr">[k]</ref>, some small distance away from it, between <ref type="bibr">[k]</ref> and P [k + 1] for excursions from the right, and between [k] and P [k] for excur- sions from the left. We further need to find points</p><formula xml:id="formula_16">[k − 1] [k] [k + 1] m Q 1 Q 2 P [k] P [k + 1] P [k + 2]</formula><formula xml:id="formula_17">Q 1 , Q 2 ∈ C ∩ m, where d C (Q 1 ) &lt; d C (Q 1 ) and d C (Q 2 ) &lt; d C (Q 2 )</formula><p>. Because our coordinates no longer need to consist of integers, it is clear that m, Q 1 and Q 2 satisfying these requirements must exist.</p><p>The truncation consists in changing At this time, we must allow for the possibility that for some excursions, no m, Q 1 and Q 2 can be found with which we can implement a trun- cation, if we also need to preserve the four con- straints and preserve absence of self-intersections. There is a small number of possible causes. First, </p><formula xml:id="formula_18">sub C (Q 1 , Q 2 ) to become seg(Q 1 , Q 2 ),</formula><formula xml:id="formula_19">[k] Q 1 Q 2 R 1 R 2 (a) [k] Q 1 Q 2 Q P [k ] (b) [k] Q 1 Q 2 Q Q (c)</formula><formula xml:id="formula_20">= A[k ], while d A[k ] (Q 1 ) &gt; d A[k +1] (Q) holds for some Q ∈ seg(Q 1 , Q 2 ) ∩ A[k + 1], or d A[k −1] (Q) &gt; d A[k ] (Q 2 ) holds for some Q ∈ seg(Q 1 , Q 2 )∩A[k −1]</formula><p>, either of which potentially blocks a truncation if constraint (iii) is to be pre- served. Constraint (iv) has similar consequences. Furthermore, if we need to preserve absence of self-intersections, a truncation may be blocked if</p><formula xml:id="formula_21">d C (Q) &lt; d C (Q 1 ) or d C (Q 2 ) &lt; d C (Q) for some Q ∈ seg(Q 1 , Q 2 ) ∩ C.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Normal form</head><p>The regions of an excursion of C between Q 1 and Q 2 at [k] are those that are enclosed by (subpaths of) sub C (Q 1 , Q 2 ) and (subsegments of) seg(Q 1 , Q 2 ), as illustrated by <ref type="figure" target="#fig_7">Figure 8(a)</ref>. The area of the excursion is the surface area of all re- gions together. We say an excursion is filled if any of its regions contains at least one point P [k ], for some integer k , otherwise it is said to be unfilled.</p><p>We say A and B are in normal form if no excur- sion can be truncated without violating the four constraints or introducing a self-intersection. Sup-pose A and B are in normal form, while one or more excursions remain. Let us first consider the unfilled excursions. Among them choose one that has the smallest area. By assumption, one of the four constraints must be violated or a new self- intersection must be introduced, if we were to truncate that excursion. We will consider all rel- evant cases.</p><p>Each case will assume an unfilled excursion from the right (excursions from the left are sym- metric) of a path C between Q 1 and Q 2 at <ref type="bibr">[k]</ref>. We may assume that sub C (Q 1 , Q 2 ) ∩ [k] = {Q 1 , Q 2 }, as additional crossings of <ref type="bibr">[k]</ref> would mean that excursions exist with smaller areas (cf. <ref type="figure" target="#fig_7">Figure 8(a)</ref>), contrary to the assumptions. Now assume truncation is blocked due to Q ∈ seg(</p><formula xml:id="formula_22">Q 1 , Q 2 ) ∩ C such that d C (Q) &lt; d C (Q 1 ) (the case d C (Q 2 ) &lt; d C (Q)</formula><p>is symmetric), as we need to preserve absence of self-intersection. Sup- pose Q is the only such point, so that C crosses seg(Q 1 , Q 2 ) from left to right once without ever crossing it from right to left, until Q 1 is reached. Then C starts in the area of the excursion, or in other words, the excursion is filled, contrary to the assumptions (cf. <ref type="figure" target="#fig_7">Figure 8(b)</ref>). Now suppose there are points Q and Q where C crosses seg(Q 1 , Q 2 ) from right to left and from left to right, respec- tively and d C (Q ) &lt; d C (Q) &lt; d C (Q 1 ). If there are several choices, choose Q and Q such that sub C (Q , Q) ∩ [k] = {Q , Q}. This means the excursion between Q and Q has an area smaller than the one between Q 1 and Q 2 , contrary to the assumptions (cf. <ref type="figure" target="#fig_7">Figure 8(c)</ref>).</p><p>Note that excursions with zero area, that is, those that intersect with <ref type="bibr">[k]</ref> without crossing over to the other side, can always be truncated. We can therefore further ignore non-crossing intersec- tions. Now suppose a truncation would violate con- straint (ii), where</p><formula xml:id="formula_23">C = B[k + 1] and D = A[k ] crosses seg(Q 1 , Q 2 )</formula><p>. Then much as above, we may distinguish two cases. In the first, D has only one crossing of seg(Q 1 , Q 2 ) in some point Q, which means the excursion is filled with the start- ing or ending point of D, as in <ref type="figure" target="#fig_8">Figure 9(a)</ref>. In the second, D has at least two consecutive crossings, say in Q and Q , from right to left and from left to right, respectively, which means the excursion between Q and Q has smaller area than the one between Q 1 and Q 2 , illustrated by shading in <ref type="figure" target="#fig_8">Fig- ure 9(b)</ref>. Both cases contradict the assumptions.</p><p>[k] Next, suppose a truncation would violate con- straint (iii), where</p><formula xml:id="formula_24">Q 1 C Q 2 D Q P [k ] (a) [k]</formula><formula xml:id="formula_25">C = A[k ] and A[k − 1] crosses seg(Q 1 , Q 2 ) in Q, while d A[k −1] (Q) &gt; d A[k ] (Q 2 )</formula><p>. If the crossing in Q is from right to left, and there is an immediately next crossing in Q from left to right, then we have the same sit- uation as in <ref type="figure" target="#fig_8">Figure 9(b)</ref>, involving an excursion with smaller area, contradicting the assumptions. If the crossing in Q is the only one, and it is from right to left, then we can use the fact that sub A <ref type="bibr">[k ]</ref> </p><formula xml:id="formula_26">(Q 1 , Q 2 ) ∩ sub A[k −1] (Q, P [k ]) = ∅,</formula><p>as we assume the four constraints as yet hold. This means P [k ] must be contained in the area of the excursion, as illustrated in <ref type="figure">Figure 10(a)</ref>, contra- dicting the assumption that the excursion is un- filled. If the crossing in Q is the only one, and it is from left to right, then we can use the fact that sub A <ref type="bibr">[k ]</ref> </p><formula xml:id="formula_27">(Q 1 , Q 2 ) ∩ sub A[k −1] (Q 2 , Q) = ∅, for the unique Q 2 ∈ A[k − 1] ∩ [k − 1] such that d A[k −1] (Q 2 ) = d A[k ] (Q 2 )</formula><p>. This means the excursion contains Q 2 , which implies there is an- other unfilled excursion between points</p><formula xml:id="formula_28">R 1 , R 2 ∈ A[k ] ∩ [k − 1]</formula><p>with smaller area, as shaded in <ref type="figure">Figure 10(b)</ref>, contrary to the assumptions.</p><p>Suppose a truncation would violate con- straint (iii), where</p><formula xml:id="formula_29">C = A[k ] and A[k + 1] crosses seg(Q 1 , Q 2 ) in Q, while d A[k ] (Q 1 ) &gt; d A[k +1] (Q).</formula><p>The reasoning is now largely sym- metric to the above, with the direction of the cross- ing reversed, except that the case analogous to <ref type="figure">Fig- ure 10(b)</ref> is immediately excluded, as Q 2 cannot be both to the left and to the right of <ref type="bibr">[k]</ref>. Con- straint (iv) is symmetric to constraint (iii). All pos- <ref type="figure">Figure 10</ref>: Truncating the excursion would in- troduce a violation of constraint (iii), where</p><formula xml:id="formula_30">[k] Q 1 A[k ] Q 2 A[k − 1] Q P [k ] (a) [k] [k−1] Q 1 A[k ] Q 2 A[k − 1] Q Q 2 R 1 R 2 (b)</formula><formula xml:id="formula_31">d A[k −1] (Q) &gt; d A[k ] (Q 2 ).</formula><p>The assumptions are contradicted in one of three ways, the first as in <ref type="figure" target="#fig_8">Figure 9</ref>(b), and the second and third as in (a) and (b) above.</p><p>sible cases have been shown to lead to contradic- tions, and therefore we conclude that there are no unfilled excursions if A and B are in normal form. We now show that there cannot be any filled ex- cursions either. • it next crosses [k] leftward; or</p><formula xml:id="formula_32">• it next crosses [k + 1] in some point Q 3 .</formula><p>The first of these can be excluded, in the light  <ref type="figure">[1]</ref>, . . . being drawn from left to right along a horizontal line), or it may be higher up than Q 1 . These two cases are drawn in <ref type="figure" target="#fig_0">Fig- ures 11 and 12</ref>. The choice of Q 3 also determines a corresponding</p><formula xml:id="formula_33">of d A[k −1] (Q) ≥ d A[k ] (Q 2 ) for each Q ∈ sub A[k −1] (Q 2 , P [k ]).</formula><formula xml:id="formula_34">Q 3 ∈ A[k − 1] ∩ [k]. [k−1] Q 1 Q 2 P [k−1] Q 3 Q 4 [k] Q 1 Q 2 P [k] Q 3 Q 4 [k+1] P [k+1]</formula><p>[k+2] [k−1]</p><formula xml:id="formula_35">Q 1 Q 2 P [k−1] Q 3 Q 4 [k] Q 1 Q 2 P [k] Q 3 Q 4 [k+1] P [k+1]</formula><p>[k+2]</p><formula xml:id="formula_36">P [k+2]</formula><p>Figure 12: As in <ref type="figure" target="#fig_11">Figure 11</ref> but Q 3 is chosen to be higher up than Q 1 .</p><p>We now consider how A[k ] continues after Q 3 in the case of <ref type="figure" target="#fig_11">Figure 11</ref>. If it next crosses [k + 1] leftward, this would imply the existence of an unfilled excursion. Further, Filled excursions from the left are symmetric, but instead of investigating the path after Q 2 , we must investigate the path before Q 1 . The case of B is symmetric to that of A. We may now conclude no filled excursions exist.   <ref type="figure" target="#fig_2">Figure 13</ref>. In the former case, L A and R B are above L B and R A , respectively, and in the latter case L A and R B are below L B and R A . This is impossible, as L A and R A should be at the same height, these being corresponding points of A[−1] and A <ref type="bibr">[0]</ref>, which have the same shape, and simi- larly L B and R B should be at the same height.</p><formula xml:id="formula_37">d A[k −1] (Q) ≥ d A[k ] (Q 3 ) for each Q ∈ sub A[k −1] (Q 3 , P [k ]).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">The final contradiction</head><formula xml:id="formula_38">[−1] [0] P [−1] P [0] P [1] A[0] B[0] B[1] A[−1] L B L A R A R B</formula><p>This contradiction now leads back to the very beginning of our proof, and implies that the four constraints cannot all be true, and therefore that at least one rule is always applicable to allow use of the inductive hypothesis, and therefore that G generates O 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions and outlook</head><p>We have presented a new proof that O 2 is gen- erated by a MCFG. It has at least superficial elements in common with the proof by <ref type="bibr" target="#b8">Salvati (2015)</ref>. Both proofs use essentially the same MCFG, both are geometric in nature, and both in- volve a continuous view of paths next to a discrete view. The major difference lies in the approach to tackling the myriad ways in which the paths can wind around each other and themselves. In the case of <ref type="bibr" target="#b8">Salvati (2015)</ref>, the key concept is that of the complex exponential function, which seems to restrict the proof technique to two-dimensional geometry. In our case, the key concepts are excur- sions and truncation thereof, and the identification of top and bottom regions.</p><p>At this time, no proof is within reach that gener- alizes the result to O 3 , i.e. the language of strings over an alphabet of six symbols, in which the num- ber of a's equals the number of a's, the number of b's equals the number of b's, and the number of c's equals the number of c's; this language is rationally equivalent to MIX-4, which is defined analogously to MIX, but with four symbols. One may expect however that a proof would use three- dimensional geometry and generalize some of the arguments from this paper. Our aim here is to make this plausible, while emphasizing that an ac- tual proof will require a novel framework at least as involved as that presented in the previous sec- tions.</p><p>Omitting the start rule and the axioms, an obvious candidate MCFG to generate O 3 would among others have the three rules:</p><formula xml:id="formula_39">R(p 1 q 1 , p 2 q 2 , q 3 p 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 q 1 , q 2 p 2 , p 3 q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(q 1 p 1 , p 2 q 2 , p 3 q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 )</formula><p>as well as the six rules:</p><formula xml:id="formula_40">R(p 1 q 1 p 2 , p 3 q 2 , q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 q 1 p 2 , q 2 , p 3 q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 q 1 , p 2 q 2 p 3 , q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 q 1 , q 2 , p 2 q 3 p 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 , q 1 p 2 q 2 , q 3 p 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 , q 1 p 2 , q 2 p 3 q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 )</formula><p>Consider three strings x, y and z such that xyz ∈ O 3 . If we can use any of the above rules to divide these into six strings out of which we can select three, which concatenated together are a non-empty string in O 3 shorter than xyz , then we can use the inductive hypothesis, much as in Section 2. For a proof by contradiction, therefore assume that no pair of prefixes of x and y and a suffix of z together form a non-empty string in O 3 shorter than xyz , etc., in the light of the first three rules above, and assume that no 'short enough' prefix of x, a prefix of y and a 'short enough' suf- fix of x together form a non-empty string in O 3 , etc., in the light of the next six rules above.</p><p>For a geometric interpretation, consider the paths of x, y and z, leading from point P 0 = (0, 0, 0) to points P x , P y and P z , respectively. The concatenations of prefixes of x and y, and similarly those of x and z and those of y and z form three connecting surfaces, together forming one surface dividing the space around P 0 into an 'above' and a 'below'; cf. <ref type="figure">Figure 14</ref>. Our assump- tions imply that the final parts of the paths of x, y and z from −P x , −P y and −P z , respectively, to P 0 should not intersect with this surface. In addi- tion, no pair of strings from x, y and z should end on complementing symbols, i.e. a and a, b and b, or c and c. This means that the three paths leading towards P 0 must all end in P 0 strictly 'above' or all strictly 'below' the surface.</p><p>This might lead to a contradiction, similar to that in Section 6, but only if one can ensure that none of the three paths to P 0 'sneak around' the surface. This is illustrated in <ref type="figure">Figure 15</ref>, where the path of z is 'entangled' with a copy of itself. It appears this can be achieved by adding three more rules, namely: R(p 1 q 1 p 2 q 2 , p 3 , q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 , q 1 p 2 q 2 p 3 , q 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 ) R(p 1 , q 1 , q 2 p 2 q 3 p 3 ) ← R(p 1 , p 2 , p 3 ) R(q 1 , q 2 , q 3 )</p><p>The physical interpretation of, say, the last rule seems to be that the path of z from −P z to P 0 can be iteratively shifted such that points other than its ending point coincide with P 0 . At some stage P 0 P x P y P z −P z −P y −P x <ref type="figure">Figure 14</ref>: By taking prefixes of two strings from {x, y, z} and concatenating them, we obtain a sur- face dividing the space around P 0 into 'above' and 'below'. Here the path of z from −P z to P 0 ends 'above', if our view is from above the surface.  <ref type="figure">Figure 15</ref>: The path of z from −P z to P 0 is ini- tially above the surface, but 'sneaks around' the path of z from P y to −P x , to end below. the shifted path must intersect with the path of z from P y to −P x , before the entanglement of the two paths is broken.</p><p>The considerable challenges ahead involve find- ing a suitable definition of 'excursions' in three di- mensions, and proving that these can be systemat- ically truncated without violating appropriate con- straints that preclude application of the above 12 rules.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Two strings x = ababab and y = ba together represent a closed path, consisting of a path from (0, 0) to (−1, −1) and a path from (−1, −1) to (0, 0).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>necessarily with i and j being integers. We de- fine the path-distance d C (Q) of Q on C to be the length of the path along line segments of C to get from P [k] to Q. In Figure 2, (0, −1) has path- distance 3 on A[0], as the path on A[0] to reach (0, −1) from P [0] = (0, 0) consists of the line segments represented by the prefix aba of x. Sim- ilarly, d A[0] ((0.5, −1)) = 2.5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: With x = a b a b b and y = a a b, the beginning of path A[0] and the beginning of (dotted) path B[0] have an 180 • angle in P [0], which implies x and y start with complementing symbols (here a and a; the other possibility is b and b). By applying rule (2), two smaller closed paths result, one of which consists of these two complementing symbols.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Figure 4: The paths A[0] and B[1] of x = baaab and y = a ab ba have point (1, 1) in common. Two smaller closed paths result by applying rule (3).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>We define, for each integer k, the line [k], which is perpendicular to the line through P [k] and P [k + 1], and lies exactly half-way between P [k] and P [k + 1]. Much as before, we write Q ∈ [k] to denote that Q is a point on line [k]. We will consistently draw points . . . , P [−1], P [0], P [1], . . . in a straight line from left to right.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: The excursion from Figure 6 truncated in Q 1 and Q 2 on line m.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>as il- lustrated by Figure 7 .</head><label>7</label><figDesc>Note that if C is say A[k ], for some k , then changing the shape of C means changing the shape of A[k ] for any other k as well; the difference between A[k ] and A[k ] is only in the starting point P [k ] versus P [k ].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: (a) Regions (shaded) of an excursion at [k]; due to additional crossings in R 1 and R 2 , three more excursions exist, each with a smaller area. (b) &amp; (c) If truncation would introduce selfintersection, then either the excursion is filled, with some point P [k ] as in (b), or there is an excursion with smaller area, illustrated by shading in (c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Truncating the excursion would introduce a violation of constraint (ii). The assumptions are contradicted in one of two ways.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>For this, assume that A[k ] has a filled excursion between Q 1 and Q 2 at [k] from the right. This means A[k − 1] has an identically shaped, filled excursion at [k − 1] from the right, between corresponding points Q 1 and Q 2 . Let us consider how path A[k ] proceeds after reaching Q 2 . There are only three possibilities: • it ends in P [k + 1], with k = k, without further crossings of [k] or [k + 1];</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>Due to constraint (iii) therefore, this subpath of A[k − 1] cannot inter- sect with the excursion of A[k ] to reach P [k], and therefore A[k ] cannot reach P [k + 1]. The second possibility is also excluded, as this would imply the existence of an unfilled excursion. For the re- maining possibility, Q 3 ∈ A[k ] ∩ [k + 1] may be lower down than Q 2 (in the now familiar view of the points P [0], P</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Continuing the (solid) path A[k ] after a filled excursion, restricted by the (dashed) path A[k − 1], in the light of constraint (iii).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>Due to constraint (iii) therefore, this subpath of A[k − 1] cannot intersect with sub A[k ] (Q 2 , Q 3 ), above which lies P [k + 1]. Therefore, A[k ] must cross [k + 2] in some Q 4 , which is lower down than Q 3 . This continues ad infinitum, and A[k ] will never reach its supposed end point P [k + 1]. The reasoning for Figure 12 is similar.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>We have established that after A and B have been brought into normal form, there can be no remain- ing excursions. This means that A[0] crosses [0] exactly once, in some point R A , and B[0] crosses [−1] exactly once, in some point L B . Further, let L A be the unique point where A[−1] crosses [−1] and R B the unique point where B[1] crosses [0]. The region of the plane between [−1] and [0]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: The region between [−1] and [0] is divided by A[0] and B[0] into a 'top' region (lightly shaded), a 'bottom' region (white), and areas enclosed by intersections of A[0] and B[0] (darkly shaded). Here A[−1] and B[1] are both in the 'bottom' region.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work came out of correspondence with Gior-gio Satta. Gratefully acknowledged are also fruit-ful discussions with Sylvain Salvati, Vinodh Ra-jan, and Markus Pfeiffer. Much appreciated are anonymous referees and editors for their efforts and their courage to consider a theoretical paper for publication at this venue.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Discontinuous constituents in generalized categorial grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eleventh Annual Meeting of the North Eastern Linguistic Society</title>
		<meeting>the Eleventh Annual Meeting of the North Eastern Linguistic Society</meeting>
		<imprint>
			<date type="published" when="1981" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Chinese numbers, MIX, scrambling, and Range Concatenation Grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Boullier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">; M</forename><surname>Capelletti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Tamburini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Ninth Conference of the European Chapter of the Association for Computational Linguistics</title>
		<meeting><address><addrLine>Bergen, Norway</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-06" />
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="87" to="98" />
		</imprint>
	</monogr>
	<note>Parsing with polymorphic categorial grammars</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Formal languages and their application to combinatorial group theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Gilman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Contemporary Mathematics</title>
		<imprint>
			<biblScope unit="volume">378</biblScope>
			<biblScope unit="page" from="1" to="36" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The convergence of mildly contextsensitive grammar formalisms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Joshi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Foundational Issues in Natural Language Processing</title>
		<editor>P. Sells, S.M. Shieber, and T. Wasow</editor>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="31" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Tree adjoining grammars: How much context-sensitivity is required to provide reasonable structural descriptions?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">K</forename><surname>Joshi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Natural language parsing: Psychological, computational, and theoretical perspectives</title>
		<editor>D.R. Dowty, L. Karttunen, and A.M. Zwicky</editor>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1985" />
			<biblScope unit="page" from="206" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Parsing Beyond Context-Free Grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laura</forename><surname>Kallmeyer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">MIX is not a tree-adjoining language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Kanazawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">]</forename><forename type="middle">M</forename><surname>Salvati2012</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kanazawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Salvati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">50th Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference</title>
		<meeting><address><addrLine>Jeju Island, Korea</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-07" />
			<biblScope unit="page" from="666" to="674" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Context-freeness and the computer processing of human languages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">K</forename><surname>Pullum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">21st Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference</title>
		<meeting><address><addrLine>Cambridge, Massachusetts</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983-07" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">MIX is a 2-MCFL and the word problem in Z 2 is captured by the IO and the OI hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Salvati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="page" from="1252" to="1277" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On multiple context-free grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Seki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="191" to="229" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Characterizing structural descriptions produced by various grammatical formalisms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sorokin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">25th Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference</title>
		<editor>Vijay-Shanker et al.1987] K. Vijay-Shanker, D.J. Weir, and A.K. Joshi</editor>
		<meeting><address><addrLine>Russia; Stanford, California, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">8633</biblScope>
			<biblScope unit="page" from="104" to="111" />
		</imprint>
	</monogr>
	<note>Developments in Language Theory, 18th International Conference</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
