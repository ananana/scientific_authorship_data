<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T12:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Pointing the Unknown Words</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>August 7-12, 2016</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Caglar</forename><surname>Gulcehre</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université de Montréal Sungjin Ahn Université de Montréal</orgName>
								<orgName type="institution" key="instit2">Université de Montréal CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ramesh</forename><surname>Nallapati</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université de Montréal Sungjin Ahn Université de Montréal</orgName>
								<orgName type="institution" key="instit2">Université de Montréal CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ibm</forename><forename type="middle">T J Watson</forename><surname>Research</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université de Montréal Sungjin Ahn Université de Montréal</orgName>
								<orgName type="institution" key="instit2">Université de Montréal CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bowen</forename><surname>Zhou</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université de Montréal Sungjin Ahn Université de Montréal</orgName>
								<orgName type="institution" key="instit2">Université de Montréal CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ibm</forename><forename type="middle">T J Watson</forename><surname>Research</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université de Montréal Sungjin Ahn Université de Montréal</orgName>
								<orgName type="institution" key="instit2">Université de Montréal CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université de Montréal Sungjin Ahn Université de Montréal</orgName>
								<orgName type="institution" key="instit2">Université de Montréal CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Pointing the Unknown Words</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics</title>
						<meeting>the 54th Annual Meeting of the Association for Computational Linguistics <address><addrLine>Berlin, Germany</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="140" to="149"/>
							<date type="published">August 7-12, 2016</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>The problem of rare and unknown words is an important issue that can potentially effect the performance of many NLP systems , including traditional count-based and deep learning models. We propose a novel way to deal with the rare and unseen words for the neural network models using attention. Our model uses two softmax layers in order to predict the next word in conditional language models: one predicts the location of a word in the source sentence , and the other predicts a word in the shortlist vocabulary. At each timestep, the decision of which softmax layer to use is adaptively made by an MLP which is conditioned on the context. We motivate this work from a psychological evidence that humans naturally have a tendency to point towards objects in the context or the environment when the name of an object is not known. Using our proposed model, we observe improvements on two tasks, neural machine translation on the Europarl En-glish to French parallel corpora and text summarization on the Gigaword dataset.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Words are the basic input/output units in most of the NLP systems, and thus the ability to cover a large number of words is a key to building a ro- bust NLP system. However, considering that (i) the number of all words in a language including named entities is very large and that (ii) language itself is an evolving system (people create new words), this can be a challenging problem.</p><p>A common approach followed by the recent neural network based NLP systems is to use a softmax output layer where each of the output di- mension corresponds to a word in a predefined word-shortlist. Because computing high dimen- sional softmax is computationally expensive, in practice the shortlist is limited to have only top- K most frequent words in the training corpus. All other words are then replaced by a special word, called the unknown word (UNK).</p><p>The shortlist approach has two fundamental problems. The first problem, which is known as the rare word problem, is that some of the words in the shortlist occur less frequently in the train- ing set and thus are difficult to learn a good repre- sentation, resulting in poor performance. Second, it is obvious that we can lose some important in- formation by mapping different words to a single dummy token UNK. Even if we have a very large shortlist including all unique words in the training set, it does not necessarily improve the test perfor- mance, because there still exists a chance to see an unknown word at test time. This is known as the unknown word problem. In addition, increasing the shortlist size mostly leads to increasing rare words due to Zipf's Law.</p><p>These two problems are particularly critical in language understanding tasks such as factoid question answering ( <ref type="bibr" target="#b2">Bordes et al., 2015</ref>) where the words that we are interested in are often named en- tities which are usually unknown or rare words.</p><p>In a similar situation, where we have a limited information on how to call an object of interest, it seems that humans (and also some primates) have an efficient behavioral mechanism of drawing at- tention to the object: pointing (Matthews et al., 2012). Pointing makes it possible to deliver in- formation and to associate context to a particular object without knowing how to call it. In partic- ular, human infants use pointing as a fundamental communication tool <ref type="bibr">(Tomasello et al., 2007)</ref>.</p><p>In this paper, inspired by the pointing behav- ior of humans and recent advances in the atten-tion mechanism ( <ref type="bibr" target="#b0">Bahdanau et al., 2014</ref>) and the pointer networks ( , we pro- pose a novel method to deal with the rare or un- known word problem. The basic idea is that we can see many NLP problems as a task of predict- ing target text given context text, where some of the target words appear in the context as well. We observe that in this case we can make the model learn to point a word in the context and copy it to the target text, as well as when to point. For exam- ple, in machine translation, we can see the source sentence as the context, and the target sentence as what we need to predict. In <ref type="figure">Figure 1</ref>, we show an example depiction of how words can be copied from source to target in machine translation. Al- though the source and target languages are differ- ent, many of the words such as named entities are usually represented by the same characters in both languages, making it possible to copy. Similarly, in text summarization, it is natural to use some words in the original text in the summarized text as well.</p><p>Specifically, to predict a target word at each timestep, our model first determines the source of the word generation, that is, whether to take one from a predefined shortlist or to copy one from the context. For the former, we apply the typical softmax operation, and for the latter, we use the attention mechanism to obtain the pointing soft- max probability over the context words and pick the one of high probability. The model learns this decision so as to use the pointing only when the context includes a word that can be copied to the target. This way, our model can predict even the words which are not in the shortlist, as long as it appears in the context. Although some of the words still need to be labeled as UNK, i.e., if it is neither in the shortlist nor in the context, in ex- periments we show that this learning when and where to point improves the performance in ma- chine translation and text summarization. Guillaume and Cesar have a blue car in Lausanne.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Copy</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Copy Copy</head><p>French:</p><p>English:</p><p>Figure 1: An example of how copying can happen for machine translation. Common words that ap- pear both in source and the target can directly be copied from input to source. The rest of the un- known in the target can be copied from the input after being translated with a dictionary.</p><p>The rest of the paper is organized as follows. In the next section, we review the related works in- cluding pointer networks and previous approaches to the rare/unknown problem. In Section 3, we review the neural machine translation with atten- tion mechanism which is the baseline in our ex- periments. Then, in Section 4, we propose our method dealing with the rare/unknown word prob- lem, called the Pointer Softmax (PS). The exper- imental results are provided in the Section 5 and we conclude our work in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>The attention-based pointing mechanism is intro- duced first in the pointer networks ( ). In the pointer networks, the output space of the target sequence is constrained to be the obser- vations in the input sequence (not the input space). Instead of having a fixed dimension softmax out- put layer, softmax outputs of varying dimension is dynamically computed for each input sequence in such a way to maximize the attention probability of the target input. However, its applicability is rather limited because, unlike our model, there is no option to choose whether to point or not; it al- ways points. In this sense, we can see the pointer networks as a special case of our model where we always choose to point a context word.</p><p>Several approaches have been proposed towards solving the rare words/unknown words problem, which can be broadly divided into three categories. The first category of the approaches focuses on improving the computation speed of the softmax output so that it can maintain a very large vocabu- lary. Because this only increases the shortlist size, it helps to mitigate the unknown word problem, but still suffers from the rare word problem. The hierarchical softmax <ref type="bibr" target="#b14">(Morin and Bengio, 2005</ref>), importance sampling ( <ref type="bibr" target="#b1">Bengio and Senécal, 2008;</ref><ref type="bibr" target="#b11">Jean et al., 2014)</ref>, and the noise contrastive esti- mation ( <ref type="bibr" target="#b8">Gutmann and Hyvärinen, 2012;</ref><ref type="bibr" target="#b13">Mnih and Kavukcuoglu, 2013</ref>) methods are in the class.</p><p>The second category, where our proposed method also belongs to, uses information from the context. Notable works are ( <ref type="bibr" target="#b12">Luong et al., 2015)</ref> and ( <ref type="bibr" target="#b10">Hermann et al., 2015</ref>). In particular, ap- plying to machine translation task, ( <ref type="bibr" target="#b12">Luong et al., 2015</ref>) learns to point some words in source sen- tence and copy it to the target sentence, similarly to our method. However, it does not use atten- tion mechanism, and by having fixed sized soft-max output over the relative pointing range (e.g., -7, . . . , -1, 0, 1, . . . , 7), their model (the Posi- tional All model) has a limitation in applying to more general problems such as summarization and question answering, where, unlike machine trans- lation, the length of the context and the pointing locations in the context can vary dramatically. In question answering setting, ( <ref type="bibr" target="#b10">Hermann et al., 2015)</ref> have used placeholders on named entities in the context. However, the placeholder id is directly predicted in the softmax output rather than predict- ing its location in the context.</p><p>The third category of the approaches changes the unit of input/output itself from words to a smaller resolution such as characters <ref type="bibr" target="#b6">(Graves, 2013)</ref> or bytecodes ( <ref type="bibr" target="#b19">Sennrich et al., 2015;</ref><ref type="bibr" target="#b5">Gillick et al., 2015)</ref>. Although this approach has the main advantage that it could suffer less from the rare/unknown word problem, the training usually becomes much harder because the length of se- quences significantly increases.</p><p>Simultaneously to our work, (Gu et al., 2016) and <ref type="bibr" target="#b3">(Cheng and Lapata, 2016)</ref> proposed models that learn to copy from source to target and both papers analyzed their models on summarization tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Neural Machine Translation Model with Attention</head><p>As the baseline neural machine translation sys- tem, we use the model proposed by ( <ref type="bibr" target="#b0">Bahdanau et al., 2014</ref>) that learns to (soft-)align and translate jointly. We refer this model as NMT.</p><p>The encoder of the NMT is a bidirectional RNN ( <ref type="bibr">Schuster and Paliwal, 1997</ref>). The forward RNN reads input sequence x = (x 1 , . . . , x T ) in left-to-right direction, resulting in a sequence of hidden states (</p><formula xml:id="formula_0">− → h 1 , . . . , − → h T ).</formula><p>The backward RNN reads x in the reversed direction and outputs</p><formula xml:id="formula_1">( ← − h 1 , . . . , ← − h T ).</formula><p>We then concatenate the hidden states of forward and backward RNNs at each time step and obtain a sequence of annotation vectors</p><formula xml:id="formula_2">(h 1 , . . . , h T ) where h j = − → h j || ← − h j .</formula><p>Here, || denotes the concatenation operator. Thus, each an- notation vector h j encodes information about the j-th word with respect to all the other surrounding words in both directions.</p><p>In the decoder, we usually use gated recur- rent unit (GRU) ( <ref type="bibr" target="#b4">Chung et al., 2014)</ref>. Specifically, at each time-step t, the soft- alignment mechanism first computes the relevance weight e tj which determines the contribution of annotation vector h j to the t-th target word. We use a non-linear mapping f (e.g., MLP) which takes h j , the previous decoder's hidden state s t−1 and the previous output y t−1 as input:</p><formula xml:id="formula_3">e tj = f (s t−1 , h j , y t−1 ).</formula><p>The outputs e tj are then normalized as follows:</p><formula xml:id="formula_4">l tj = exp(e tj ) T k=1 exp(e tk ) .<label>(1)</label></formula><p>We call l tj as the relevance score, or the align- ment weight, of the j-th annotation vector.</p><p>The relevance scores are used to get the context vector c t of the t-th target word in the translation:</p><formula xml:id="formula_5">c t = T j=1 l tj h j ,</formula><p>The hidden state of the decoder s t is computed based on the previous hidden state s t−1 , the con- text vector c t and the output word of the previous time-step y t−1 :</p><formula xml:id="formula_6">s t = f r (s t−1 , y t−1 , c t ),<label>(2)</label></formula><p>where f r is GRU. We use a deep output layer ( <ref type="bibr" target="#b16">Pascanu et al., 2013</ref>) to compute the conditional distribution over words:</p><formula xml:id="formula_7">p(y t = a|y &lt;t , x) ∝ exp ψ a (Wo,bo) f o (s t , y t−1 , c t ) ,<label>(3)</label></formula><p>where W is a learned weight matrix and b is a bias of the output layer. f o is a single-layer feed- forward neural network. ψ (Wo,bo) (·) is a function that performs an affine transformation on its input. And the superscript a in ψ a indicates the a-th col- umn vector of ψ. The whole model, including both the encoder and the decoder, is jointly trained to maximize the (conditional) log-likelihood of target sequences given input sequences, where the training corpus is a set of (x n , y n )'s. <ref type="figure" target="#fig_1">Figure 2</ref> illustrates the ar- chitecture of the NMT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The Pointer Softmax</head><p>In this section, we introduce our method, called as the pointer softmax (PS), to deal with the rare and unknown words. The pointer softmax can be At each timestep, the model generates the attention weights l t . We use l t the encoder's hidden state to obtain the con- text c t . The decoder uses c t to predict a vector of probabilities for the words w t by using softmax.</p><p>applicable approach to many NLP tasks, because it resolves the limitations about unknown words for neural networks. It can be used in parallel with other existing techniques such as the large vocabu- lary trick <ref type="bibr" target="#b11">(Jean et al., 2014</ref>). Our model learns two key abilities jointly to make the pointing mech- anism applicable in more general settings: (i) to predict whether it is required to use the pointing or not at each time step and (ii) to point any lo- cation of the context sequence whose length can vary widely over examples. Note that the pointer networks (  are in lack of the ability (i), and the ability (ii) is not achieved in the models by <ref type="bibr" target="#b12">(Luong et al., 2015)</ref>.</p><p>To achieve this, our model uses two softmax output layers, the shortlist softmax and the loca- tion softmax. The shortlist softmax is the same as the typical softmax output layer where each dimension corresponds a word in the predefined word shortlist. The location softmax is a pointer network where each of the output dimension cor- responds to the location of a word in the context sequence. Thus, the output dimension of the loca- tion softmax varies according to the length of the given context sequence.</p><p>At each time-step, if the model decides to use the shortlist softmax, we generate a word w t from the shortlist. Otherwise, if it is expected that the context sequence contains a word which needs to be generated at the time step, we obtain the loca- tion of the context word l t from the location soft- max. The key to making this possible is decid- ing when to use the shortlist softmax or the lo- cation softmax at each time step. In order to ac- complish this, we introduce a switching network to the model. The switching network, which is a multilayer perceptron in our experiments, takes the representation of the context sequence (similar to the input annotation in NMT) and the previous hidden state of the output RNN as its input. It out- puts a binary variable z t which indicates whether to use the shortlist softmax (when z t = 1) or the location softmax (when z t = 0). Note that if the word that is expected to be generated at each time- step is neither in the shortlist nor in the context se- quence, the switching network selects the shortlist softmax, and then the shortlist softmax predicts UNK. The details of the pointer softmax model can be seen in <ref type="figure">Figure 3</ref> as well. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Encoder</head><p>Figure 3: A simple depiction of the Pointer Soft- max(PS) architecture. At each timestep as usuall t , c t and the w t for the words over the limited vocab- ulary(shortlist) is being generated. We have an ad- ditional switching variable z t that decides whether to use w t or copy the word from the input via l t . The final word prediction will be performed via pointer softmax f t which can either copy the word from the source or predict the word from the short- list vocabulary.</p><p>More specifically, our goal is to maximize the probability of observing the target word sequence y = (y 1 , y 2 , . . . , y Ty ) and the word generation source z = (z 1 , z 2 , . . . , z Ty ), given the context se- quence x = (x 1 , x 2 , . . . , x Tx ):</p><formula xml:id="formula_8">p θ (y, z|x) = Ty t=1 p θ (y t , z t |y &lt;t , z &lt;t , x).<label>(4)</label></formula><p>Note that the word observation y t can be either a word w t from the shortlist softmax or a loca- tion l t from the location softmax, depending on the switching variable z t . Considering this, we can factorize the above equation further</p><formula xml:id="formula_9">p(y, z|x) = t∈Tw p(w t , z t |(y, z) &lt;t , x) × t ∈T l p(l t , z t |(y, z) &lt;t , x). (5)</formula><p>Here, T w is a set of time steps where z t = 1, and T l is a set of time-steps where z t = 0. And, T w ∪T l = {1, 2, . . . , T y } and T w ∩ T l = ∅. We denote all previous observations at step t by (y, z) &lt;t . Note also that h t = f ((y, z) &lt;t ).</p><p>Then, the joint probabilities inside each product can be further factorized as follows:</p><formula xml:id="formula_10">p(w t , z t |(y, z) &lt;t ) = p(w t |z t = 1, (y, z) &lt;t ) × p(z t = 1|(y, z) &lt;t )<label>(6)</label></formula><formula xml:id="formula_11">p(l t , z t |(y, z) &lt;t ) = p(l t |z t = 0, (y, z) &lt;t ) × p(z t = 0|(y, z) &lt;t )<label>(7)</label></formula><p>here, we omitted x which is conditioned on all probabilities in the above. The switch probability is modeled as a multi- layer perceptron with binary output:</p><formula xml:id="formula_12">p(z t = 1|(y, z) &lt;t , x) = σ(f (x, h t−1 ; θ)) (8) p(z t = 0|(y, z) &lt;t , x) = 1 − σ(f (x, h t−1 ; θ)). (9)</formula><p>And p(w t |z t = 1, (y, z) &lt;t , x) is the shortlist soft- max and p(l t |z t = 0, (y, z) &lt;t , x) is the location softmax which can be a pointer network. σ(·) stands for the sigmoid function, σ(x) = 1 exp(-x)+1 . Given N such context and target sequence pairs, our training objective is to maximize the following log likelihood w.r.t. the model parameter θ arg max</p><formula xml:id="formula_13">θ 1 N N n=1 log p θ (y n , z n |x n ).<label>(10)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Basic Components of the Pointer Softmax</head><p>In this section, we discuss practical details of the three fundamental components of the pointer soft- max. The interactions between these components and the model is depicted in <ref type="figure">Figure 3</ref>.</p><p>Location Softmax l t : The location of the word to copy from source text to the target is predicted by the location softmax l t . The location soft- max outputs the conditional probability distribu- tion p(l t |z t = 0, (y, z) &lt;t , x). For models using the attention mechanism such as NMT, we can reuse the probability distributions over the source words in order to predict the location of the word to point. Otherwise we can simply use a pointer network of the model to predict the location.</p><p>Shortlist Softmax w t : The subset of the words in the vocabulary V is being predicted by the shortlist softmax w t .</p><p>Switching network d t : The switching network d t is an MLP with sigmoid output function that outputs a scalar probability of switching between l t and w t , and represents the conditional prob- ability distribution p(z t |(y, z) &lt;t , x). For NMT model, we condition the MLP that outputs the switching probability on the representation of the context of the source text c t and the hidden state of the decoder h t . Note that, during the training, d t is observed, and thus we do not have to sample. The output of the pointer softmax, f t will be the concatenation of the the two vectors, d t × w t and</p><formula xml:id="formula_14">(1 − d t ) × l t .</formula><p>At test time, we compute Eqn. (6) and (7) for all shortlist word w t and all location l t , and pick the word or location of the highest probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiments</head><p>In this section, we provide our main experimen- tal results with the pointer softmax on machine translation and summarization tasks. In our ex- periments, we have used the same baseline model and just replaced the softmax layer with pointer softmax layer at the language model. We use the Adadelta (Zeiler, 2012) learning rule for the train- ing of NMT models. The code for pointer softmax model is available at https://github.com/ caglar/pointer_softmax.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">The Rarest Word Detection</head><p>We construct a synthetic task and run some prelim- inary experiments in order to compare the results with the pointer softmax and the regular softmax's performance for the rare-words. The vocabulary size of our synthetic task is |V |= 600 using se- quences of length 7. The words in the sequences are sampled according to their unigram distribu-tion which has the form of a geometric distribu- tion. The task is to predict the least frequent word in the sequence according to unigram distribution of the words. During the training, the sequences are generated randomly. Before the training, val- idation and test sets are constructed with a fixed seed.</p><p>We use a GRU layer over the input sequence and take the last-hidden state, in order to get the summary c t of the input sequence. The w t , l t are only conditioned on c t , and the MLP pre- dicting the d t is conditioned on the latent repre- sentations of w t and l t . We use minibatches of size 250 using adam adaptive learning rate algo- rithm ( <ref type="bibr">Kingma and Adam, 2015</ref>) using the learn- ing rate of 8 × 10 −4 and hidden layers with 1000 units.</p><p>We train a model with pointer softmax where we assign pointers for the rarest 60 words and the rest of the words are predicted from the shortlist softmax of size 540. We observe that increasing the inverse temperature of the sigmoid output of d t to 2, in other words making the decisions of d t to become sharper, works better, i.e.</p><formula xml:id="formula_15">d t = σ(2x).</formula><p>At the end of training with pointer softmax we obtain the error rate of 17.4% and by using soft- max over all 600 tokens, we obtain the error-rate of 48.2%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Summarization</head><p>In these series of experiments, we use the anno- tated Gigaword corpus as described in <ref type="bibr" target="#b17">(Rush et al., 2015)</ref>. Moreover, we use the scripts that are made available by the authors of ( <ref type="bibr" target="#b17">Rush et al., 2015)</ref> 1 to preprocess the data, which results to approxi- mately 3.8M training examples. This script gen- erates about 400K validation and an equal number of test examples, but we use a randomly sampled subset of 2000 examples each for validation and testing. We also have made small modifications to the script to extract not only the tokenized words, but also system-generated named-entity tags. We have created two different versions of training data for pointers, which we call UNK-pointers data and entity-pointers data respectively.</p><p>For the UNK-pointers data, we trim the vocabu- lary of the source and target data in the training set and replace a word by the UNK token whenever a word occurs less than 5 times in either source or target data separately. Then, we create pointers from each UNK token in the target data to the posi- tion in the corresponding source document where the same word occurs in the source, as seen in the data before UNKs were created. It is possible that the source can have an UNK in the matching posi- tion, but we still created a pointer in this scenario as well. The resulting data has 2.7 pointers per 100 examples in the training set and 9.1 pointers rate in the validation set.</p><p>In the entity-pointers data, we exploit the named-entity tags in the annotated corpus and first anonymize the entities by replacing them with an integer-id that always starts from 1 for each doc- ument and increments from left to right. Entities that occur more than once in a single document share the same id. We create the anonymization at token-level, so as to allow partial entity matches between the source and target for multi-token en- tities. Next, we create a pointer from the target to source on similar lines as before, but only for exact matches of the anonymized entities. The re- sulting data has 161 pointers per 100 examples in the training set and 139 pointers per 100 examples in the validation set.</p><p>If there are multiple matches in the source, either in the UNK-pointers data or the entity- pointers data, we resolve the conflict in favor of the first occurrence of the matching word in the source document. In the UNK data, we model the UNK tokens on the source side using a sin- gle placeholder embedding that is shared across all documents, and in the entity-pointers data, we model each entity-id in the source by a distinct placeholder, each of which is shared across all documents.</p><p>In all our experiments, we use a bidirectional GRU-RNN ( <ref type="bibr" target="#b4">Chung et al., 2014</ref>) for the encoder and a uni-directional RNN for the decoder. To speed-up training, we use the large-vocabulary trick (Jean et al., 2014) where we limit the vocab- ulary of the softmax layer of the decoder to 2000 words dynamically chosen from the words in the source documents of each batch and the most com- mon words in the target vocabulary. In both ex- periments, we fix the embedding size to 100 and the hidden state dimension to 200. We use pre- trained word2vec vectors trained on the same cor- pus to initialize the embeddings, but we finetuned them by backpropagating through the embeddings during training. Our vocabulary sizes are fixed to 125K for source and 75K for target for both exper-iments.</p><p>We use the reference data for pointers for the model only at the training time. During the test time, the switch makes a decision at every timestep on which softmax layer to use.</p><p>For evaluation, we use full-length Rouge F1 us- ing the official evaluation tool 2 . In their work, the authors of ( <ref type="bibr" target="#b0">Bahdanau et al., 2014</ref>) use full-length Rouge Recall on this corpus, since the maximum length of limited-length version of Rouge recall of 75 bytes (intended for DUC data) is already long for Gigaword summaries. However, since full-length Recall can unfairly reward longer sum- maries, we also use full-length F1 in our experi- ments for a fair comparison between our models, independent of the summary length.</p><p>The experimental results comparing the Pointer Softmax with NMT model are displayed in <ref type="table" target="#tab_0">Ta- ble 1</ref> for the UNK pointers data and in <ref type="table" target="#tab_1">Table 2</ref> for the entity pointers data. As the experiments show, pointer softmax improves over the baseline NMT on both UNK data and entities data. Our hope was that the improvement would be larger for the entities data since the incidence of point- ers was much greater. However, it turns out this is not the case, and we suspect the main reason is anonymization of entities which removed data- sparsity by converting all entities to integer-ids that are shared across all documents. We believe that on de-anonymized data, our model could help more, since the issue of data-sparsity is more acute in this case.   In <ref type="table" target="#tab_2">Table 3</ref>, we provide the results for summa- rization on Gigaword corpus in terms of recall as also similar comparison done by <ref type="bibr" target="#b17">(Rush et al., 2015)</ref>. We observe improvements on all the scores with the addition of pointer softmax. Let us note that, since the test set of ( <ref type="bibr" target="#b17">Rush et al., 2015)</ref> is not publicly available, we sample 2000 texts with their summaries without replacement from the valida- tion set and used those examples as our test set.</p><p>In <ref type="table">Table 4</ref> we present a few system gener- ated summaries from the Pointer Softmax model trained on the UNK pointers data. From those ex- amples, it is apparent that the model has learned to accurately point to the source positions whenever it needs to generate rare words in the summary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Neural Machine Translation</head><p>In our neural machine translation (NMT) experi- ments, we train NMT models with attention over the Europarl corpus ( <ref type="bibr" target="#b0">Bahdanau et al., 2014</ref>) over the sequences of length up to 50 for English to French translation. <ref type="bibr">3</ref> . All models are trained with early-stopping which is done based on the negative log-likelihood (NLL) on the development set. Our evaluations to report the performance of our mod- els are done on newstest2011 by using BLUE score. <ref type="bibr">4</ref> We use 30, 000 tokens for both the source and the target language shortlist vocabularies (1 of the token is still reserved for the unknown words). The whole corpus contains 134, 831 unique En- glish words and 153, 083 unique French words. We have created a word-level dictionary from French to English which contains translation of 15,953 words that are neither in shortlist vocab- ulary nor dictionary of common words for both the source and the target. There are about 49, 490 words shared between English and French parallel corpora of Europarl. <ref type="table">Table 4</ref>: Generated summaries from NMT with PS. Boldface words are the words copied from the source.</p><p>Source #1 china 's tang gonghong set a world record with a clean and jerk lift of ### kilograms to win the women 's over-## kilogram weightlifting title at the asian games on tuesday . Target #1 china 's tang &lt;unk&gt;,sets world weightlifting record NMT+PS #1 china 's tang gonghong wins women 's weightlifting weightlift- ing title at asian games Source #2</p><p>owing to criticism , nbc said on wednesday that it was ending a three-month-old experiment that would have brought the first liquor advertisements onto national broadcast network television .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Target #2</head><p>advertising : nbc retreats from liquor commercials NMT+PS #2 nbc says it is ending a three-month-old experiment Source #3 a senior trade union official here wednesday called on ghana 's government to be " mindful of the plight " of the ordinary people in the country in its decisions on tax increases . <ref type="table" target="#tab_2">Target #3</ref> tuc official,on behalf of ordinary ghanaians NMT+PS #3</p><p>ghana 's government urged to be mindful of the plight</p><p>During the training, in order to decide whether to pick a word from the source sentence using at- tention/pointers or to predict the word from the short-list vocabulary, we use a simple heuristic. If the word is not in the short-list vocabulary, we first check if the word y t itself appears in the source sentence. If it is not, we check if the word it- self is in the source sentence by using the shared words lookup table for the source and the target language. If the word is in the source sentence, we then use the location of the word in the source as the target. Otherwise we check if one of the English senses from the cross-language dictionary of the French word is in the source. If it is in the source sentence, then we use the location of that word as our translation. Otherwise we just use the argmax of l t as the target.</p><p>For switching network d t , we observed that us- ing a two-layered MLP with noisy-tanh activation ) function with residual con- nection from the lower layer ( <ref type="bibr" target="#b9">He et al., 2015</ref>) ac- tivation function to the upper hidden layers im- proves the BLEU score about 1 points over the d t using ReLU activation function. We initialized the biases of the last sigmoid layer of d t to −1 such that if d t becomes more biased toward choos- ing the shortlist vocabulary at the beginning of the training. We renormalize the gradients if the norm of the gradients exceed 1 ( <ref type="bibr" target="#b15">Pascanu et al., 2012</ref>).</p><p>In <ref type="table" target="#tab_3">Table 5</ref>, we provided the result of NMT with pointer softmax and we observe about 3.6 BLEU score improvement over our baseline.</p><p>In <ref type="figure" target="#fig_3">Figure 4</ref>, we show the validation curves of the NMT model with attention and the NMT model with shortlist-softmax layer. Pointer soft- max converges faster in terms of number of mini- batch updates and achieves a lower validation negative-log-likelihood (NLL) (63.91) after 200k updates over the Europarl dataset than the NMT model with shortlist softmax trained for 400k minibatch updates <ref type="bibr">(65.26)</ref>. Pointer softmax con- verges faster than the model using the short- list softmax, because the targets provided to the pointer softmax also acts like guiding hints to the attention.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper, we propose a simple extension to the traditional soft attention-based shortlist soft- max by using pointers over the input sequence. We show that the whole model can be trained jointly with single objective function. We observe no- ticeable improvements over the baselines on ma- chine translation and summarization tasks by us- ing pointer softmax. By doing a very simple mod- ification over the NMT, our model is able to gen- eralize to the unseen words and can deal with rare- words more efficiently. For the summarization task on Gigaword dataset, the pointer softmax was able to improve the results even when it is used together with the large-vocabulary trick. In the case of neural machine translation, we observed that the training with the pointer softmax is also improved the convergence speed of the model as well. For French to English machine translation on Europarl corpora, we observe that using the pointer softmax can also improve the training con- vergence of the model.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Guillaume et Cesar ont une voiture bleue a Lausanne.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: A depiction of neural machine translation architecture with attention. At each timestep, the model generates the attention weights l t. We use l t the encoder's hidden state to obtain the context c t. The decoder uses c t to predict a vector of probabilities for the words w t by using softmax.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: A comparison of the validation learningcurves of the same NMT model trained with pointer softmax and the regular softmax layer. As can be seen from the figures, the model trained with pointer softmax converges faster than the regular softmax layer. Switching network for pointer softmax in this Figure uses ReLU activation function.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>Results on Gigaword Corpus when point-
ers are used for UNKs in the training data, using 
Rouge-F1 as the evaluation metric. 

Rouge-1 Rouge-2 Rouge-L 
NMT + lvt 
34.87 
16.54 
32.27 
NMT + lvt + PS 35.19 
16.66 
32.51 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Results on anonymized Gigaword Corpus 
when pointers are used for entities, using Rouge-
F1 as the evaluation metric. 
Rouge-1 Rouge-2 Rouge-L 
NMT + lvt 
34.89 
16.78 
32.37 
NMT + lvt + PS 35.11 
16.76 
32.55 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 3 : Results on Gigaword Corpus for model- ing UNK's with pointers in terms of recall.</head><label>3</label><figDesc></figDesc><table>Rouge-1 Rouge-2 Rouge-L 
NMT + lvt 
36.45 
17.41 
33.90 
NMT + lvt + PS 37.29 
17.75 
34.70 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 5 :</head><label>5</label><figDesc></figDesc><table>Europarl Dataset (EN-FR) 

BLEU-4 
NMT 
20.19 
NMT + PS 23.76 

</table></figure>

			<note place="foot" n="1"> https://github.com/facebook/NAMAS</note>

			<note place="foot" n="2"> http://www.berouge.com/Pages/default. aspx</note>

			<note place="foot" n="3"> In our experiments, we use an existing code, provided in https://github.com/kyunghyuncho/ dl4mt-material, and on the original model we only changed the last softmax layer for our experiments 4 We compute the BLEU score using the multi-blue.perl script from Moses on tokenized sentence pairs.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Neural machine translation by jointly learning to align and translate</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dzmitry</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<idno>abs/1409.0473</idno>
		<imprint>
			<date type="published" when="2014" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Adaptive importance sampling to accelerate training of a neural probabilistic language model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeansébastien</forename><surname>Senécal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="713" to="722" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>Neural Networks</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bordes</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1506.02075</idno>
		<title level="m">Antoine Bordes, Nicolas Usunier, Sumit Chopra, and Jason Weston. 2015. Largescale simple question answering with memory networks</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianpeng</forename><surname>Lapata2016</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mirella</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><surname>Lapata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cho</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1603.07252</idno>
		<idno>arXiv:1406.1078</idno>
		<title level="m">Dzmitry Bahdanau, Fethi Bougares, Holger Schwenk, and Yoshua Bengio. 2014. Learning phrase representations using rnn encoder-decoder for statistical machine translation</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
	<note>Neural summarization by extracting sentences and words</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Empirical evaluation of gated recurrent neural networks on sequence modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chung</forename></persName>
		</author>
		<idno>abs/1412.3555</idno>
		<imprint>
			<date type="published" when="2014" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Gillick</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1512.00103</idno>
		<title level="m">Dan Gillick, Cliff Brunk, Oriol Vinyals, and Amarnag Subramanya. 2015. Multilingual language processing from bytes</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Generating sequences with recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1308.0850</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Incorporating copying mechanism in sequence-to-sequence learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Gu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1603.06393</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Noise-contrastive estimation of unnormalized statistical models, with applications to natural image statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Gulcehre</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1603.00391</idno>
	</analytic>
	<monogr>
		<title level="m">Noisy activation functions</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="307" to="361" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>He</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1512.03385</idno>
		<title level="m">Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2015. Deep residual learning for mage recognition</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Teaching machines to read and comprehend</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1684" to="1692" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On using very large target vocabulary for neural machine translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Jean</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1412.2007</idno>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representation</title>
		<editor>Diederik P Kingma and Jimmy Ba Adam</editor>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
	<note>A method for stochastic optimization</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Addressing the rare word problem in neural machine translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Luong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Origins of the human pointing gesture: a training study</title>
		<editor>Matthews et al.2012] Danielle Matthews, Tanya Behne, Elena Lieven, and Michael Tomasello</editor>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="817" to="829" />
		</imprint>
	</monogr>
	<note>Proceedings of ACL</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Learning word embeddings efficiently with noise-contrastive estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andriy</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="2265" to="2273" />
		</imprint>
	</monogr>
	<note>Mnih and Kavukcuoglu2013</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Hierarchical probabilistic neural network language model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bengio2005] Frederic</forename><surname>Morin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Morin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Aistats</title>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="246" to="252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pascanu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1211.5063</idno>
		<title level="m">Razvan Pascanu, Tomas Mikolov, and Yoshua Bengio. 2012. On the difficulty of training recurrent neural networks</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pascanu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1312.6026</idno>
		<title level="m">How to construct deep recurrent neural networks</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">A neural attention model for abstractive sentence summarization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sumit</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<idno>abs/1509.00685</idno>
		<imprint>
			<date type="published" when="2015" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
	<note>Rush et al.2015</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Bidirectional recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kuldip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Paliwal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="2673" to="2681" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
	<note>Signal Processing</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sennrich</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1508.07909</idno>
		<title level="m">Neural machine translation of rare words with subword units</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Theano: A Python framework for fast computation of mathematical expressions</title>
		<idno>abs/1605.02688</idno>
	</analytic>
	<monogr>
		<title level="j">Child development</title>
		<editor>Tomasello et al.2007] Michael Tomasello, Malinda Carpenter, and Ulf Liszkowski</editor>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="705" to="722" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
<note type="report_type">arXiv e-prints</note>
	<note>A new look at infant pointing</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vinyals</surname></persName>
		</author>
		<title level="m">Oriol Vinyals, Meire Fortunato, and Navdeep Jaitly. 2015. Pointer networks. In Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="2674" to="2682" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Matthew D Zeiler</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1212.5701</idno>
		<title level="m">Adadelta: an adaptive learning rate method</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">We acknowledge the support of the following organizations for research funding and computing support: NSERC, Samsung, Calcul Québec, Compute Canada, the Canada Research Chairs and CIFAR. C. G. thanks for IBM T</title>
		<ptr target="http://deeplearning.net/software/theano/forscientificcomputing" />
	</analytic>
	<monogr>
		<title level="m">Watson Research for funding this research during his internship between October</title>
		<imprint>
			<publisher>Theano Development Team</publisher>
			<date type="published" when="2015-01" />
		</imprint>
	</monogr>
	<note>Acknowledgments We would also like to thank the developers of Theano 5</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
