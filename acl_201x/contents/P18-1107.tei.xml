<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/ana/installs/grobid/grobid-0.5.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-04-18T12:45+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Prefix Lexicalization of Synchronous CFGs using Synchronous TAG</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computational Linguistics</publisher>
				<availability status="unknown"><p>Copyright Association for Computational Linguistics</p>
				</availability>
				<date>July 15-20, 2018. 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Logan</forename><surname>Born</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Simon Fraser University School of Computing Science</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anoop</forename><surname>Sarkar</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Simon Fraser University School of Computing Science</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Prefix Lexicalization of Synchronous CFGs using Synchronous TAG</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers)</title>
						<meeting>the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers) <address><addrLine>Melbourne, Australia</addrLine></address>
						</meeting>
						<imprint>
							<publisher>Association for Computational Linguistics</publisher>
							<biblScope unit="page" from="1160" to="1170"/>
							<date type="published">July 15-20, 2018. 2018</date>
						</imprint>
					</monogr>
					<note>1160</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We show that an ε-free, chain-free synchronous context-free grammar (SCFG) can be converted into a weakly equivalent synchronous tree-adjoining grammar (STAG) which is prefix lexicalized. This transformation at most doubles the gram-mar&apos;s rank and cubes its size, but we show that in practice the size increase is only quadratic. Our results extend Greibach normal form from CFGs to SCFGs and prove new formal properties about SCFG, a formalism with many applications in natural language processing.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Greibach normal form (GNF; <ref type="bibr" target="#b11">Greibach, 1965)</ref> is an important construction in formal language theory which allows every context-free grammar (CFG) to be rewritten so that the first charac- ter of each rule is a terminal symbol. A gram- mar in GNF is said to be prefix lexicalized, be- cause the prefix of every production is a lexi- cal item. GNF has a variety of theoretical and practical applications, including for example the proofs of the famous theorems due to <ref type="bibr">Shamir and Chomsky-Schützenberger (Shamir, 1967;</ref><ref type="bibr" target="#b4">Chomsky and Schützenberger, 1963;</ref><ref type="bibr" target="#b1">Autebert et al., 1997</ref>). Other applications of prefix lexicaliza- tion include proving coverage of parsing algo- rithms ( <ref type="bibr" target="#b10">Gray and Harrison, 1972</ref>) and decidability of equivalence problems <ref type="bibr" target="#b5">(Christensen et al., 1995)</ref>.</p><p>By using prefix lexicalized synchronous context-free grammars (SCFGs), <ref type="bibr" target="#b29">Watanabe et al. (2006)</ref> and <ref type="bibr" target="#b25">Siahbani et al. (2013)</ref> obtain asymp- totic and empirical speed improvements on a machine translation task. Using a prefix lexical- ized grammar ensures that target sentences can be generated from left to right, which allows the use of beam search to constrain their decoder's search space as it performs a left-to-right traversal of translation hypotheses. To achieve these results, new grammars had to be heuristically constrained to include only prefix lexicalized productions, as there is at present no way to automatically convert an existing SCFG to a prefix lexicalized form.</p><p>This work investigates the formal properties of prefix lexicalized synchronous grammars as em- ployed by <ref type="bibr" target="#b29">Watanabe et al. (2006)</ref> and <ref type="bibr" target="#b25">Siahbani et al. (2013)</ref>, which have received little theoreti- cal attention compared to non-synchronous prefix lexicalized grammars. To this end, we first prove that SCFG is not closed under prefix lexicaliza- tion. Our main result is that there is a method for prefix lexicalizing an SCFG by converting it to an equivalent grammar in a different formal- ism, namely synchronous tree-adjoining grammar (STAG) in regular form. Like the GNF transfor- mation for CFGs, our method at most cubes the grammar size, but we show empirically that the size increase is only quadratic for grammars used in existing NLP tasks. The rank is at most dou- bled, and we maintain O(n 3k ) parsing complex- ity for grammars of rank k. We conclude that al- though SCFG does not have a prefix lexicalized normal form like GNF, our conversion to prefix lexicalized STAG offers a practical alternative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">SCFG</head><p>An SCFG is a tuple G = (N, Σ, P, S) where N is a finite nonterminal alphabet, Σ is a finite termi- nal alphabet, S ∈ N is a distinguished nontermi- nal called the start symbol, and P is a finite set of synchronous rules of the form (1) A 1 → α 1 , A 2 → α 2 for some A 1 , A 2 ∈ N and strings α 1 , α 2 ∈ (N ∪ Σ) * . 1 Every nonterminal which appears in α 1 1 A variant formalism exists which requires that A1 = A2; this is called syntax-directed transduction grammar ( <ref type="bibr" target="#b16">Lewis and Stearns, 1968)</ref> or syntax-directed translation schemata <ref type="bibr" target="#b0">(Aho and Ullman, 1969)</ref>. This variant is weakly equivalent to SCFG, but SCFG has greater strong generative capacity ( <ref type="bibr" target="#b6">Crescenzi et al., 2015</ref>  must be linked to exactly one nonterminal in α 2 , and vice versa. We write these links using numer- ical annotations, as in <ref type="formula">(2)</ref>.</p><formula xml:id="formula_0">(2) A → A 1 B 2 , B → B 2 A 1</formula><p>An SCFG has rank k if no rule in the grammar contains more than k pairs of linked nodes. In every step of an SCFG derivation, we rewrite one pair of linked nonterminals with a rule from P , in essentially the same way we would rewrite a single nonterminal in a non-synchronous CFG. For example, (3) shows linked A and B nodes be- ing rewritten using (2):</p><formula xml:id="formula_1">(3) X 1 A 2 , B 2 Y 1 ⇒ X 1 A 2 B 3 , B 3 A 2 Y 1</formula><p>Note how the 1 and 2 in rule (2) are renumbered to 2 and 3 during rewriting, to avoid an ambigu- ity with the 1 already present in the derivation.</p><p>An SCFG derivation is complete when it con- tains no more nonterminals to rewrite. A com- pleted derivation represents a string pair generated by the grammar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">STAG</head><p>An STAG <ref type="bibr" target="#b24">(Shieber, 1994)</ref> is a tuple G = (N, Σ, T, S) where N is a finite nonterminal al- phabet, Σ is a finite terminal alphabet, S ∈ N is a distinguished nonterminal called the start symbol, and T is a finite set of synchronous tree pairs of the form</p><formula xml:id="formula_2">(4) t 1 , t 2</formula><p>where t 1 and t 2 are elementary trees as defined in <ref type="bibr" target="#b12">Joshi et al. (1975)</ref>. A substitution site is a leaf node marked by ↓ which may be rewritten by an- other tree; a foot node is a leaf marked by * that may be used to rewrite a tree-internal node. Ev- ery substitution site in t 1 must be linked to ex- actly one nonterminal in t 2 , and vice versa. As in SCFG, we write these links using numbered an- notations; rank is defined for STAG the same way as for SCFG.</p><p>In every step of an STAG derivation, we rewrite one pair of linked nonterminals with a tree pair from T , using the same substitution and adjunc- tion operations defined for non-synchronous TAG. For example, <ref type="figure" target="#fig_0">Figure 1</ref> shows linked A and B nodes being rewritten and the tree pair resulting from this operation. See <ref type="bibr" target="#b12">Joshi et al. (1975)</ref> for de- tails about the underlying TAG formalism.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Terminology</head><p>We use synchronous production as a cover term for either a synchronous rule in an SCFG or a syn- chronous tree pair in an STAG.</p><p>Following <ref type="bibr" target="#b25">Siahbani et al. (2013)</ref>, we refer to the left half of a synchronous production as the source side, and the right half as the target side; this terminology captures the intuition that syn- chronous grammars model translational equiva- lence between a source phrase and its translation into a target language. Other authors refer to the two halves as the left and right components <ref type="bibr" target="#b6">(Crescenzi et al., 2015)</ref> or, viewing the grammar as a transducer, the input and the output <ref type="bibr" target="#b8">(Engelfriet et al., 2017)</ref>.</p><p>We call a grammar ε-free if it contains no pro- ductions whose source or target side produces only the empty string ε.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Synchronous Prefix Lexicalization</head><p>Previous work ( <ref type="bibr" target="#b29">Watanabe et al., 2006;</ref><ref type="bibr" target="#b25">Siahbani et al., 2013)</ref> has shown that it is useful for the tar- get side of a synchronous grammar to start with a terminal symbol. For this reason, we define a syn- chronous grammar to be prefix lexicalized when the leftmost character of the target side 2 of every synchronous production in that grammar is a ter- minal symbol.</p><p>Formally, this means that every synchronous rule in a prefix lexicalized SCFG (PL-SCFG) is of the form</p><formula xml:id="formula_3">(5) A 1 → α 1 , A 2 → aα 2</formula><p>where A 1 , A 2 ∈ N , α 1 , α 2 ∈ (N ∪Σ) * and a ∈ Σ. Every synchronous tree pair in a prefix lexical- ized STAG (PL-STAG) is of the form (6)</p><formula xml:id="formula_4">A 1 α 1 , A 2 aα 2</formula><p>where A 1 , A 2 ∈ N , α 1 , α 2 ∈ (N ∪Σ) * and a ∈ Σ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Closure under Prefix Lexicalization</head><p>We now prove that the class SCFG is not closed under prefix lexicalization. Theorem 1. There exists an SCFG which cannot be converted to an equivalent PL-SCFG.</p><p>Proof. The SCFG in <ref type="formula">(7)</ref> generates the language</p><formula xml:id="formula_5">L = {{a i b j c i , b j a i | i ≥ 0, j ≥ 1}</formula><p>, but this lan- guage cannot be generated by any PL-SCFG:</p><formula xml:id="formula_6">(7) S → A 1 , S → A 1 A → aA 1 c, A → A 1 a A → bB 1 , A → bB 1 A → b, A → b B → bB 1 , B → bB 1 B → b, B → b</formula><p>Suppose, for the purpose of contradiction, that some PL-SCFG does generate L; call this gram- mar G. Then the following derivations must all be possible in G for some nontermials U, V, X, Y :</p><formula xml:id="formula_7">i) U 1 , V 1 ⇒ * b k U 1 b m , b n V 1 b p , where k + m = n + p and n ≥ 1 ii) X 1 , Y 1 ⇒ * a q X 1 c q , a r Y 1 a s ,</formula><p>where q = r + s and r ≥ 1</p><formula xml:id="formula_8">iii) S 1 , S 1 ⇒ * α 1 X 1 α 2 , bα 3 Y 1 α 4 , where α 1 , ..., α 4 ∈ (N ∪ Σ) * iv) X 1 , Y 1 ⇒ * α 5 U 1 α 6 , α 7 V 1 α 8 , where α 5 , α 6 , α 8 ∈ (N ∪ Σ) * , α 7 ∈ Σ(N ∪ Σ) *</formula><p>i and ii follow from the same arguments used in the pumping lemma for (non-synchronous) context free languages ( <ref type="bibr" target="#b2">Bar-Hillel et al., 1961)</ref>: strings in L can contain arbitrarily many as, bs, and cs, so there must exist some pumpable cycles which generate these characters. In i, k + m = n + p because the final derived strings must con- tain an equal number of bs, and n ≥ 1 because G is prefix lexicalized; in ii the constraints on q, r and s follow likewise from L. iii follows from the fact that, in order to pump on the cycle in ii, this cycle must be reachable from the start symbol. iv follows from the fact that a context-free produc- tion cannot generate a discontinuous span. Once the cycle in i has generated a b, it is impossible for ii to generate an a on one side of the b and a c on the other. Therefore i must always be derived strictly later than ii, as shown in iv.</p><p>Now we obtain a contradiction. Given that G can derive all of i through iv, the following deriva- tion is also possible:</p><formula xml:id="formula_9">(8) S 1 , S 1 ⇒ * α 1 X 1 α 2 , bα 3 Y 1 α 4 ⇒ * α 1 a q X 1 c q α 2 , bα 3 a r Y 1 a s α 4 ⇒ * α 1 a q α 5 U 1 α 6 c q α 2 , bα 3 a r α 7 V 1 α 8 a s α 4 ⇒ * α 1 a q α 5 b k U 1 b m α 6 c q α 2 , bα 3 a r α 7 b n V 1 b p α 8 a s α 4</formula><p>But since n, r ≥ 1, the target string derived this way contains an a before a b and does not belong to L. This is a contradiction: if G is a PL-SCFG then it must generate i through iv, but if so then it also generates strings which do not belong to L. Thus no PL-SCFG can generate L, and SCFG must not be closed under prefix lexicalization.</p><p>There also exist grammars which cannot be pre- fix lexicalized because they contain cyclic chain rules. If an SCFG can derive something of the form X 1 , Y 1 ⇒ * xX 1 , Y 1 , then it can generate arbitrarily many symbols in the source string without adding anything to the target string. Prefix lexicalizing the grammar would force it to generate some terminal symbol in the target string at each step of the derivation, making it unable to generate the original language where a source string may be unboundedly longer than its corre- sponding target. We call an SCFG chain-free if it does not contain a cycle of chain rules of this form. The remainder of this paper focuses on chain-free grammars, like (7), which cannot be converted to PL-SCFG despite containing no such cycles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Prefix Lexicalization using STAG</head><p>We now present a method for prefix lexicalizing an SCFG by converting it to an STAG.</p><formula xml:id="formula_10">X 1 , A 1 ⇒ α 1 Y 1 1 β 1 , B 1 1 γ 1 ⇒ α 1 α 2 Y 2 1 β 2 β 1 , B 2 1 γ 2 γ 1 ⇒ * α 1 · · · α t Y t 1 β t · · · β 1 , B t 1 γ t · · · γ 1 ⇒ α 1 · · · α t α t+1 β t · · · β 1 , aγ t+1 γ t · · · γ 1</formula><p>Figure 2: A target-side terminal leftmost derivation. a ∈ Σ; X, A, Yi, Bi ∈ N ; and αi, βi, γi ∈ (N ∪ Σ) * .</p><formula xml:id="formula_11">S XA α 1 , S XA aα 2 (a) X → α1, A → aα2 S XA Y XA 1 α 1 , S XA aα 2 B XA ↓ 1 (b) Y → α1, B → aα2 Z XA Y XA 1 α 1 Z XA * β 1 , C XA α 2 B XA ↓ 1 (c) Y → α1Z 1 β1, B → C 1 α2 Y XA α 1 Y XA * β 1 , C XA α 2 (d) X → α1Y 1 β1, A → C 1 α2</formula><p>Figure 3: Tree-pairs in GXA and the rules in G from which they derive.</p><p>Theorem 2. Given a rank-k SCFG G which is ε- free and chain-free, an STAG H exists such that H is prefix lexicalized and L(G) = L(H). The rank of H is at most 2k, and |H| = O(|G| 3 ).</p><p>Proof. Let G = (N, Σ, P, S) be an ε-free, chain- free SCFG. We provide a constructive method for prefix lexicalizing the target side of G.</p><p>We begin by constructing an intermediate grammar G XA for each pair of nonterminals X, A ∈ N \ {S}. For each pair X, A ∈ N \ {S}, G XA will be constructed to generate the language of sentential forms derivable from X 1 , A 1 via a target-side terminal leftmost derivation (TTLD). A TTLD is a derivation of the form in <ref type="figure">Figure 2</ref>, where the leftmost nontermi- nal in the target string is expanded until it produces a terminal symbol as the first char- acter. We write • For each rule in G of the form</p><formula xml:id="formula_12">X 1 , A 1 ⇒ * T T LD u, v to mean that X 1 , A 1 derives u, v by way of a TTLD; in this notation, L XA = {{u, v||X 1 , A 1 ⇒ * T T LD u,</formula><formula xml:id="formula_13">X → α 1 , A → aα 2 , a ∈ Σ, α i ∈ (N ∪Σ) * ,</formula><p>we add a tree pair of the form in <ref type="figure">Figure 3</ref>(a).</p><p>• For each rule in G of the form</p><formula xml:id="formula_14">Y → α 1 , B → aα 2 , a ∈ Σ, α i ∈ (N ∪Σ) * , Y, B ∈ N \ {S},</formula><p>we add a tree pair of the form in <ref type="figure">Figure 3</ref>(b).</p><p>• For each rule in G of the form As a special case, if Y = Z we collapse the root node and adjunction site to produce a tree pair of the following form:</p><formula xml:id="formula_15">Y → α 1 Z 1 β 1 , B → C 1 α 2 , Y, Z, B, C ∈ N \ {S}, α i , β i ∈ (N ∪ Σ) * ,</formula><p>(9)</p><formula xml:id="formula_16">Z XA 1 α 1 Z XA * β 1 , C XA α 2 B XA ↓ 1 • For each rule in G of the form X → α 1 Y 1 β 1 , A → C 1 α 2 , Y, C ∈ N , α i , β i ∈ (N ∪ Σ) * ,</formula><p>we add a tree pair of the form in <ref type="figure">Figure 3(d)</ref>.</p><formula xml:id="formula_17">A → B 2 cA 1 , A → A 1 cB 2 A AA 1 B ↓ 2 c A AA * , A AA c B ↓ 2 A AA ↓ 1</formula><p>Figure 4: An SCFG rule and a tree pair based off that rule, taken from an intermediate grammar GAA. The tree pair is formed according to the pattern illustrated in <ref type="figure">Figure 3</ref>(c). Ob- serve that the B nodes retain the link they bore in the original rule. This link is not functional in the intermediate grammar (that is, it cannot be used for synchronous rewriting) because B / ∈ NAA, but it will be functional when this tree pair is added to the final grammar H. Proof. This can be shown by induction over derivations of increasing length. The proof is straightforward but very long, so we provide only a sketch; the complete proof is provided in the sup- plementary material.</p><p>As a base case, observe that a tree of the shape in <ref type="figure">Figure 3</ref>(a) corresponds straightforwardly to the derivation (10)</p><formula xml:id="formula_18">X 1 , A 1 ⇒ α 1 , aα 2</formula><p>which is a TTLD starting from X, A. By con- struction, therefore, every TTLD of the shape in (10) corresponds to some tree in G XA of shape 3(a); likewise every derivation in G XA comprising a single tree of shape 3(a) corresponds to a TTLD of the shape in (10). As a second base case, note that a tree of the shape in <ref type="figure">Figure 3(b)</ref> corresponds to the last step of a TTLD like (11):</p><formula xml:id="formula_19">(11) X 1 , A 1 ⇒ * T T LD uY 1 v, B 1 w ⇒ uα 1 v, aα 2 w</formula><p>In the other direction, the last step of any TTLD of the shape in (11) will involve some rule of the shape Y → α 1 , B → aα 2 ; by construction G XA must contain a corresponding tree pair of shape 3(b). Together, these base cases establish a one-to- one correspondence between single-tree deriva- tions in G XA and the last step of a TTLD starting from X, A. Now, assume that the last n steps of every TTLD starting from X, A correspond to some derivation over n trees in G XA , and vice versa. Then the last n + 1 steps of that TTLD will also correspond to some n + 1 tree derivation in G XA , and vice versa.</p><p>To see this, consider the step n + 1 steps before the end of the TTLD. This step may be in the mid- dle of the derivation, or it may be the first step of the derivation. If it is in the middle, then this step must involve a rule of the shape</p><formula xml:id="formula_20">(12) Y → α 1 Z 1 β 1 , B → C 1 α 2</formula><p>The existence of such a rule in G implies the exis- tence of a corresponding tree in G XA of the shape in <ref type="figure">Figure 3</ref>(c). Adding this tree to the existing n-tree derivation yields a new n + 1 tree deriva- tion corresponding to the last n + 1 steps of the TTLD. <ref type="bibr">4</ref> In the other direction, if the n + 1th tree 5 of a derivation in G XA is of the shape in <ref type="figure">Figure  3</ref>(c), then this implies the existence of a produc- tion in G of the shape in (12). By assumption the first n trees of the derivation in G XA correspond to some TTLD in G; by prepending the rule from (12) to this TTLD we obtain a new TTLD of length n + 1 which corresponds to the entire n + 1 tree derivation in G XA . Finally, consider the case where the TTLD is only n + 1 steps long. The first step must involve a rule of the form</p><formula xml:id="formula_21">(13) X → α 1 Y 1 β 1 , A → C 1 α 2</formula><p>The existence of such a rule implies the existence of a corresponding tree in G XA of the shape in <ref type="figure">Figure 3</ref>(d). Adding this tree to the derivation which corresponds to the last n steps of the TTLD yields a new n+1 tree derivation corresponding to the entire n + 1 step TTLD. In the other direction, if the last tree of an n + 1 tree derivation in G A is of the shape in <ref type="figure">Figure 3(d)</ref>, then this implies the <ref type="bibr">4</ref> It is easy to verify by inspection of <ref type="figure">Figure 3</ref> that when- ever one rule from G can be applied to the output of another rule, then the tree pairs in GXA which correspond to these rules can compose with one another. Thus we can add the new tree to the existing derivation and be assured that it will compose with one of the trees that is already present. <ref type="bibr">5</ref> Although trees in GXA may contain symbols from the nonterminal alphabet of G, these symbols belong to the ter- minal alphabet in GXA. Only nonterminals in NXA will be involved in this derivation, and by construction there is at most one such nonterminal per tree. Thus a well-formed derivation structure in GXA will never branch, and we can refer to the n + 1th tree pair as the one which is at depth n in the derivation structure. existence of a production in G of the shape in <ref type="bibr">(13)</ref>. By assumption the first n trees of the derivation in G XA correspond to some TTLD in G; by prepend- ing the rule from (13) to this TTLD we obtain a new TTLD of length n + 1 which corresponds to the entire n + 1 tree derivation in G XA .</p><p>Taken together, these cases establish a one-to- one correspondence between derivations in G XA and TTLDs which start from X, A; in turn they confirm that G XA generates the desired language L XA .</p><p>Once we have constructed an intermediate grammar G XA for each X, A ∈ N \ {S}, we ob- tain the final STAG H as follows:</p><p>1. Convert the input SCFG G to an equivalent STAG. For each rule 3. For every X, A ∈ N , in all tree pairs where the target tree's leftmost leaf is labeled with A and this node is linked to an X, replace this occurrence of A with S XA . Also replace the linked node in the source tree.</p><formula xml:id="formula_22">A 1 → α 1 , A 2 → α 2 , where A i ∈ N , α i ∈ (N ∪ Σ) * ,</formula><p>4. For every X, A ∈ N , let R XA be the set of all tree pairs rooted in S XA , and let T XA be the set of all tree pairs whose target tree's leftmost leaf is labeled with S XA . For ev- ery s, t ∈ T XA and every s , t ∈ R XA , substitute or adjoin s and t into the linked S XA nodes in s and t, respectively. Add the derived trees to H.</p><p>5. For all X, A ∈ N , let T XA be defined as above. Remove all tree pairs in T XA from H.</p><p>6. For all X, A ∈ N , let R XA be defined as above. Remove all tree pairs in R XA from H.</p><p>We now claim that H generates the same lan- guage as the original grammar G, and all of the target trees in H are prefix lexicalized.</p><p>The first claim follows directly from the con- struction.</p><p>Step 1 merely rewrites the grammar in a new formalism. From Lemma 1 it is clear that steps 2-3 do not change the generated language: the set of string pairs generable from a pair of S XA nodes is identical to the set generable from X, A in the original grammar.</p><p>Step 4 replaces some nonterminals by all possible alternatives; steps 5- 6 then remove the trees which were used in step 4, but since all possible combinations of these trees have already been added to the grammar, remov- ing them will not alter the language.</p><p>The second claim follows from inspection of the tree pairs generated in <ref type="figure">Figure 3</ref>. Observe that, by construction, for all X, A ∈ N every target tree rooted in S XA is prefix lexicalized. Thus the trees created in step 4 are all prefix lexicalized variants of non-lexicalized tree pairs; steps 5-6 then re- move the non-lexicalized trees from the grammar. <ref type="figure" target="#fig_3">Figure 5</ref> gives an example of this transformation applied to a small grammar. Note how A nodes at the left edge of the target trees end up rewritten as S AA nodes, as per step 4 of the transformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Complexity &amp; Formal Properties</head><p>Our conversion generates a subset of the class of prefix lexicalized STAGs in regular form, which we abbreviate to PL-RSTAG (regular form for TAG is defined in <ref type="bibr" target="#b19">Rogers 1994)</ref>. This section dis- cusses some formal properties of PL-RSTAG.</p><p>Generative Capacity PL-RSTAG is weakly equivalent to the class of ε-free, chain-free SCFGs: this follows immediately from the proof that our transformation does not change the lan- guage generated by the input SCFG. Note that ev- ery TAG in regular form generates a context-free language <ref type="bibr" target="#b19">(Rogers, 1994)</ref>.</p><p>Alignments and Reordering PL-RSTAG gen- erates the same set of reorderings (alignments) as SCFG. Observe that our transformation does not cause nonterminals which were linked in the orig- inal grammar to become unlinked, as noted for ex- ample in <ref type="figure" target="#fig_2">Figure 4</ref>. Thus subtrees which are gener- Grammar |G| |H| % of G prefix lexicalized log |G| (|H|) Siahbani and Sarkar (2014a) (Zh-En) 18.5M 23.6T 63% 1.84 Example <ref type="formula">(7)</ref> 6 14 66%</p><formula xml:id="formula_23">S → B 2 cA 1 , S → A 1 cB 2 A → B 2 cA 1 , A → A 1 cB 2 A → a, A → a B → b, B → b S B ↓ 1 c S AA a , S S AA a c B ↓ 1 A B ↓ 1 c S AA A AA 2 a , A S AA a A AA ↓ 2 c B ↓ 1 S B ↓ 1 c S AA A AA 2 a , S S AA a A AA ↓ 2 c B ↓ 1 A B ↓ 1 c S AA a , A S AA a c B ↓ 1 A AA 1 B ↓ 2 c A AA * , A AA c B ↓ 2 A AA ↓ 1 A AA B ↓ 1 c A AA * ,</formula><p>1.47 ITG (10000 translation pairs) 10,003 170,000 99.97% 1.31 <ref type="table">Table 1</ref>: Grammar sizes before and after prefix lexicalization, showing O(n 2 ) size increase instead of the worst case O(n 3 ). |G| and |H| give the grammar size before and after prefix lexicalization; log |G| |H| is the increase as a power of the initial size.</p><p>We also show the percentage of productions which are already prefix lexicalized in G.</p><p>ated by linked nonterminals in the original gram- mar will still be generated by linked nonterminals in the final grammar, so no reordering information is lost or added. <ref type="bibr">6</ref> This result holds despite the fact that our transformation is only applicable to chain- free grammars: chain rules cannot introduce any reorderings, since by definition they involve only a single pair of linked nonterminals.</p><p>Grammar Rank If the input SCFG G has rank k, then the STAG H produced by our transforma- tion has rank at most 2k. To see this, observe that the construction of the intermediate grammars in- creases the rank by at most 1 (see <ref type="figure">Figure 3(b)</ref>). When a prefix lexicalized tree is substituted at the left edge of a non-lexicalized tree, the link on the substitution site will be consumed, but up to k + 1 new links will be introduced by the substituting tree, so that the final tree will have rank at most 2k.</p><p>In the general case, rank-k STAG is more pow- erful than rank-k SCFG; for example, a rank-4 SCFG is required to generate the reordering in <ref type="bibr" target="#b30">Wu, 1997)</ref>, but this reordering is captured by the <ref type="bibr">6</ref> Although we consume one link whenever we substitute a prefix lexicalized tree at the left edge of an unlexicalized tree, that link can still be remembered and used to reconstruct the reorderings which occurred between the two sentences. following rank-3 STAG:</p><formula xml:id="formula_24">S → A 1 B 2 C 3 D 4 , S → C 3 A 1 D 4 B 2 (</formula><formula xml:id="formula_25">S X A ↓ 1 X 2 C ↓ 3 , S C ↓ 3 A ↓ 1 X ↓ 2 X B ↓ 1 X * D ↓ 2 , X D ↓ 2 B ↓ 1</formula><p>For this reason, we speculate that it is possible to further transform the grammars produced by our lexicalization in order to reduce their rank, but the details of this transformation remain as future work. This potentially poses a solution to an issue raised by <ref type="bibr" target="#b27">Siahbani and Sarkar (2014b)</ref>. On a Chinese-English translation task, they find that sentences like (15) involve reorderings which can- not be captured by a rank-2 prefix lexicalized SCFG: <ref type="bibr">(15)</ref> T¯ a bˇuch¯bˇuch¯ ong shu¯ o , liánhé zhèngfˇzhèngfˇu m` uqiánzhùangkù ang wěnd`wěnd`ıng ...</p><p>He added that the coalition government is now in stable condition ...</p><p>If rank-k PL-RSTAG is more powerful than rank-k SCFG, using a PL-RSTAG here would permit cap- turing more reorderings without using grammars of higher rank.</p><p>Parse Complexity Because the grammar pro- duced is in regular form, each side can be parsed in time O(n 3 ) ( <ref type="bibr" target="#b19">Rogers, 1994)</ref>, for an overall parse complexity of O(n 3k ), where n is sentence length and k is the grammar rank.</p><p>Grammar Size and Experiments If H is the PL-RSTAG produced by applying our transforma- tion to an SCFG G, then H contains O(|G| 3 ) el- ementary tree pairs, where |G| is the number of synchronous productions in G. When the set of nonterminals N is small compared to |G|, a tighter bound is given by O(|G| 2 |N | 2 ). <ref type="table">Table 1</ref> shows the actual size increase on a vari- ety of grammars: here |G| is the size of the ini- tial grammar, |H| is the size after applying our transformation, and the increase is expressed as a power of the original grammar size. We apply our transformation to the grammar from Siahbani and Sarkar (2014a), which was created for a Chinese- English translation task known to involve complex reorderings that cannot be captured by PL-SCFG ( <ref type="bibr" target="#b27">Siahbani and Sarkar, 2014b</ref>). We also consider the grammar in (7) and an ITG (Wu, 1997) con- taining 10,000 translation pairs, which is a gram- mar of the sort that has previously been used for word alignment tasks (cf Zhang and Gildea 2005). We always observe an increase within O(|G| 2 ) rather than the worst-case O(|G| 3 ), because |N | is small relative to |G| in most grammars used for NLP tasks.</p><p>We also investigated how the proportion of pre- fix lexicalized rules in the original grammar affects the overall size increase. We sampled grammars with varying proportions of prefix lexicalized rules from the grammar in Siahbani and Sarkar (2014a); <ref type="table" target="#tab_3">Table 2</ref> shows the result of lexicalizing these sam- ples. We find that the worst case size increase occurs when 50% of the original grammar is al- ready prefix lexicalized. This is because the size increase depends on both the number of prefix lex- icalized trees in the intermediate grammars (which grows with the proportion of lexicalized rules) and the number of productions which need to be lexi- calized (which shrinks as the proportion of prefix lexicalized rules increases). At 50%, both factors contribute appreciably to the grammar size, anal- ogous to how the function f (x) = x(1 − x) takes its maximum at x = 0.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>|G| |H|</head><p>% of G prefix lexicalized log |G| (|H|) 15k 42.4M 10%</p><p>1.83 15k 74.9M 20%</p><p>1.89 15k 97.8M 30%</p><p>1.91 15k 112M 40%</p><p>1.93 15k 118M 50%</p><p>1.93 15k 114M 60%</p><p>1.93 15k 102M 70%</p><p>1.92 15k 78.2M 80%</p><p>1.89 15k 43.6M 90%</p><p>1.83 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Applications</head><p>The LR decoding algorithm from <ref type="bibr" target="#b29">Watanabe et al. (2006</ref>) relies on prefix lexicalized rules to gener- ate a prefix of the target sentence during machine translation. At each step, a translation hypoth- esis is expanded by rewriting the leftmost non- terminal in its target string using some grammar rule; the prefix of this rule is appended to the ex- isting translation and the remainder of the rule is pushed onto a stack, in reverse order, to be pro- cessed later. Translation hypotheses are stored in stacks according to the length of their translated prefix, and beam search is used to traverse these hypotheses and find a complete translation. Dur- ing decoding, the source side is processed by an Earley-style parser, with the dot moving around to process nonterminals in the order they appear on the target side. Since the trees on the target side of our trans- formed grammar are all of depth 1, and none of these trees can compose via the adjunction oper- ation, they can be treated like context-free rules and used as-is in this decoding algorithm. The only change required to adapt LR decoding to use a PL-RSTAG is to make the source side use a TAG parser instead of a CFG parser; an Earley-style parser for TAG already exists <ref type="bibr" target="#b13">(Joshi and Schabes, 1997)</ref>, so this is a minor adjustment.</p><p>Combined with the transformation in Section 4, this suggests a method for using LR decoding without sacrificing translation quality. Previously, LR decoding required the use of heuristically gen- erated PL-SCFGs, which cannot model some re- orderings ( <ref type="bibr" target="#b26">Siahbani and Sarkar, 2014a)</ref>. Now, an SCFG tailored for a translation task can be trans- formed directly to PL-RSTAG and used for decod-ing; unlike a heuristically induced PL-SCFG, the transformed PL-RSTAG will generate the same language as the original SCFG which is known to handle more reorderings.</p><p>Note that, since applying our transformation may double the rank of a grammar, this method may prove prohibitively slow. This highlights the need for future work to examine the genera- tive power of rank-k PL-RSTAG relative to rank- k SCFG in the interest of reducing the rank of the transformed grammar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Related Work</head><p>Our work continues the study of TAGs and lexical- ization (e.g. <ref type="bibr" target="#b12">Joshi et al. 1975;</ref><ref type="bibr" target="#b21">Schabes and Waters 1993)</ref>. <ref type="bibr" target="#b22">Schabes and Waters (1995)</ref> show that TAG can strongly lexicalize CFG, whereas CFG only weakly lexicalizes itself; we show a similar re- sult for SCFGs. <ref type="bibr" target="#b15">Kuhlmann and Satta (2012)</ref> show that TAG is not closed under strong lexicalization, and <ref type="bibr" target="#b17">Maletti and Engelfriet (2012)</ref> show how to strongly lexicalize TAG using simple context-free tree grammars (CFTGs).</p><p>Other extensions of GNF to new grammar for- malisms include Dymetman (1992) for definite clause grammars, <ref type="bibr" target="#b9">Fernau and Stiebe (2002)</ref> for CF valence grammars, and <ref type="bibr" target="#b8">Engelfriet et al. (2017)</ref> for multiple CFTGs. Although multiple CFTG sub- sumes SCFG (and STAG), Engelfriet et al.'s re- sult appears to guarantee only that some side of every synchronous production will be lexicalized, whereas our result guarantees that it is always the target side that will be prefix lexicalized.</p><p>Lexicalization of synchronous grammars was addressed by <ref type="bibr" target="#b31">Zhang and Gildea (2005)</ref>, but they consider lexicalization rather than prefix lexical- ization, and they only consider SCFGs of rank 2. They motivate their results using a word alignment task, which may be another possible application for our lexicalization.</p><p>Analogous to our closure result, Aho and Ull- man <ref type="bibr">(1969)</ref> prove that SCFG does not admit a nor- mal form with bounded rank like Chomsky normal form.</p><p>Blum and Koch (1999) use intermediate gram- mars like our G XA s to transform a CFG to GNF. Another GNF transformation <ref type="bibr" target="#b20">(Rosenkrantz, 1967)</ref> is used by <ref type="bibr" target="#b22">Schabes and Waters (1995)</ref> to define Tree Insertion Grammars (which are also weakly equivalent to CFG).</p><p>We rely on <ref type="bibr" target="#b19">Rogers (1994)</ref> for the claim that our transformed grammars generate context-free languages despite allowing wrapping adjunction; an alternative proof could employ the results of <ref type="bibr" target="#b28">Swanson et al. (2013)</ref>, who develop their own context-free TAG variant known as osTAG. <ref type="bibr" target="#b14">Kaeshammer (2013)</ref> introduces the class of syn- chronous linear context-free rewriting systems to model reorderings which cannot be captured by a rank-2 SCFG. In the event that rank-k PL-RSTAG is more powerful than rank-k SCFG, our work can be seen as an alternative approach to the same problem.</p><p>Finally, <ref type="bibr" target="#b18">Nesson et al. (2008)</ref> present an algo- rithm for reducing the rank of an STAG on-the-fly during parsing; this presents a promising avenue for proving a smaller upper bound on the rank in- crease caused by our transformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion and Future Work</head><p>We have demonstrated a method for prefix lexi- calizing an SCFG by converting it to an equiv- alent STAG. This process is applicable to any SCFG which is ε-and chain-free. Like the original GNF transformation for CFGs our construction at most cubes the grammar size, though when ap- plied to the kinds of synchronous grammars used in machine translation the size is merely squared. Our transformation preserves all of the alignments generated by SCFG, and retains properties such as O(n 3k ) parsing complexity for grammars of rank k. We plan to verify whether rank-k PL-RSTAG is more powerful than rank-k SCFG in future work, and to reduce the rank of the transformed grammar if possible. We further plan to empirically evalu- ate our lexicalization on an alignment task and to offer a comparison against the lexicalization due to <ref type="bibr" target="#b31">Zhang and Gildea (2005)</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: An example of synchronous rewriting in an STAG (left) and the resulting tree pair (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>we add a tree pair of the form in Figure 3(c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 gives</head><label>4</label><figDesc>Figure 4 gives a concrete example of constructing an intermediate grammar tree pair on the basis of an SCFG rule. Lemma 1. G XA generates the language L XA .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: An SCFG and the STAG which prefix lexicalizes it. Non-productive trees have been omitted.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Effect of prefix lexicalized rules in G on final gram-
mar size. 

</table></figure>

			<note place="foot" n="2"> All of the proofs in this work admit a symmetrical variant which prefix lexicalizes the source side instead of the target. We are not aware of any applications in NLP where sourceside prefix lexicalization is useful, so we do not address this case.</note>

			<note place="foot" n="3"> In all cases, we assume that symbols in N (not NXA) retain any links they bore in the original grammar, even though they belong to the terminal alphabet in GXA and therefore do not participate in rewriting operations. In the final constructed grammar, these symbols will belong to the nonterminal alphabet again, and the links will function normally.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors wish to thank the anonymous re-viewers for their helpful comments. The re-search was also partially supported by the Nat-ural Sciences and Engineering Research Coun-cil of Canada (NSERC RGPIN-2018-06437 and RGPAS-2018-522574) to the second author. We dedicate this paper to the memory of Prof. Ar-avind Joshi; a short hallway conversation with him at ACL 2014 was the seed for this paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Syntax directed translations and the pushdown assembler</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alfred</forename><forename type="middle">V</forename><surname>Aho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><forename type="middle">D</forename><surname>Ullman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="56" />
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Context-free languages and pushdown automata</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean-Michel</forename><surname>Autebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Berstel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luc</forename><surname>Boasson</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=267846.267849" />
	</analytic>
	<monogr>
		<title level="m">Grzegorz Rozenberg and Arto Salomaa</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag New York, Inc</publisher>
			<date type="published" when="1997" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="111" to="174" />
		</imprint>
	</monogr>
	<note>Handbook of Formal Languages</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Language and Information: Selected Essays on their Theory and Application</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yehoshua</forename><surname>Bar-Hillel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Perles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eliahu</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Zeitschrift für Phonetik, Sprachwissenschaft und Kommunikationsforschung</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="116" to="150" />
			<date type="published" when="1961" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
	<note>On formal properties of simple phrase structure grammars</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Greibach normal form transformation revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Norbert</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Koch</surname></persName>
		</author>
		<idno type="doi">10.1006/inco.1998.2772</idno>
		<ptr target="https://doi.org/10.1006/inco.1998.2772" />
	</analytic>
	<monogr>
		<title level="j">Information and Computation</title>
		<imprint>
			<biblScope unit="volume">150</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="112" to="118" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The algebraic theory of context-free languages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noam</forename><surname>Chomsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcel-Paul</forename><surname>Schützenberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Logic and the Foundations of Mathematics</title>
		<editor>P. Braffort and D. Hirschberg</editor>
		<imprint>
			<date type="published" when="1963" />
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="118" to="161" />
		</imprint>
	</monogr>
	<note>Computer Programming and Formal Systems</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Bisimulation equivalence is decidable for all context-free processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Søren</forename><surname>Christensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hüttel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Colin</forename><surname>Stirling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Computation</title>
		<imprint>
			<biblScope unit="volume">121</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="143" to="148" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Synchronous context-free grammars and optimal linear parsing strategies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierluigi</forename><surname>Crescenzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Gildea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Marino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gianluca</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Satta</surname></persName>
		</author>
		<idno type="doi">10.1016/j.jcss.2015.04.003</idno>
		<ptr target="https://doi.org/10.1016/j.jcss.2015.04.003" />
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1333" to="1356" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A generalized greibach normal form for definite clause grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Dymetman</surname></persName>
		</author>
		<idno type="doi">10.3115/992066.992126</idno>
		<ptr target="https://doi.org/10.3115/992066.992126" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th Conference on Computational Linguistics</title>
		<meeting>the 14th Conference on Computational Linguistics<address><addrLine>Stroudsburg, PA, USA, COLING &apos;92</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="366" to="372" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Multiple context-free tree grammars: Lexicalization and characterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joost</forename><surname>Engelfriet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Maletti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sebastian</forename><surname>Maneth</surname></persName>
		</author>
		<ptr target="http://arxiv.org/abs/1707.03457" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sequential grammars and automata with valences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henning</forename><surname>Fernau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ralf</forename><surname>Stiebe</surname></persName>
		</author>
		<ptr target="https://doi.org/10.1016/" />
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">276</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="377" to="405" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On the covering and reduction problems for contextfree grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><forename type="middle">N</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">A</forename><surname>Harrison</surname></persName>
		</author>
		<idno type="doi">10.1145/321724</idno>
		<ptr target="https://doi.org/10.1145/321724" />
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="675" to="698" />
			<date type="published" when="1972" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A new normal-form theorem for context-free phrase structure grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sheila</forename><forename type="middle">A</forename><surname>Greibach</surname></persName>
		</author>
		<idno type="doi">10.1145/321250.321254</idno>
		<ptr target="https://doi.org/10.1145/321250.321254" />
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="42" to="52" />
			<date type="published" when="1965" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Tree adjunct grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aravind</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leon</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masako</forename><surname>Takahashi</surname></persName>
		</author>
		<ptr target="https://doi.org/10.1016/" />
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="136" to="163" />
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Rozenberg and A. Salomaa, editors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aravind</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yves</forename><surname>Schabes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Beyond Words</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag New York, Inc</publisher>
			<date type="published" when="1997" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="69" to="124" />
		</imprint>
	</monogr>
	<note>Tree-adjoining grammars</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Synchronous linear context-free rewriting systems for machine translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miriam</forename><surname>Kaeshammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">. ; M</forename><surname>Carpuat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Specia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/W/W13/W13-0808.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventh Workshop on Syntax, Semantics and Structure in Statistical Translation, SSST@NAACL-HLT 2013</title>
		<meeting>the Seventh Workshop on Syntax, Semantics and Structure in Statistical Translation, SSST@NAACL-HLT 2013<address><addrLine>Atlanta, GA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013-06-13" />
			<biblScope unit="page" from="68" to="77" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Treeadjoining grammars are not closed under strong lexicalization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Kuhlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Satta</surname></persName>
		</author>
		<idno type="doi">10.1162/COLI_a_00090</idno>
		<ptr target="https://doi.org/10.1162/COLI_a_00090" />
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="617" to="629" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Syntax-directed transduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Philip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">E</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Stearns</surname></persName>
		</author>
		<idno type="doi">10.1145/321466.321477</idno>
		<ptr target="https://doi.org/10.1145/321466.321477" />
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="465" to="488" />
			<date type="published" when="1968" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Strong lexicalization of tree adjoining grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Maletti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joost</forename><surname>Engelfriet</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/P12-1053" />
	</analytic>
	<monogr>
		<title level="m">The 50th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting><address><addrLine>Jeju Island, Korea</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-07-08" />
			<biblScope unit="page" from="506" to="515" />
		</imprint>
	</monogr>
	<note>Long Papers. The Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Optimal k-arization of synchronous tree-adjoining grammar</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rebecca</forename><surname>Nesson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giorgio</forename><surname>Satta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><forename type="middle">M</forename><surname>Shieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACL-08: HLT</title>
		<meeting>ACL-08: HLT<address><addrLine>Columbus, Ohio</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="604" to="612" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Capturing CFLs with tree adjoining grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Rogers</surname></persName>
		</author>
		<idno type="doi">10.3115/981732</idno>
		<ptr target="https://doi.org/10.3115/981732" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics</title>
		<meeting>the 32nd Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics<address><addrLine>Stroudsburg, PA, USA, ACL &apos;94</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="155" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Matrix equations and normal forms for context-free grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rosenkrantz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Association for Computing Machinery</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="501" to="507" />
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Lexicalized context-free grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yves</forename><surname>Schabes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">C</forename><surname>Waters</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/P/P93/P93-1017.pdf" />
	</analytic>
	<monogr>
		<title level="m">31st Annual Meeting of the Association for Computational Linguistics</title>
		<editor>L. Schubert</editor>
		<meeting><address><addrLine>Columbus, Ohio, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-06" />
			<biblScope unit="page" from="121" to="129" />
		</imprint>
		<respStmt>
			<orgName>Ohio State University</orgName>
		</respStmt>
	</monogr>
	<note>Proceedings.. ACL</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Tree insertion grammar: Cubic-time, parsable formalism that lexicalizes context-free grammar without changing the trees produced</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yves</forename><surname>Schabes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">C</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="479" to="513" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A representation theorem for algebraic and context-free power series in noncommuting variables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eliahu</forename><surname>Shamir</surname></persName>
		</author>
		<ptr target="https://doi.org/10" />
	</analytic>
	<monogr>
		<title level="j">Information and Control</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1/2</biblScope>
			<biblScope unit="page" from="239" to="254" />
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Restricting the weakgenerative capacity of synchronous tree-adjoining grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stuart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shieber</surname></persName>
		</author>
		<ptr target="https://doi.org/10.1111/j" />
	</analytic>
	<monogr>
		<title level="j">Computational Intelligence</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="371" to="385" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Efficient left-to-right hierarchical phrase-based translation with improved reordering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maryam</forename><surname>Siahbani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Baskaran</forename><surname>Sankaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anoop</forename><surname>Sarkar</surname></persName>
		</author>
		<ptr target="http://www.aclweb.org/anthology/D13-1110" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2013 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1089" to="1099" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Expressive hierarchical rule extraction for left-to-right translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maryam</forename><surname>Siahbani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anoop</forename><surname>Sarkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th Biennial Conference of the Association for Machine Translation in the Americas (AMTA-2014)</title>
		<meeting>the 11th Biennial Conference of the Association for Machine Translation in the Americas (AMTA-2014)<address><addrLine>Vancouver, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Two improvements to left-to-right decoding for hierarchical phrase-based machine translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maryam</forename><surname>Siahbani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anoop</forename><surname>Sarkar</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/D/D14/D14-1028.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing</title>
		<editor>A. Moschitti, B. Pang, and W. Daelemans</editor>
		<meeting>the 2014 Conference on Empirical Methods in Natural Language Processing<address><addrLine>Doha, Qatar</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-10-25" />
			<biblScope unit="page" from="221" to="226" />
		</imprint>
	</monogr>
	<note>A meeting of SIGDAT, a Special Interest Group of the ACL. ACL</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A context free TAG variant</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Swanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Elif</forename><surname>Yamangil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Charniak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><forename type="middle">M</forename><surname>Shieber</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/P/P13/P13-1030.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, ACL 2013</title>
		<meeting>the 51st Annual Meeting of the Association for Computational Linguistics, ACL 2013<address><addrLine>Sofia, Bulgaria</addrLine></address></meeting>
		<imprint>
			<publisher>Long Papers. The Association for Computational Linguistics</publisher>
			<date type="published" when="2013-08" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="302" to="310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Left-to-right target generation for hierarchical phrase-based translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taro</forename><surname>Watanabe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hajime</forename><surname>Tsukada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hideki</forename><surname>Isozaki</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/P06-1098" />
	</analytic>
	<monogr>
		<title level="m">ACL 2006, 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference</title>
		<editor>N. Calzolari, C. Cardie, and P. Isabelle</editor>
		<meeting><address><addrLine>Sydney, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-07" />
			<biblScope unit="page" from="17" to="21" />
		</imprint>
	</monogr>
	<note>The Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Stochastic inversion transduction grammars and bilingual parsing of parallel corpora</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dekai</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="377" to="403" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Stochastic lexicalized inversion transduction grammar for alignment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hao</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Gildea</surname></persName>
		</author>
		<ptr target="http://aclweb.org/anthology/P/P05/P05-1059.pdf" />
	</analytic>
	<monogr>
		<title level="m">ACL 2005, 43rd Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference</title>
		<editor>K. Knight, H. T. Ng, and K. Oflazer</editor>
		<meeting><address><addrLine>University of Michigan, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-06-30" />
			<biblScope unit="page" from="475" to="482" />
		</imprint>
	</monogr>
	<note>The Association for Computational Linguistics</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
